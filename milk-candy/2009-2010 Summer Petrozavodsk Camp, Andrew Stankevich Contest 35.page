# Info

Date: 2017.10.04 12:00-17:00

[Link](http://www.bnuoj.com/v3/contest_show.php?cid=9250)

# Solutions

## A 12:30PM

upsolved by quailty

---

quailty's solution

先枚举$A$的时间段的全排列，计算出每个关于$A$的信息对应的实际时间，同理枚举$B$的时间段的全排列，然后合并信息即可。需要注意的是给出的信息不保证时间落在对应时间段内，此时直接无解。

## B Blackjack

unsolved

## C Spending Budget

solved by Jove, sk, upsolved by none

---

Jove's solution

二分答案，也就是二分一个花完所有钱的$ddl$，然后每个项目从$ddl$倒着开始花钱，可以理解为已知$ddl$的情况下，所有钱都是在靠近$ddl$这些天连续花完的，即把所有任务都推到右边界。

对于所有的开始时间从小到大排序，判断当前时间到$ddl$，是否花完了相应份的钱，总的复杂度是$O(nm\log(n \times 10^9))$。

## D Circuit Design

upsolved by quailty

---

quailty's solution

先求出每个节点初态和终态，然后考察是否$safe$，对于一个$out$和$not$节点，$safe$状态直接继承前趋的状态，对于$and$节点，如果存在一个前趋初态和终态都是$0$且$safe$，那么当前节点值总是$0$也就是$safe$，除去这个情况之后只要有一个前趋$unsafe$就必然$unsafe$，然后如果两个前趋一个是$1$变成$0$一个是$0$变成$1$也会导致当前节点$unsafe$，对于$out$节点可以类似分析，沿着拓扑序做一遍即可。

## E Strange Digits

upsolved by Jove

---

Jove's solution

先进行大数进制转换，把给的十进制数换成相应的$b$进制数。

然后考虑数位dp，$dp[i][j]$表示当前从低位计算到第$i$位，向高位借了$j$的方案数，判断到最高位时，没有借位即为一个解。因为只需要确定是一个解还是多个解还是无解，所以方案数要跟$2$取$min$，否则方案数会爆$int$。

对于输出方案，只需要再进行一次数位$dp$一样的$dfs$过程，但是只走满足题意且$dp[i][j]>0$的一个分支找到任意一组解即可。

## F Graph Factorization

upsolved by quailty

---

quailty's solution

最坏情况就是询问$2n-1$个$1$，原问题相当于将$K_{2n}$分解为$2n-1$个不相交的完美匹配。

为了方便讨论，不妨认为点的标号是$0,1,2,\dots,2n-1$，对于$s<n$，考虑所有连接$i$和$(i+s) \mod 2n$的边，这些边构成$gcd(s,2n)$个长为$\frac{2n}{gcd(s,2n)}$的环，如果长度是偶数，就能得到两种完美匹配。

现在处理长度是奇数的环，设$2^t||2n$，那么环长是奇数当且仅当$2^t|s$，考虑构造这样一个完美匹配，先枚举所有满足$\frac{2n}{2^t}|i$的$i$，当$i<n$时连接$i$和$i+n$，同时对于满足$2^t|s$的$s$，连接$(i+\frac{s}{2}) \mod 2n$和$(i-\frac{s}{2}) \mod 2n$。在得到这样一个完美匹配后，通过旋转生成出其余$\frac{n}{2^t}-1$个完美匹配，可以发现这些匹配恰好构成了所有连接$i$和$(i+s) \mod 2n\ (2^t|s \vee s=n)$的边的一个划分。

## G Permutations

solved by quailty, upsolved by none

---

quailty's solution

只需求出满足字典序不大于给定序列的排列数，枚举排列和原序列的最长公共前缀$LCP$，那么排列的第$|LCP|+1$位要小于原序列的对应位，枚举这一位的可行值并将剩余位排列数加进答案即可，随手写个$Java$大数。

## H Robots' Art

upsolved by Jove

---

Jove's solution

使用简单的贪心策略可以证明最优解不超过$O(n/k)$，于是$dp[i][j]$表示答案串长度为$i$且和第一个串贪心匹配到$j$时能和第二个串贪心匹配到的最远位置，转移枚举$O(k)$枚举下一个字符，复杂度$O(n^2)$。

## I Roof Skeleton

upsolved by sk

---

sk's solution

点数很小，用计算几何的方法暴力模拟缩圈的过程，每次求出相邻两个角平分线的交点，记这些交点到对应边的最短距离为$dis$，那么让多边形每条边都往内平行移动$dis$距离，再用线段交求出新的多边形上的点，并去重，以上操作最多做不超过$n$次，直到缩成一个点或者一条线段。

## J RSA

upsolved by quailty

---

quailty's solution

记$a=m^3 \mod n, b=(m+1)^3 \mod n$，经过简单推导可以得到$m=\frac{2a+b-1}{b-a+2} \mod n$，这是必要条件，解出$m$之后要再代回去验证充分性，还是要写个$Java$大数。

# Replay

`Q` 日常迟到。开场 `J` 正着读，`K` 凭感觉读，并成功定位到 G 题签到题。

这时 `Q` 来了，经过和 `K` 的一番讨论，决定让 `Q` 写Java大数。

`J` 读了 A 题发现是个模拟，大致思路有了，但是细节很麻烦，决定先放着后面再写，然后继续跟榜读题。

`Q` 把 G 题过了以后，`J` 和 `K` 把读的 C、F、J 题意分享给 `Q`， `Q` 决定去玩 F 题构造。

此时只有 B 题和 D 题没读且没人通过，所以暂停了读题，`J` 开始思考 C 题，`K` 沉迷思考 I 题几何。

过了一会，`J` 想到了 C 题的解法，`K` 也想到了 I 题的解法，三人都觉得很合理，不过觉得几何题应该放到后面写，所以先让 `K` 去写 C 题了，并过掉。

`Q` 还在奋力的玩构造，看榜发现 E 题过了很多，讨论了一下是个数位dp，`J` 决定接锅。

由于今天中秋节，`K` 跑路~~陪妹子~~过中秋~~并顺势脱单~~，临走前让 `K` 写完了 E 题的进制转换部分，然后 `K` 就溜了溜了，本打算让 `K` 写的 I 题几何也就鸽了。

`J` 奋力写 E 题，`Q` 奋力玩构造，但是两个人好像都不在状态，然后就开始了崩盘的节奏。

`J` 写了将近一个小时，终于写出来了 E 题，感觉十分优美合理，但是wa掉了，和 `Q` 一起debug了半个小时还是wa。

这时还剩一个半小时，决定让 `Q` 开 A 题模拟，`J` 继续努力debug但还是没看出什么来。

然而这个 A 题有些毒瘤，有些输入不合法的地方没在题面中描述出来，wa了几发也无力挽回局面了。

最后弃疗了去看数据debug，调了调把 A 题和 E 题各自补了。

## Jove

不要过于追求代码简洁优美，想当然的合并一些判断，能用代码解决的就不要自己脑补。