Info
====

Date: 2017.09.16 12:00-17:00

[Link](https://www.jisuanke.com/contest/876)

Solutions
=========

A Tree
------

upsolved by quailty, sk

------------------------------------------------------------------------

quailty's solution

矩阵乘法压位显然，每个询问$u \rightarrow v$拆成$u \rightarrow lca$和$lca \rightarrow v$（不包括$lca$），在树上DFS一遍，从$u$子树出来时处理$u \rightarrow v$和$v \rightarrow u(v \in T_u)$的询问，类似tarjan求LCA的思路，带权并查集维护$T_u$内的点到$u$的两个方向的路径矩阵乘积，完成$u$处的询问后将$u$的在并查集上的根设为$fa_u$，复杂度$O((n+q)\alpha(n)64^2)$。

感谢Claris同学提供思路。考虑树分治，询问过根直接处理，否则递归到子树中，复杂度$O((n\log{n}+q)64^2)$。

B Coin
------

solved by quailty, upsolved by none

------------------------------------------------------------------------

quailty's solution

考虑$f(x)=(\frac{p-q}{p}+\frac{q}{p}x)^k$，所求即为偶次项系数之和，容易知道$ans=\frac{f(1)+f(-1)}{2}=\frac{1}{2}(1-(\frac{p-2q}{p})^k)$。

C Sum
-----

solved by quailty, upsolved by none

------------------------------------------------------------------------

quailty's solution

构造$k=1000000010000000...10000000(233个10000000)$，这相当于把$233$个$x$拼起来。

D Brain-baffling Game
---------------------

unsolved

E Maximum Flow
--------------

solved by quailty, upsolved by none

------------------------------------------------------------------------

quailty's solution

考虑最小割，$0 \rightarrow n-1$这条边一定要割，对于$0<i<n-1$，$0 \rightarrow i$和$i \rightarrow n-1$这两条边一定要割一条，不妨先割去较小的一条，考虑$n-1$的最高位，如果$i$这一位为0，那么割$0 \rightarrow i$，否则割$i \rightarrow n-1$，可以发现已经把$0$和$n-1$割开了，也就是已经找出了最小割，简单数位dp求出权值和即可。

F Trig Function
---------------

solved by quailty, upsolved by none

------------------------------------------------------------------------

quailty's solution

考虑$f_n(\cos x)=\cos(nx),g_n(\cos x)=\frac{\sin(nx)}{\sin x}$，可以得到$f_n(x)=xf_{n-1}(x)+(1-x^2)g_{n-1}(x),g_n(x)=xg_{n-1}(x)+f_{n-1}(x)$，于是可以构造一个元素是多项式的矩阵跑快速幂，FFT优化多项式乘法即可，复杂度$O(m\log{m}\log{n})$。

显然这个做法会TLE，所以赛中不是这么过的，根据[De Moivre's
formula](https://en.wikipedia.org/wiki/De_Moivre's_formula)，即$\cos(nx)+i\sin(nx)=(\cos x+i\sin x)^n$，二项式展开后考虑$x^m$项的系数，可以知道$ans=\sum_{p+2q=n,p+2r=m}(-1)^{q+r}\binom{n}{p}\binom{q}{r}$，式中出现的组合数可以递推预处理，复杂度$O(m\log{p})$，这里$O(\log{p})$是因为求逆元。

G Xor
-----

solved by sk, upsolved by none

------------------------------------------------------------------------

sk's solution

当$k \leq S$时，预处理出从$i$号点(包括自己)每次往根每次跳$j$步所经过的点的异或和，记为$dp[i][j]$，这部分复杂度是$O(nS)$，那么对于一个询问$(a,b,k)$，利用异或可减的性质，结合树上倍增就可以算出$a$到$LCA$这条路径的答案，从$LCA$到$b$算的方法一样，需要注意边界情况。当$k>S$时，最多要跳$n/S$步，每次跳还是用倍增，这部分复杂度是$O(n\log{n}/S)$。取$S=O(\sqrt{n\log{n}})$可以得到最优复杂度。

quailty's comment

------------------------------------------------------------------------

感谢Claris同学提供思路。$k$比较大时考虑树链剖分，轻边只有$O(\log{n})$条暴力跳即可，重链可以根据DFS序的连续性$O(1)$寻址，这部分复杂度是$O(n/S+\log{n})$。取$S=O(\sqrt{n})$可以得到最优复杂度。

H Music
-------

unsolved

I Barty's Computer
------------------

solved by quailty, upsolved by none

------------------------------------------------------------------------

quailty's solution

每个插入串等分为左右两半，对左半的正串排序，可以知道每个左半的正串的排名，对于左半的反串、右半的正反串同理，再加上一维长度，每个插入串实际是个五维点$(x,y,z,w,l)$，前四维均是$1$到$n$的排列，第五维只有$\leq 2000$种不同的值，每次询问相当于给出了每一维的限制，为了对每一维快速查询满足限制的点集，前四维考虑对值域分块维护前缀点集，第五维直接维护前缀点集，最后取个交即可，复杂度$O(\sum len\log{q}+q(\sqrt{q}+\sqrt{\sum len}+q/w))$。

J Easy Problem
--------------

upsolved by quailty

------------------------------------------------------------------------

quailty's solution

感谢skywalkert同学扫雷，操作3要求的是权值最小的$k$个连续子序列。

对于操作1和操作2，使用可持久化Treap维护各版本序列，对于操作3，抠出第$x$个序列中最小的$\min(k,n)$的数，这里$n$是序列长度，方法是每次取出全局最小值，并将这个最小值置为INF，重复$\min(k,n)$次，然后把这$k$个值作为区间$[l,l]$放进一个堆里，每次从堆中取出权值和最小的区间$[l,r]$，将区间$[l,r+1]$放入堆中，重复$k$次，复杂度$O((\sum n+\sum k+q)\log(\sum n)+\sum k\log(\sum k))$。

目前采用的是动态开内存的写法，为避免大量内存泄漏，需要通过引用计数和垃圾收集来回收内存。

Replay
======

`J` 去面试了，开场前 `Q` 和 `K` 在讨论要不要买 KFC 崩坏 3 特惠套餐，

开场 `Q` 倒着开始读，发现 J 题没法写就扔了，与此同时 `K` 读了 A
题一眼矩阵乘法压位之后倍增，`Q`
算了算复杂度表示不行，提出可以用并查集做，但是先放一边，

然后 `Q` 发现 C 题有人过，让 `K` 去跟，自己读了 H
题发现似乎又不会做，心情十分复杂，又看了看 G 题感觉是个比格思茅，给 `K`
讲了这两个题的题意之后随手打开 B 题并秒了，此时 `K` 表示 C
题过了很多但没啥思路，`Q` 看了看也秒了，

此时 `K` 已经读完 E 题，给 `Q` 讲了一下，但没啥想法，

于是 `Q` 去开 F 题，用力推了一个多项式递推式，准备冲上去矩阵快速幂 + FFT
优化多项式乘法，被理性阻止，冷静下来之后推了个求和式，给 `K`
讲了一遍并达成共识，写完就过了，

期间 `K` 读完 D 题和 I 题， `Q` 听了 I 题题意，表示可以转成五维数点然后
bitset 大力做，但是不好写，先放一边，

这时 `K` 手玩 E 题小数据得到了一个结论，`Q`
表示结论很对并给出了证明，数位 dp 写了一下就过了，

然后 `K` 开始写 G 题，`Q` 去想了想 D 题和 H
题，感觉根本没有思路，于是继续准备 A 题和 I 题，

后来 `K` 卡在 G 题的细节上，一直没过样例，`J` 面完试回来，和 `K`
一起看代码，改过样例一交就过了，

期间 `Q` 一直在写 I 题，各种难受，调了很久终于过了样例但是交上去 WA
了，先让 `K` 上去写 A 题预处理，自己给 `J`
讲了一遍思路和代码，发现有一个数组两维开反了，改完就过了，

同时 `K` 已经写好 A 的预处理部分，然后交给 `Q` 来写并查集做法，`J` 和
`K` 一直盯着屏幕并不时指出细节错误，但是最后并没有调过样例。

~~Replay 太难写了还是鸽了吧 ……~~

quailty
-------

比赛节奏控制不太好，开题需要更果断一点，虽然代码能力确实有所下降，但是不能看着难写就一直放着。

对于通过人数多得反常的题目可以考虑~~让队友~~冲暴力或者写假算法，不需要太过执着于真算法。

sk
--

关于 A
题，之前没写过求LCA的离线+tarjan做法，照着模板现学了一下，感觉如果我会这个做法的话在赛中应该能A掉这题。

C 题构造一时没想到...

E 题成功找对了式子，但不会写数位dp （QAQ）

还需要修炼啊
