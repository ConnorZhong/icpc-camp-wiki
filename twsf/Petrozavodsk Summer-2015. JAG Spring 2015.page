A. Balanced Paths \[jsy\]
=========================

树分治，维护子树反序搜索富余的左括号和正序搜索富余的右括号，拼起来就能算出答案。

B. Card Game Strategy \[zxa\]
=============================

问题就在于怎么处理出物品的背包，直接暴力压位DP没法找方案空间开不下。可以15个物品分成一组，每15个物品存一个一堆bitset，找方案每组物品里面直接$2^{15}$暴力。

$K > 300$的情况可以通过转化成不取哪些物品变成$n-K$，所以$K$可以只开到$300$。

C. Casino
=========

D. Content Delivery \[jsy\]
===========================

贪心，枚举根，然后每次删掉深度最深的一条链，每条链是一次传输。

E. Cost Performance Flow \[zxa\]
================================

最小费用流找出所有最短增广路，然后每做出一条总代价是关于它流多少的一个二次函数，找到对应极值即可。

就是分数比较需要用\_\_int128。

F. ICPC Teams \[jsy\]
=====================

暴力容斥，用并查集维护。

G. JAG-channel II \[zxa\]
=========================

状压DP，压哪些人回过帖，最后一个回帖的是谁，除此之外只需多压剩下$N-K$个帖子怎么排列就能还原整个序列。

最小字典序的话常规的倒着记忆化搜索就行了，状态转移最好提前预处理。

H. Kimagure Cleaner
===================

I. Midpoint \[zxa\]
===================

先把某条直线退化成点的情况暴力掉，再按直线的平行情况分类讨论，其中三条直线都平行且C正好在AB中间的情况需要用FFT。

J. New Game AI
==============

K. Runner and Sniper \[jsy\]
============================

先二分答案$V$，假设已经确定了最终速度判断是否合法，只需要判断能不能在激光扫到之前到达圆$O$，$O$的半径为$R = V / W$，此时激光的角速度和点的角速度是相同的。

设$X$为指向圆心的速度，$\sqrt{V^2 - X^2}$是指向切线的加速度，则要满足

$\int (\frac{W}{x} - \frac{\sqrt{V^2 -X^2}}{rx})dr \leq \theta,$
$\theta$是初始时点和激光的角度。

L. Wall Making Game \[zxa\]
===========================

暴力dp每个子矩阵的SG函数。
