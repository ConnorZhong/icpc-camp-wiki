[Day1](http://codeforces.com/gym/100735)
========================================

除了F都是水题。

F不推荐去写，看看题觉得会做就可以了

F.Ellipses
----------

维护两个序列，支持区间赋值，区间加，询问$\sum_l^r{a_i \times b_i}$。

如果某次加之后$a_i > A$或$a_i < 1$或$b_i > B$或$b_i < 1$，就要删掉这个位置，所以还要维护一个最大值和最小值，总之是可做的。

因为自作聪明WA掉了，然后就去上课了，回来才发现问题。

[Day2](http://codeforces.com/gym/100738)
========================================

这场比较有趣，也许可以拿出去上集训队训练。

F,G,H,I,J都是有点意思的题，但难度都不是很大。

F.Sequence of words
-------------------

给个字符串，很多询问，求长度为L的字典序第K小的字符串的起始下标，如果有多个可以输出任意一个。

构造出后缀数组，然后把询问离线，把后缀从长到短插到树状数组里，询问就是个查询第K小值。

G.Constant speed
----------------

待补

H.K-palindrome
--------------

给你K个base，很多询问，每次询问\[L,R\]区间内有多少个数至少在一个base下是回文数。

范围只有$10^8$，所以对每个base暴力出所有$\leq 10^8$的回文串，sort再unique一下，对每个询问二分查找即可。

I.Lazy mobile users
-------------------

一个比较常规的贪心，要从根遍历一棵树，每个点不能访问超过m次，问至多可以访问多少个点。

对每个子树计算两个东西，一个是如果走回来能走多少个点，一个是不走回来。

J.The craziness of Juvel
------------------------

给一堆模板串和一个文本串，每次可以修改一个文本串的位置，问每次修改后文本串共出现多少个模板串。

建出AC自动机，然后用线段树维护从每个状态走过这一段字符转移到的状态以及匹配数量。

[Day3](http://codeforces.com/gym/100739)
========================================

以下4个题目比较有趣，剩下的题要么非常简单，要么非常经典了。

E.Life as a Monster
-------------------

平面上有n个点，两点间的距离是切比雪夫距离，有m个操作，每次要么可以移动一个点的位置，要么询问从一个点出发到其他所有点的距离之和，强制在线。

把平面转45°就变成了哈密顿距离，两个维度独立分别拿平衡树维护。

H.Hard Molecules
----------------

给你n个点的度数，构造一个没有自环的联通图，以邻接矩阵形式给出。

首先随便构造出一棵生成树把图变成联通的，~~然后（我猜）就可以随便构造了~~。

如果不考虑联通，这个问题实际上是那种，有一个序列，每次可以选两个不同的数都减1，问能不能都减成0。

这个题的结论就是如果和为奇数或者最大值超过和的一半就无解，证明显然。

回到这个问题首先和为奇数的情况很容易排除，剩下的情况就是要让构造出生成树出来后的度数的最大值尽可能小，只要让每次选merge的时候都用度数最大的连即可。

J.Longest cheap palindrome
--------------------------

求一个串的偶数长度的最长回文子序列，如果某些区间内的点都被选则有一定代价，求代价小于某个值的最长长度。

f\[i\]\[j\]\[k\]\[l\]\[r\]表示左边到i右边到j已经匹配了k位左边连续匹配了l位右边连续匹配了r位的最小代价，暴力转移。

K.Easy vector
-------------

给定一个序列，一开始在1号位置，每一步可以选择往左走或往右走，每走一步会得到走到那个位置的得分。

有很多个询问，每次询问询问如果可以走x步能得到的最大得分。

明显肯定是走到一个位置后开始走一个二元环，所以可以枚举每一个环的起始位置，就可以计算出这时的得分，取最大的即可，这是对单次的。

把询问可以离线然后排个序，明显x大的的决策要比x小的更广，就有了决策单调性，可以用各种方法维护一段一段的决策空间，当然更好写的方法就是分治了。
