[A. A Two Floors Dungeon](http://acm.bnu.edu.cn/v3/contest_show.php?cid=6866#problem/A) \[jsy\]
===============================================================================================

$dis[x][y][floor][mask]$代表从起点到$(x,y)$，按了$mask$的开关集合且在$floor$层需要的最小步数，直接$bfs$就可以了。

[B. Area Folding](http://acm.bnu.edu.cn/v3/contest_show.php?cid=6866#problem/B) \[zxa\]
=======================================================================================

用Farmland的老方法抠出所有区域，答案就是所有面积中正数的部分（或者绝对值之和的一半）。

看了秘银的代码可以发现离散化所有点后可以枚举一条线段然后暴力找所有在线段上的点然后连边，我以前的写法是线段求交后给每条线段开个vector记录。相比之下前者更方便一些。

然后就是题目给出的误差非常松，随意eps也要设置地相对大一点，还有就是注意**量纲**的使用。

[C. Connect](http://acm.bnu.edu.cn/v3/contest_show.php?cid=6866#problem/C) \[jsy\]
==================================================================================

$dp[i][j][mask]$代表现在字符已经填到$(i,j)$这个格子了，轮廊线上有字符的状态为$mask$，转移的话枚举填或者不填即可。

[D. Do use segment](http://acm.bnu.edu.cn/v3/contest_show.php?cid=6866#problem/D) \[jsy\]
=========================================================================================

树链剖分，预处理部分要写$bfs$。

[E. Move on Dice](http://acm.bnu.edu.cn/v3/contest_show.php?cid=6866#problem/E)
===============================================================================

[F. Pipeline Plans](http://acm.bnu.edu.cn/v3/contest_show.php?cid=6866#problem/F) \[zxa\]
=========================================================================================

暴力DP，压剩余砖块有多少个以及用最小表示法压至多4个插头的联通情况，答案会爆int。

[G. Presentation](http://acm.bnu.edu.cn/v3/contest_show.php?cid=6866#problem/G)
===============================================================================

[H. Repairing](http://acm.bnu.edu.cn/v3/contest_show.php?cid=6866#problem/H) \[jsy\]
====================================================================================

所有的开关，交点，起点，终点都是关键点，在同一条线段上相邻的关键点之间连边。

建好图后，从终点出发，将碰到的开关关掉。然后从起点出发，计算所有能到达的线段长度总和就做完了。

这题关键在于建图，建好图后就是$bfs$的事情了。

[I. Sun and Moon](http://acm.bnu.edu.cn/v3/contest_show.php?cid=6866#problem/I)
===============================================================================

[J. Usoperanto](http://acm.bnu.edu.cn/v3/contest_show.php?cid=6866#problem/J)\[zhy\]
====================================================================================

由于每个修饰词最多修饰一个被修饰词，所以这是一棵树。如果先放下了一个修饰词，假设它修饰的被修饰词还有其他儿子。这时候不放其他儿子而是放一个修饰别的词的修饰词。那么与直接放其他儿子相比，被修饰词的代价成倍增长。不如先放完这棵子树优。所以就树$dp$，将子树递归做完后，新的子树的单词数为整个子树里单词树的和，考虑他们连向父亲的代价。单词数大的子树先放前面。
