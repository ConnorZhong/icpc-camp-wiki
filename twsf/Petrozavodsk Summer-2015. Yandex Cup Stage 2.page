A. Angle Patterns \[jsy\]
=========================

对每一类图形找一个最小元：尽量往左平移，尽量往下平移，B在A的左上边。然后就可以枚举AB这个向量，并且统计贡献了。

B. Best Strategy \[zxa\]
========================

状态数看起来有$24 \cdot 2^{28}$，实际上很少，直接记忆化爆搜。

C. Coin Game \[jsy\]
====================

设$f[l][r][d]$代表当前序列是原序列中$[l,r]$之间下标是$d$倍数的所有元素构成的，先手最多获得多少分。

D. Domination \[zxa\]
=====================

不带修改的版本就是[这个题](http://twsf.icpc-camp.org/Warsaw%20U%20Contest,%20Urozero%202015%20Day%204#d.-couriers-jsy)……

带修改了于是要维护支持询问一段区间有多少个某个数和区间赋值……所以愚蠢的方法就是外面整体拿map维护一段一段的区间，内部对每种权值再开个数据结构，平衡树啥的看起来就很麻烦所以直接选择动态开节点的线段树，所以空间就直接炸了。

加上回收空间后稳稳过掉。

E. Equation \[zxa\]
===================

$n^x$肯定是那种链加环的结构，所以枚举$n^x$可能的值，如果这个值存在要么这个值在链上，要么在环上。然后就能得到一个关于$x$的两个模方程，exgcd合并一下就可以了。然后就是由计算验证链上不可能有解，还有就是因为要保证$n^x$在环上所以$x$要不小于链的长度，这里需要把解出来的东西再平移一下就行了。

F. Safe Flight \[jsy\]
======================

每条线段和球心能构成一个过该线段的一个圆。找出这两个圆，两圆的交线和球的交点有可能是两条线段的交点，交线用法向量的叉积来求。还有一种情况是两圆重合，这时候只需要检查两条线段的四个点即可。

G. Version Control System \[jsy\]
=================================

用并查集维护哪些位置是相等的。

H. Hack \[jsy\]
===============

枚举KMP数组，枚举的时候会发现第$i$个元素只和前$K+1$个元素以及第$i-1$个元素有关。所以可以枚举前$K+1$个KMP数组，然后用矩阵乘法推出后面的方案。

I. Optimal Choice \[jsy\]
=========================

如果是树的话，直接树dp。现在是仙人掌，只需要再存一下通过非树边到达的那个点选或不选。

J. Jeopardy \[jsy\]
===================

最暴力的是枚举所有的选择情况，然后枚举每个矩形旋转或者不旋转。这是$3^n$的，这时候只需要折半一下就可以在规定时间内出解了。
