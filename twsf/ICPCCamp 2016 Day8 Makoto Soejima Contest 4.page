A. 2016 \[zxa\]
===============

按顺序枚举每一个质数，用这个质数的幂次迭代更新满足条件的数的集合。

B. Airports \[jsy\]
===================

C. Jump \[jsy\]
===============

先按第$i$种方法跳，再按第$j$种方法跳的结果是：$x + 2 * (a[i] - a[j])$，一次跳两步的所移动的距离和起点坐标是无关的。所以就处理出所有跳两步的情况，然后bfs。询问的时候枚举奇数步时第一步跳的方法。

D. Merge \[zxa\]\[jsy\]
=======================

设$f[i][j][k]$为已经并了$i$个元素且最后一个是$j$且这个$j$可能来自哪里(1/2/1+2)的方案数，转移就看当前这个状态下一个能并哪些数字，如果有相同的数字不能只并其中一个。这样算出来的结果就不会出现重复。

E. Mirror Rice Cake
===================

F. Number Cards \[jsy\]
=======================

G. Paint
========

H. Random Walk \[zxa\]\[jsy\]
=============================

设$f[i]$为走了$i$步最后回到原点的方案数，这个只要组合数算算。再设$g[i]$为走了$i$步后第一次回到原点的方案数，这个用$f[i]$容斥出来。

考虑答案实际上就是如果有一步走到了原来走过的位置，这一步就不累计进答案。所以枚举这一个圈的长度为$i$，那么这个圈在所有方案中的出现次数应该是$(n-i+1)4^{n-i}$，统计一共不累计多少就行了。

I. Robots \[jsy\]
=================

建图，跑最短路算出每个机器人出发时间。

J. Ropes \[jsy\]
================

Cayley公式

K. Stains \[zxa\]
=================

在复数域下求这堆向量的gcd，gcd就是解空间的一个基底，另一个基底是它转90度，有了基就能计算每个点的坐标了。

L. String Modification
======================

M. Team Competition
===================
