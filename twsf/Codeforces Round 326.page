A
=

题解：贪心，设当前拿到物品的和为$2^i$，若有$2^i$物品，就拿成$2^{i+1}$。所以$i$从$0$开始考虑，有两个相同的就将他们拿成$i+1$，如果只有$1$个了，那么答案加$1$。一直考虑到$1000000+log(1000000)$左右。因为里面的数一直在除$2$。

B
=

题解：$dp$，$f[i][j]$表示考虑已经拿了$i$个数，当前拿的是这一阶段$a$数列中的第$j$个数有多少种方案。从$f[i-1][k]$中转移，其中$a[k]<=a[j]$，若将数列$a$排序，则可利用前缀和来优化。算答案时，若当前拿了$i$个数，一共有$n$个"整"阶段，则贡献有$n-i+1$，最后在判断那个"不整"的阶段是否有贡献，有贡献当且仅当，$i-n<=1$并且枚举到的第$j$个数在原数列中的下标小于那个"不整"阶段的长度。

C
=

题解：每个点维护一个长度小于$10$的排好序$vector$，查询时像倍增法求$lca$那样往上合并。合并的时候像归并排序那样，保留前$10$小的数即可。
