A.Easy Math\[zhy\]
==================

检查每个数是否是完全平方数即可。

B.Carries \[jsy\]\[zhy\]
========================

每次进位至多只会进一位，所以枚举$10^k$，然后计算有多少对$a[i]$,$a[j]$满足$a[i] \mod 10^k + a[j] \mod 10^k$大于等于$10^k$。

C.Censor \[jsy\]\[zhy\]
=======================

用个栈维护母串做$kmp$，如果完全匹配则弹出被匹配的字符。

D.Vertex Cover
==============

搜搜搜

E.Rectangle \[jsy\]\[zhy\]
==========================

水题,答案$\sum_{i=1}^{n} \sum_{j = 1} ^ {min(m, k / 2 - i)} (n - i + 1) \cdot (m - j + 1)$

F.Necklace \[jsy\]\[zhy\]
=========================

枚举$10000$的位置，往前以及往后做最长不上升子序列，再枚举一个位置断开，统计答案。

G.Party \[jsy\]\[zhy\]
======================

将冲突关系二分图染色，将黑点喝红茶的人和白点喝绿茶的人放在第一排，黑点喝绿茶的人和白点喝红茶的人放在第三排，两种茶都喝的人放在中间。第一排和第三排之间有冲突的人连有向边，第一排和中间以及中间和第三排油冲突的人之间连有向边。第三排之间有冲突的连无向边。把每个点拆成两个点，之间连个容量为$wi$的边。最后跑一遍最小割即可。

H.Range Query \[jsy\]\[zhy\]
============================

对于条件$(l,r,x)$: $max (pi) = x, l \le i \le r$ , 要满足
$pi \le x$且有一个$i$满足$pi == x$，也就是说不满足$l \le i \le r$的$i$，$pi$不为$x$。设$f[x][y]$代表$px$是否可以为$y$，在上面跑二分图匹配即可。

I.Travel \[jsy\]\[zhy\]
=======================

如果$(1,n)$之间有$a$的边，则答案为$a$或者从$1$走到$n$只走$b$的边。

如果$(1,n)$之间有$b$的边，则答案为$b$或者从$1$走到$n$只走$a$的边。

这两种情况都可以$bfs$得到。

J.Right turn \[jsy\]\[zhy\]
===========================

关键点只有障碍以及四周四个格子，至多有$5000$个关键点。对这些关键点建图，然后看需要多少步能走出来。

zhy:有个简单好写的做法，每次暴力枚举所有点，看哪个点能成为他下一个障碍，最多只进行$4n$次，如果$4n$后仍有能成为障碍的点则会有无限次转弯。（因为每次遇到障碍的决策是唯一的，每个障碍最多有4次被遇到）。
