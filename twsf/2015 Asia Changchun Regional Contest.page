A. Too Rich \[zhy\] \[jsy\]
===========================

如果每一个都是前一个的倍数，从第一个开始考虑，那么肯定一上来用面值为1的，如果不够，那么将5个1的变成面值为5的，并且这个面值为5的硬币对答案的贡献设置为5。然后比如当前考虑到10的，有可能还需要的钱数不是10的倍数，这时候需要去掉一些5的。这些5的优先去掉那些对答案贡献小的。以次往后做就可以了。但是题目中20与50，200与500都不是倍数关系。但是可以这样考虑，该考虑500的时候只在乎它最终选了奇数还是偶数。如果是偶数的话，直接将每两个500替换为1个1000，对答案的贡献设置为2。如果是奇数的话，上来将p剪掉500，将剩余的500每两个替换为1000。对答案贡献为2。50同理。所以只需枚举2\*2，4种情况。

B. Count a × b \[zxa\]
======================

计算出$h(n) = a \times b \equiv 0 \mod n$的对数，容易发现$h$是积性函数，对每个询问分解质因数后就很容易做了。

C. Play a game \[zxa\]
======================

先用AC自动机搞出所有的匹配的子串位置，设模板的总长度是$S$，则子串只有$O(n \sqrt{S})$个。

然后就可以使用标准的dp设f\[i\]\[j\]为长度为i的起始位置是j的子串先手是否必胜，转移显然，直接做是$O(n^2)$的，然而使用bitset就可以过了。

D. Pipes selection \[zxa\]
==========================

先来一次FFT可以计算出对于每一个$j$，需要算它第几个出现的位置。

然后考虑分块，对于每个块每个$j$计算出这个块内的元素成为区间左端点的方案数量，然后就能确定每个$j$的答案区间左端点所在的块了，具体位置再在块内暴力即可。

由于FFT常数很大，块需要稍微设大一点，实测2048左右比较快。

E. Rebuild \[jsy\]
==================

假设第一个点的圆的半径为$x$，则所有的点的圆的半径都可以表示成关于$x$的线性函数，这样就能得到$x$的取值范围。在该范围内三分就可以了。

F. Almost Sorted Array \[zxa\]
==============================

对每个前缀以及后缀判断一下是否是有序的，枚举一个数前后拼起来。

G. Dancing Stars on Me \[jsy\]
==============================

判断给定的点是否是正方形就可以了。

H. Partial Tree \[zhy\]
=======================

首先这棵树只关注度数为x的有多少个节点。有一个非常巧妙的转换，可以把任意一颗树经过变换变为一个"毛毛虫"，且不改变度数为x的节点个数。（"毛毛虫"是指有一个主链，剩下点到主链的距离都等于1），变换的方法为，任选一个根，从根开始，若此节点0个非叶子节点，则变换结束。有1个非叶子节点，则移动到非叶子节点，递归处理。若有大于一个非叶子节点。任选一个递归处理。将其余的非叶子节点与选定的那个非叶子节点所引领的子树中的叶子节点做交换。于是此题只需一节一节往上$dp$。$f[i]$表示用$i$个节点构成一颗子树的最大得分。每次枚举"毛毛虫"的一节，这一节若有$j$个节点。则有$j － 1$个叶子节点，还有一个度数为$j ＋ 1$的节点（这是一颗子树，还要向上生长。）即$f[i + j] = f[i] + (j - 1) * g[1] + g[j + 1]$。$i$为$0$与$i ＋ j$等于$n$时要特殊处理。

I. Chess Puzzle \[zxa\]
=======================

很经典的最小割问题，只需要注意找字典序最小方案的时候只需要看加一条边后会不会产生新的增广路，不用重新做网络流。

J. Chip Factory \[jsy\]
=======================

用字典树优化暴力。

K. Maximum Spanning Forest \[zxa\]
==================================

离散化后对每个询问暴力做Kruscal即可，目测$O(n^4)$也可过。

L. House Building \[zhy\]
=========================

一共有6个方向，从除去底面的那5个方向看过去，露在外面的表面积即是答案。于是从一个方向扫描过去，当前扫描到的建筑与前一个建筑比，如果当前这个比前一个高，则高出的部分即是这个方向上露出的表面积。

M. Security Corporation \[zxa\]
===============================

搞出所有交点建好图之后会发现每个点的度数最多只有4，而且边都是直的，比较容易想到一种三染色的贪心方法，把所有点按横纵坐标排个序，这样该染一个点的时候它的邻居中最多只有两个已经染好色，直接挑另一种颜色染上即可。

然后只需再判一下可以一染色和二染色的情况即可。
