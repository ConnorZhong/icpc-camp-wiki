A. Rabbit Lunch \[zxa\]
=======================

先对$A,B$进行基数排序。

转成最小割，如果左边割$x$个，右边割$y$个，那么割的容量就是$\sum{a_{k_x}}+\sum{b_{l_y}}+(n-x) \cdot (m-y)$。

那么明显因为要最小割，左右割的肯定是容量最小的$x,y$个，那么割就是关于$x,y$的函数，目标是找这个函数的最小值。

容易推出从小到大枚举$x$，$y-1$比$y$优当且仅当$b_y>n-x$，由于$b_i$单调不降，$n-x$单调下降，所以$x$上升时最小割对应的$y$不会上升。

利用Two Pointers就能在$O(n+m)$解决这个问题。

B. Snuke \[zxa\]
================

简单贪心

C. Supermarket \[jsy\]
======================

每种蔬菜对应一个可买月份的集合，$f[opt]$
代表考虑了最喜欢的几种蔬菜，且$opt$集合的月份已经被买了，最多买了多少种蔬菜。转移就枚举每种蔬菜，如果该蔬菜的可买集合不是$opt$的子集，那么就对答案贡献$1$。由于蔬菜最多就$2^{12}$种，所以复杂度为$O(4^{12})$。

D. Subsequence \[jsy\]
======================

假设$S$和$T$都已经确定，现在要判断$T$是否是$S$的子序列，那么可以通过不断找最近的字符来$check$，这样T中的每个字符都唯一对应$S$中的某个字符。

先构造出$T$，然后再插入若干$0、1$来得到$S$。根据上述结论，每个$0$前面一个位置可以插入任意个$1$,每个$1$前面可以插入任意个$0$，最后可以插入任意个$0$和$1$的组合。由于$T$中的$0$、$1$的数量是固定的，所以我们不需要知道$T$具体长什么样。

做法：枚举最后的$0$和$1$的数量，剩下的字符可以利用隔板法计算方案。

E. Tournament \[jsy\]
=====================

由于竞赛图的特殊性，如果把强联通分量缩成一个点，那么图就变成一条链，前面的节点向后面的每个节点连一条边。

性质：强联通分量个数等于割边的数量加1。

枚举割边左边的节点数$x$，然后两边的点集内部的边随便连，集合之间的边是固定的方向，所以对答案的贡献为：$2^{x(x - 1) / 2} \cdot 2 ^ {(n - x)(n - x - 1) / 2}$

F. Lake \[jsy\]
===============

二分答案$x$，先把所有段的长度减到少于$x$为止。如果所需要的数量满足要求，则有解。否则枚举一段还原，如果满足要求，则有解。剩下的情况都是无解的。

G. Medals \[jsy\]
=================

画出前三名的所有边的可能情况，然后对每种情况计算方案。

H. Snuke Density \[zxa\]
========================

先判了$c \geq a + b$是YES，$c \leq a + b - 10^6$是NO。$\binom{a+b}{a}$一定是整数，然后$\frac{c!}{a!b!}$就是$\binom{a+b}{a}$再除个$\Pi_{i=c+1}^{a+b}{i}$共不超过$10^6$个数，暴力筛一筛判一判。

I. Convex Polygon \[zxa\]
=========================

如果只要构造一个四分之一的凸壳，那应该是用一堆(X,Y)的向量极角排序后累加直到爆表，因为限定了$\max{\sum X, \sum Y}$，所以首先$\gcd(X,Y)=1$来保证相同斜率这个是最短的，然后$X+Y$要尽可能小。

构造完整的凸包只需要把向量旋转四下都加入待累加集合就行了。

经过测试$X+Y \leq 169$时，$X,Y$的极差是992423，$X+Y \leq 170$时，极差是1003303。

所以最后的凸包是$X+Y \leq 169$以及再多几个$X+Y = 170$的向量构成的，最后凑一凑$X$和$Y$，一共可以有35242个点。

J. Drink Bar \[zxa\]
====================

答案分为以下三个部分：

-   一个点，$n$
-   两个点，$\binom{n}{2}$-一个覆盖另一个的对数
-   三个点，$\binom{n}{3}$ - 与前两个重复的

三个点重复的可以用点在三个平面上投影后的点覆盖对数容斥出来，系数可以找规律。

K. Hull Marathon \[zxa\]
========================

如果已知了选出的半径以及半径之间的顺序，设$a_i$为第$i$条边相对第$0$条边的角度，$a_0=0,a_n=2\pi$，就有
$$
S = \frac{1}{2} \sum_{i=0}^{n-1}{r_i r_{i+1}\sin(a_{i+1}-a_i)} \\
\frac{\partial S}{\partial a_i} = \frac{1}{2}[r_{i-1}r_i \cos(a_i-a_{i - 1}) + r_{i+1}r_i \cos(a_{i+1} - a_i)] = 0  \\
$$ 设$\beta_{i} = a_{i + 1} - a_{i}$，则有 $$
\cos{\beta_{i}} = \frac{r_{i-1}}{r_{i+1}} \cos{\beta_{i - 1}}
$$

所以二分$\cos{\beta_0}$，就可以知道所有的$\beta$。拿$\sum{\beta} = 2 \pi$来check，就能得到这时候的最优解。

现在不知道选出的半径和顺序，如果选肯定是选最大的，然后再枚举它的顺序，复杂度为$O(n(n-1)!T)$。
