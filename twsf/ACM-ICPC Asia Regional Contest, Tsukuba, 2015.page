[题目链接](http://judge.u-aizu.ac.jp/onlinejudge/contest_problem.jsp?id=ICPCOOC2015)

A. Decimal Sequences \[zxa\]
============================

把所有位数不大于6的数字抠出来排个序就好了。

B. Squeeze the Cylinders \[zxa\]
================================

按顺序放每一个圆，用二分算出每个圆能放的最左边的位置。

C. Sibling Rivalry \[jsy\]
==========================

f\[i\]代表从点$i$出发在最坏情况下最少多少步到终点。

D. Wall Clocks \[zxa\]
======================

抠出每个人的视线对应的区间后，就是经典的贪心问题了，n比较小可以直接枚举起点做。

E. Bringing Order to Disorder \[jsy\]
=====================================

$f[i][j][k][l]$代表考虑了前$i$位，数位之和为$j$，数位之积为$k$，和原串字典序的关系为$l$的方案数。将$k$进行压缩然后数位$dp$即可。

F. Deadlock Detection \[jsy\]
=============================

二分答案，然后$check$就每次用所有资源满足一个任务，看是否能全部满足。

G. Do Geese See God? \[jsy\]
============================

$f[i][j]$
代表考虑子串$S[i..j]$至少添加多少个字符使得其是个回文串，这个可以$O(n^2)$内求出。

$g[i][j]$ 代表在保证长度最短的情况下有多少种填字母的方案。

利用$g[i][j]$贪心贪心就能算出方案了。

H. Rotating Cutter Bits
=======================

I. Routing a Marathon Race \[jsy\]
==================================

搜索，最优方案肯定不会走环，所以如果从当前点到不了终点就直接回溯，再加个最优性剪枝就能过了。

J. Post Office Investigation \[zxa\]
====================================

tarjan缩环，然后每个点搞个bitset来dp出从起点出发所有的关键点，按照scc的拓扑序scc之间用dp，scc之内用迭代，因为scc的大小至多只有10所以速度还是很快的。

唯一一个比较奇怪的是求bitset内1的最小值，实际上可以把每个点按照权值顺序重标号，这样只用找第一个1即可。

然后直接上bitset在OJ上会MLE，还是得分个块。

K. Min-Max Distance Game
========================
