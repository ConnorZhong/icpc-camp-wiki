A. Random points on the circle \[zxa\]
======================================

题意：一个长度为$L$环上有$n$个点，在环上再取$k$个整点放电极，然后每个点选一个电极匹配，使得每个电极与被它匹配的点的距离之和的最大值最小。

大概做法：二分答案，然后利用two-pointers求出每个点当做起点最远能走到哪里。然后找到其中走的步数最少的起点，在这个点所在的区间内部枚举起点然后判断答案。据说这样check是$O(n)$的，来自CF的某个D题，已经忘掉在哪场了。

大概证明：设最短的步数是$D$，则每走一圈都至多需要$\frac{n}{D}$步，所以在那个区间里枚举那$D±1$个起点check的复杂度就是$O(n)$了。

B. Lines
========

C. Fraction Factory
===================

D. Greedy game
==============

E. Odd Grammar \[zxa\]
======================

题意：给定一个正则语法，问语法生成的语言中有没有奇数长度的字符串。

大概做法：每一个推导都等价于说明一个非终结符推导完后可以是某些非终结符的长度之和加终结符的长度之和，由于只在乎长度的奇偶性，直接类似拓扑排序，统计每个非终结符所在的推导，如果某个推导式里面每一个非终结符都得到了它的长度的奇偶性，就可以更新这个推导左侧的非终结符。

F. Colored path
===============

G. Pencil of Wishing
====================

H. Points
=========

I. Set intersection
===================

J. Sort it!
===========

K. Two Strings
==============

L. Triangle \[zxa\]
===================

大概做法：设三角形三边为$a,b,c(a \leq b \leq c)$，则有$a > c - b$。枚举$d=c-b$，为了让三角形面积最小必然选择最小的大于$d$的$a$。然后考虑$b$和$c$肯定也要选择满足$b>a$的最小的b。这样做可以做到$O(n^2)$。

优化的话……只需要手写个bitset来维护有哪些长度的边，枚举$d$就能很轻易的知道最小的$a$和$b$是多少，就能做到$O(\frac{c^2}{w})$。
