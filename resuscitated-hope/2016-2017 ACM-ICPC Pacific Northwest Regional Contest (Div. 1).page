A. Alphabet
===========

B. Buggy Robot
==============

C. Cameras \[Cabinfever\]
=========================

Cabinfever:单调队列,水

D. Contest Strategy \[ConnorZhong 补\]
======================================

ConnorZhong: 巧妙的组合数题，推出老血...将题目排序后考虑顺次为 $i$
的题在第 $j$ 个位置被做，$f(i,j)$ 表示此时所有方案数，那么它的贡献就是
$t_i*(n-i+1)*f(i,j)$，那么问题就变成了如何快速 $f(i,j)$。考虑做第 $j$
个题时此时必然已经读了$\min(n,j+k-1)$
个题，在读过的题中，时间比自己本身短的题目数最多有 $0$ 到 $j-1$ 个，设
$g(i,j,p)$ 为第 $i$ 个题，第 $j$ 个被做，已经读了 $p$
个题比自己小，$f(i,j) = \sum^{j-1}_{p=0}g(i,j,p)$。因此我枚举一下读过的
$p$ 个题比自己小，直接组合数算此时方案数为
$\sum^{j-1}_{p=0}{C(i-1,p)C(n-i,j+k-1-p-1)(j+k-1)!(n-j-k+1)!}$，这些方案中存在一些不合法的方案，这些方案其实恰好是
$\sum^{p-1}_{q=0} g(i,j,q)$，减去后就求出了$g(i,j,p)$，这个过程中在维护个$g(i,j,p)$的前缀和。注意
$j+k-1>n$ 时特殊处理下就行，比较简单。$O(n^3)$

E. Enclosure
============

F. Illumination \[ConnorZhong\]
===============================

ConnorZhong: 没什么好说的啊，2-Sat模版题，随便Gao。

G. Maximum Islands
==================

H. Paint
========

I. Postman \[ConnorZhong\]
==========================

ConnorZhong: 这好像就是一个傻逼贪心？

J. Shopping \[ConnorZhong\]
===========================

ConnorZhong:
很容易发现每次取模一定使原本的数减少一半以上，于是一个数最多被取模$log a_i$次。所以把询问全部离线，优先队列Gao一下。

K. Tournament Wins
==================

L. Windy Path
=============

Summary
=======

**比赛记录：**
和隔壁一起训的题，最后又被踩了啊，好难过啊。开局相当还是比较顺利的，很快过了水题ACHI。想起了吉利爷爷讲的小清新线段树里有一个区间取模的问题，思路套用了一下就把J也过了啊。hzh推了推K也轻松搞过去了啊，后面发现F是2-sat版子题，抄了抄也秒掉了。8题后大家就开始集体挂机，然后G在贪心的路上一去不复返，zjc也在D上一直过不了样例。

**ConnorZhong：**
前半程超常发挥了啊，后半程雪崩啊～这个D想了个好像很对的$O(n^3)$做法好像最后也不大对啊。还是太弱了啊...你这样下去怎么和隔壁竞争嘛？zmy那么劲我也很绝望啊，赶紧追吧。

**Cabinfever: **
这个G我要背锅啊，想到是网络流，建模时想复杂了啊。。建图类似二分图

**YOULLNEVERWA:**
