# FFT(快速傅里叶变换)小结

（理论写也只能copy，就略过了）

## BZOJ 3160 万径人踪灭

略过 $manacher$求连续回文子序列的部分，问题到了求出总的回文子序列个数

令$f_i$表示以$i$为中心对称的字符对个数，容易想到$i$对答案的贡献为：

$\sum_{j=1}^{f_i} C_{f_i}^j = 2^{f_i} - 1$

问题转化到了求$f_i$，显然我们可以$O(n^2)$求得，但时间复杂度过高。

在$manacher$处理过后的串中，我们发现对于位置$pos$，如果$s_i = s_j (i+j = pos) $则对$f_{pos}$有贡献。

好了，我们发现这就是个卷积：$f_i = \sum_{j = 1}^{i-1}(s_j == s_{i-j})$

分别处理字符$a,b$，即可



## HDU 4609 3-idiots

这题某个学校的校赛出过简化版本的大概题意：给 $n$个数$ m$次询问， 每次询问 一个$k$ 求和小于$k$的二元组的对数 $n<10^5,m < 10^5$,每个数 $a_i < 10^5$， $k < 2 \times 10^5$。由于值域很小，记录下每个数出现的次数，卷积算一下就好。

回到hdu4609，其实相比上面，就是要减去不合法的答案，与卷积无关就不扯了



## hihoCoder 1388 Periodic Signal

(当时板刷了，然而都不会)

将式子展开可以得到$\sum A_i^2 + \sum B_i^2 - 2\sum A_iB_{i+k}$

前面两项的和是固定的，所以问题转化为了求$\sum A_iB_{i+K}$的最小值

我们将B翻转一下就可以卷积了，但注意到是循环的，和其实是$C_i + C_{i+n}$

注意到数很大，FFT精度会不够，所以用大数NTT。



## HDU 6061 RXD and functions

(敦老师的妙题，多校现场没转成卷积式)

首先考虑函数的平移，我们发现变换$m$次等效于变换一次$\sum a$，

为了方便我们把$s = \sum a$取反，所以题意就是求$f(x + s)$的系数

依旧是将式子展开，由二项式定理:
$$
\begin {aligned}
f(x + s) &= \displaystyle \sum_{i = 0}^{n}x^i\sum_{j = i}^n C_j^i c_j s^{j - i} \\\
&=\displaystyle \sum_{i = 0}^{n}x^i\sum_{j = i}^n \frac{j!}{(j-i)!i!}c_j s^{j - i} \\\
&令a_i = c_{n-i} (n-i)!,b_i = \frac{s^i}{i!} \\\
&=\displaystyle \sum_{i = 0}^{n}\frac{x^i}{i!}\sum_{j=i}^{n}a_{n-j}b_{j-i} \\\
&=\displaystyle \sum_{i = 0}^{n}\frac{x^i}{i!}\sum_{j=0}^{n-i}a_{n-i-j}b_j \\\
& 将x_i翻转\\\
&=\displaystyle \sum_{i = 0}^{n}\frac{x^{i}}{(n-i)!}\sum_{j=0}^{i}a_{i-j}b_j 
\end {aligned}
$$



然后NTT搞一搞，倒着输出



## PKU Campus 2017 Reverse K-th Problem

(比赛的时候推出了式子，最后没时间了)

题目大意就是给出值域为$n$长度为$n$的数组，有·$q$组询问，问有多少个区间满足第$k$大为$x$。

看上去是个数据结构，但复杂度明显不对，我们需要$O(1)$处理每个询问。

假设现在计算下标$now$的数的答案，我们用$L_i$表示$now$左边比$a_{now}$第i大的数的位置，用$R_i$表示$now$右边比$a_now$第i打的数的位置，那么对询问$a_{now},k$答案的贡献是$(L_{i-1} - L_i) * (R_{k-i+1} - R_{k-i})$

令$l_i = L_{i} - L_{i+1},r_i = R_{i+1} - R_i$

那么$ans_{a_{now},k} = \displaystyle \sum_{i = 0}^{k-1}l_i \times r_{k-1-i}$ 

 我们发现这是个卷积，那么我们就可以$O(nlogn)$算出$a_{now}$的所有答案。

总的时间复杂度为$O(n^2logn + q)$。

