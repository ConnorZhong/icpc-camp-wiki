Info
====

Date:2018.08.13

[Link](http://acm.hdu.edu.cn/contests/contest_show.php?cid=808)

Solutions
=========

A Age of Moyu
-------------

solved by

------------------------------------------------------------------------

's solution

B AraBellaC
-----------

upsolved by sk

------------------------------------------------------------------------

sk's solution

对于A,B,C出现的位置，存三个数组里分别排序，枚举循环节长度$i$，然后枚举每个循环节$[j-i,j)$，二分求出当前区间内A出现的位置最大值，B出现位置最大值最小值，以及C出现位置的最小值，然后判断当前循环节长度是否可行，可行的话更新答案。时间复杂度$O(Tnlognlogm)$。用ST表代替二分可以做到$O(Tnlogn)$

C YJJ’s Stack
-------------

D Go to school
--------------

E GuGuFishtion
--------------

F Lord Li's problem
-------------------

upsolved by gjy

------------------------------------------------------------------------

gjy's solution

对于原问题，答案显然只与xor后为1的位数有关。

考虑不限制元素重复的问题：

$dp[i][j]$表示考虑$i$个元素，占$j$个位置的方案数，考虑新加入的元素放a个新位置，b个老位置，则用以下状态更新：

$dp[i-1][j-3] * c[n-j+3][3]$

$dp[i-1][j-1] * c[n-j+1][2] * (j-1)$

$dp[i-1][j+1] * c[j+1][2] * (n-j-1)$

$dp[i-1][j+3] * c[j+3][3]$

在此基础上考虑减掉重复元素的方案，假设新加入的元素与某个元素重复，则用以下状态更新：

$-dp[i-2][j] * (i-1) * (c[n][3]-(i-2))$

这里$(i-1)$表示考虑当前元素与哪个之前的元素相同，$(c[n][3]-(i-2))$表示这两个相同的元素是哪一种。

最后对于$dp[i][j]$，考虑除去元素放入的顺序，除以$i!$，考虑具体占的位置，除以$c[n][j]$即得最后需要的答案。

时间复杂度：预处理$O(N*N*M*log(N))$ + 询问$O(T)$

G Reverse Game
--------------

H Traffic Network in Numazu
---------------------------

upsolved by sk

------------------------------------------------------------------------

sk's solution

直接LCT，找出环上一条边，最短路讨论一下就行了。

I Tree
------

J Sequence
----------

K Swordsman
-----------

Replay
======

ghc
---

gjy
---

sk
--
