[题目链接](http://acm.hust.edu.cn/vjudge/contest/view.action?cid=101218#overview)

Solution
========

### **A. Aizu 1345 Bit String Reordering [shy](#shy)**

shy：水题

### **B. Aizu 1346 Miscalculation [lwt](#lwt)**

shy：水题

### **C. Aizu 1347 Shopping \[lcy、shy\]**

lcy：画画图发现可以贪心
对于交叉的区间我们合并成一个大区间,最后得到一些不交叉的区间,总时间为n+1+每个区间的长度\*2

shy：找规律得到的。。
先把二元组按头递增排序，处理出连续的二元组，连续的距离算三遍，相邻区间的尾和头的距离算一遍即可

### **D. Aizu 1348 Space Golf \[\*\]**

题意：有n&lt;=10个障碍物，一个球从a要求弹到t，长度为d，不计阻力。中间一共弹小于b&lt;=15次，重力g=1，
给出n个障碍物的水平坐标和高度，问可以越过障碍物最小的初速度是多少

shy： ~~To Do~~

显然不能碰到墙壁，所以反弹都是在地面上进行的

通过枚举与地面的碰撞次数，可以求出一次弹跳到落地所走的距离L

然后对于每一次得出的L，求出能跳过所有障碍物所需的最小的maxh(vy=0时的高度)

因为二次函数的宽度L已知，可以先求出障碍物p\[i\]与对称轴的距离dis

这样已知L,dis,h\[i\]就可以求解二次函数，得出maxh了

要注意特判dis=L/2的情况(其实通过分母不为0就可不难得出)

注意一种特殊情况：没有障碍物的情况(也可以说是h很小的情况)，这时v取多小都是可以的

因为在速度给定的情况下，45度是跳得最远的(可解函数证明)，所以距离给定时，45度也是速度最小的

所以要特判45度的情况

这样根据maxh可求出t(取maxh所需要的和45度情况下的t中较大的)，进而可求出vx,vy和v了

lwt:

[戳我的博客,
不再编辑一遍了](http://blog.csdn.net/lwt36/article/details/50212933)

### **E. Aizu 1349 Automotive Navigation**

### **F. Aizu 1350 There is No Alternative [lcy](#lcy)**

lcy：

做一次最小生成树,然后每次取一条非树边,环上与这条边权值相同的边标记掉,最后统计答案的时候去掉

shy：

首先求出最小生成树，并标记生成树的各条边

可得，必须边必定是割边，或者是环中权值比其他边都小的边

而非必需边就是环中和其他各边权值相等的边了

于是枚举各条非树边，求两端点的lca，则这两点分别到lca的边就构成环，

于是遍历环中每条边，如果有树边权值和这条非树边相等，则这条树边就是非必须边

复杂度为O(n\^3)

lwt:

MST之后 对于所有不在MST上的$(u,v)$点对
删去在MST上的所有权值相同的边即alternative edge

### **G. Aizu 1351 Flipping Parentheses [lcy](#lcy)**

题意：给出一个匹配的括号序列,每次翻转一个括号
我如何翻转一个括号使得这个序列再次匹配,如果存在多个可能,尽可能的使翻转的括号下标小

lcy：

对于一个括号序列,我们可以转换成一个数字序列,每遇到一个左括号+1,每遇到一个右括号-1,这样转换成了一个数字序列

那么对于一个匹配的括号序列,我们得到的数字序列满足两个条件,(1)没有出现小于0的数字(2)最后一个数字是0

那么我翻转一个右括号,假设右括号下标位i,那么数字序列i-n这一段都会加上2,因为本来对于后面的影响是-1变成了+1,同理我翻转一个左括号会使得i-n都减2
我要再翻转一个括号使得序列重新满足匹配的条件,对于翻转左括号,我使得i-n减了2,那么我要找到一个最靠左边的右括号(假设下标为j),这样就可以使得j-n都加上了2,这样肯定可以满足匹配括号序列的条件,每次翻转2个括号,然后我还要找到最靠左的右括号,我就用set去维护

对于翻转右括号,我会使得i-n都加上2,那么我要重新减掉2,因为要最靠左,所以我要找尽可能长的区间使这一段都减去2,然而匹配的序列会满足没有小于0的数字,所以我们要找的区间最小值要大于等于2,对于访问区间最小值,我们考虑用线段树,然后去二分左端点,我们就能求得最大的区间.那么求得的点有没有可能是右括号呢,是没有可能的,假设我找到的左端点是j,因为j-1不满足二分条件,数字序列中下标为j-1小于j,说明j这个点是一个左括号

shy：

设定一个数列，碰到（+1，碰到）-1，则对于每次询问：

如果改的是（，就查找最左边的），因为最左边的+2，右边的每个都&gt;=0，所以序列必合法

如果改的是），就查找最左边的2，满足该pos到n的每个数都&gt;=2即可，

因为每把一个（改成），后面的每个数都会-2，只要保证每个数都&gt;=0，就能保证括号平衡

前者用set，后者线段树

可以直接在线段树里面查询，不用二分，节约一层log的复杂度

失误：

一开始update只加了lazy。。。

lwt:

经典思路, 将括号转化为$+1\ -1$的前缀和序列,
对于寻找左括号可以考虑用线段树二分来寻找最左边的$\geq 2$的位置

对于右括号只要用set维护右括号的位置就可以了 每次选择最左边的

细节较多 细心

### **H. Aizu 1352 Cornering at Poles**

### **I. Aizu 1353 Sweet War \[\*\]**

题意：

有一个栈，栈中有$n(n≤150)$个糖果，每个糖果有两种属性$ai(ai<=10^9)$和$bi$
$\sum_{i-1}^{n}bi<=150$。现在有两个人玩游戏，两人轮流操作，每次有两种操作：

跳过这次操作，但是总能量减少$1$。(两人刚开始的能量分别为$A,B(A,B≤10^9)$，且任意时刻能量不能小于$0$)
取走栈顶的糖果，获得$bi$分，且能量增加$ai$
游戏一直进行到栈中没有糖果为止，问：如果两人都足够聪明，他们各获得多少分。

lcy：

我选择跳过对面也可以选择跳过 我不要这个对面也不要
所以最后有跳过权限的只是能量高的 所以只有能量的差值是有意义的

看到数据范围分值总和小于等于150 就是给我们提示 把分值开到状态去
那么我们可以得到一个这样的状态$dp[i][j]$表示取完第$i$到第$n$个
我获得$j$的分数 所需要最小的能量差值

个人感觉状态还是比较好想的 转移就比较难了

分两种情况：

取栈顶元素：

设$S$为$\sum_{j=i}^{n}bj$

取完就轮到对面的先手了 如果我取了$j$对面最大只能取到$S-j$

那么对于所有$(k>S-j)$ 我们可以得到$-(dp[i][j]+ai)<dp[i+1][k]$

这个式子的意思就是对于所有$k$大于$S-j$我一定比$dp[i+1][k]$这个状态需要的差值小

总结下就是$dp[i][j]=max(-dp[i+1][k]-ai+1)$

不取栈顶元素：

那么接下来还是我的先手 我既然选择不取
那么我接下来转移来的状态$k$应该大于等于$j$
那么$dp[i][j]-1-ai=min(dp[i+1][k])(k>=j)$ 并且$dp[i][j]>=1$

那么最终的式子就是$dp[i][j]=max(min(dp[i+1][k]+1+aj),1)$

shy：

注意到，其实只有能量高的人有资格pass，以下过程都围绕这个进行

记f\[i\]\[j\]：从第i个糖果取到第n个，先手要获得j分，先手能量-后手能量至少为多少

显然必须从后面递推回来，即转移从n到1

分以下两种情况讨论(设当前为i)：

1、先手取当前的糖果

设sum=sigma(bj) (j = i to
n)，则当前的后手即为下一轮的先手，后手获得的权值应该&lt;=sum-j

于是对于所有的k&gt;s-j，必须满足f\[i+1\]\[k\]大于当前拥有的能量差值

即-(f\[i\]\[j\]+a\[i\])<f[i+1][k]，得f[i][j]=max(-f[i+1][k]-ai+1)

2、先手不取

那么当前的先手下一轮还是先手，且能得到的分数k应该>=j

所以必存在k&gt;=j满足f\[i\]\[j\]-1-a\[i\]&gt;=f\[i+1\]\[j\]，且f\[i\]\[j\]&gt;=1（这样才有权pass）

所以f\[i\]\[j\] = max( min(f\[i+1\]\[k\]+1+ai),1 )

lwt:

$dp[i][j]:= i\to n$的游戏, 拥有$j$美味度，最少需要的能量差值

设$sum= \sum_{k=i}^n s_i$

转移考虑, 先手取, 对于后手而言获得的美味度必然$\leq sum - j$

那么对于所有的$k>sum-j$, 必然满足$B-A = -(dp[i][j]+r[i]) < dp[i+1][k]$

化简得$dp[i][j] = max \{-dp[i+1][k]-r[i]+1\}$

先手不取, 那么状态应该由$k \geq j$转移来, 因为多的可以获得,
那么至多需要那么多差值

那么$dp[i][j]-1-a[i]>=dp[i+1][k]$, 且$dp[i][j]>=1$

化简得$dp[i][j] = min\{max(dp[i+1][k]+1+a[i], 1)\}$

### **J. Aizu 1354 Exhibition**

### **K. Aizu 1355 L Jumps**

Summary
=======

首先提一下训练现场(由于过去两天可能有些小细节不记得了，只有个人的比较真切，边回想边写的)
by shy：

一开始分配看题：shy前三、lwt中间、lcy后三

很快A、B就有人出了，当时A出了两队，B出了一队，均1A

于是shy继续看A，可是由于英语太差，读的太慢，两队1A的情况下，shy还没将题意读懂，这时lwt转战B，而且已经读懂题意，就由他摸键盘了

过了几分钟shy读懂题意，因为是水题，马上就有了思路，这时lwt还在敲。shy遍把代码在草稿纸上模拟一遍。

后来回想，这时候没去看别的题，而是自己模拟代码，是一个正确的选择。

因为可能队友下来的时候，你摸键盘的时候可能会发现你那题想错了，这样急于求成别的题反而会更浪费时间，所以还是把代码写出来靠谱，这个决策后来确实节约了不少时间

代码模拟出来以后lcy叫shy去看I，两人一看就知道是个博弈dp，而且很快就得出前置结论，也大概猜出了状态表示

但是状态转移却得不出结果，不了了了之（赛后发现果然是神题，虽然前面的结论都想对了）

在lwt写B的时候，突然脑袋一卡，说自己没想清楚，后来换shy上去摸键盘了

由于shy模拟过代码，所以很快就写出来了，但是后来一测，样例却过不了，后来发现是变量写错等一系列sb问题

当时debug多花了大概十分钟机时，比较不应该，主要是写在纸上的代码过乱，而且细节的东西没有处理好，这个以后要克服，应该和平时的习惯有关

1A以后，lwt上去写B，也是花了20min
1A，但是前期没想清楚就上去写题，从机时上来计算有些得不偿失

在lwt写B的时候，shy和lcy坑C，一开始没有思路，模拟不出样例，后来模拟出样例后两人找到规律，由于当时lwt看的F是个图论，所以shy让lcy上，自己和lwt坑F

F题题意坑，只能说根据样例能猜测到题意，但是样例应该没有歧义

题意是求有n&lt;=500个点的有权无向图的最小生成树的必须边(题意没明说生成树)

一开始两人没有想到生成树，而是自然而然想到tarjan（因为必须边很容易联想到割边），但是没有结果

在此中发现lwt一个个人问题，不知道点双边双的区别，没求过边双，当时是shy指出

这时C题1A，在这题的队伍交流和代码处理上应该没有任何问题

lcy助阵没有讨论出结果的F题，三人一通BB，lcy发现可以暴力做，因为必须边必定是割边，或者是环中权值比其他边都小的边

所以暴力弄出环再判断有没有和它相等的即可，于是lcy去敲F

shy和lwt去看其他题的题意，接下来两个人的状态就显得十分酱油：

lwt去看D，shy去看G

G题lwt和lcy先前看过，感觉不可做，shy本来想找找规律，然而没有结果

于是lwt和shy一起坑D，从二分，到三分，到模拟退火，没有结果（其中shy不会三分）

因为F题代码较难写，所以两人还有很长时间，这时lwt去看其他题，shy继续坑I，失败以后去找F题可能存在的trick

后来shy找到了F题一个trick，告诉lcy以后，才发现自己理解的和lcy想的不一样，那个trick不可能存在

说明队伍中存在交流问题，shy当时没有完全弄懂lcy的思路

在肯定lcy正确性以后，就和lwt去看当时没有人过但是赛后有人过的E(lwt训练前瞄了一下榜)

模拟过程十分麻烦，甚至有点不可理喻，于是两人皆认为此题不可做

F题sb的RE了一次以后2A，然后三人一起看G

一开始都没有思路，后来lcy说把括号序列处理成数列后可找到规律

其实是很常见的方法，大家都见过，只是当时不知道为什么都没想到

尤其是shy sb的以为要找规律

当时确定把）改成（的做法的正确性以后，lcy就上去写线段树了

后来发现（改成）的情况不一样，不过没太大问题，想一会就找到方法了

后来就是漫长的debug时间，这时另外两人没有贪别的题，而是帮助lcy找bug，感觉也是正确的抉择

因为lcy的代码能力也不算太顶尖，所以还是敲和调了比较长时间（其实当时其他两个人去敲也是一样的，因为大家的代码能力都没到炉火纯青的地步）

中间shy也出现和F题一样的情况，还是交流问题！！！

一开始样例都没过，后来在两人帮助和对拍下，样例过了（线段树各种写错，其实大家都一样，所以区域赛单挑很难有甜头）

交上去RE，后来lcy自己发现是pushdown的问题，因为和另外两人代码风格不一样，所以两人没有发现

不过lcy这个pushdown确实不是个好方法

然后2A

过G后还剩半小时，三人基本都在看I，少量时间看D，但还是没有结果

然后就结束了，5题罚时640，在现场榜40队里面排17，日本比较弱

以下是个人总结：

### shy

三分不会不行

以后要完全听懂队友思路再说话

由于和我妈说话太伤感了，堕落了一天一夜，导致D没补，而且善后工作现在才做完。。

### lwt

首先打比赛前 前一天莫名其妙几乎搞了个通宵 然后整场状态很迷
签到题还怀疑自己的代码 好在没出大问题

F题和lcy一起做过类似的却没有很快想到 思维活跃度不够

对于tarjan的熟练度没有想象中的高,
物理题惧怕推公式，模拟退火还不会，要敢于找规律

D题赛后推了半天还是无处下手 问题很多

### lcy

G题down太愚蠢了 F题数组开小更愚蠢

线段树down更正为正确姿势
