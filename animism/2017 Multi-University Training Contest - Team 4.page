Fudan ACM-ICPC Summer Training 2017
===================================

第11场训练报告
--------------

2017 Multi-University Training Contest - Team 4
-----------------------------------------------

### （2017年8月3日）

### 王鹏 郭雨 罗齐尧

------------------------------------------------------------------------

### 概况

​ 比赛通过10题，赛后补1题，总共通过11题

------------------------------------------------------------------------

### 比赛过程

​
开场罗齐尧先过了第9题，然后郭雨过掉了第11题。之后王鹏写第4题，但是由于题意的问题，导致不断地WA。郭雨写第5题，然后王鹏先弃掉第4题与罗齐尧讨论第3题，然后去写WA了一发过掉了。然后郭雨把第5题过掉了，王鹏把第4题修了下后过掉了。罗齐尧想出了第7题做法，上去写，交了后TLE，经过一番周折后过掉了。期间郭雨写12题，wa了一发后过掉了。然后罗齐尧和郭雨讨论出了第10题和第8题的做法，王鹏想出了第2题的做法，轮流上机后都过掉了，最后对剩下的题目都没啥想法于是就弃疗了。

------------------------------------------------------------------------

### 解题报告

-   Problem 1001. Big Integer
-   情况：
    -   尚未通过
-   负责人：
    -   ​
-   题意：
    -   ​
-   题解：
-   Problem 1002. Classic Quotation
-   情况：
    -   2WA 1AC
-   负责人：
    -   王鹏
-   题意：
    -   给你一个母串S和一个子串T。
    -   定义f(L,R)表示将S\[1..L-1\]和S\[R+1..n\]拼起来后串T在这个新串里出现的次数。
    -   q次询问，每次询问给你x,y(x&lt;y)，让你求$\sum_{1\leq L \leq x}\sum_{y\leq R \leq n}f(L,R)$
-   题解：
    -   我们发现对于没有穿过拼接处的答案是很好算的。
    -   对于穿过拼接处的答案，我们考虑左边正向匹配到T串的第x个位置，右边反向匹配到T串的第y个位置，那么我们只需考虑x,y而可以不管关系左边和右边的串。
    -   这样做的复杂度是$O(q*m^2)$的，还过不了。
    -   但是我们发现我们可以预处理一些东西，然后复杂度就变成了$O(q*m)​$。
-   Problem 1003. Counting Divisors
-   情况：
    -   1WA 1AC
-   负责人：
    -   王鹏 罗齐尧
-   题意：
    -   定义$f(x)$为$x$的因子的个数。
    -   求$\sum_{L\leq x\leq R}f(x^k)$
    -   $L,R\leq 10^{12}, R - L \leq 10^6,k\leq 10^7$
-   题解：
    -   我们枚举$[1..10^6]$的质数，然后去筛$[L,R]$内的数就好了。
    -   复杂度$O(10^5 * ln(R-L))$
-   Problem 1004. Dirt Ratio
-   情况：
    -   1WA, 1TLE, 1AC
-   负责人：
    -   王鹏 罗齐尧
-   题意：
    -   给你一个序列，令$f(L,R)$为区间$[L,R]$内不同的数字的个数。
    -   求$min\{\frac{f(L,R)}{R-L+1}\}, (1\leq L \leq R \leq n)$
-   题解：
    -   二分答案$k$后用线段树维护一下就好了。
    -   题意有毒。
-   Problem 1005. Lazy Running
-   情况：
    -   3WA 1AC
-   负责人：
    -   郭雨 罗齐尧
-   题意：
    -   在一个四元环中找一个回路，使得从2点出发回到2点，且距离大于等于K且最小
-   题解：
    -   首先考虑回路必然每个点度数为偶数，所以每条边奇偶性相同
    -   考虑每条边只会出现偶数次的情况，那么问题可以转化成2 \* d1,2 \*
        d2,2 \* d3,2 \*
        d4，选取其中的若干凑出的最小整数；考虑能达到的距离mod 2 \* d1 ==
        x的最小的值是多少，这样可以O(a1 \* n)转移出结果
    -   之后考虑每个的初始情况，每条边经过奇数次，偶数次，某些边没有经过，分析之后得到最有结果。
-   Problem 1006. Logical Chain
-   情况：
    -   赛后AC
-   负责人：
    -   ​郭雨
-   题意：
    -   ​给定N个点的图，M次询问，每次修改一些边，然后求所有强连通分量点对个数之和
    -   N &lt;= 250 M &lt;= 25000
-   题解：
    -   考虑Kosaraju算法，暴力计算的瓶颈在于每次dfs时找到下一个未被搜索过并可达的点，复杂度为为O(N\^2)
    -   使用bitset优化这一部分，将复杂度降到O(N\^2 / 64)
    -   尽可能使用位运算优化常数
-   Problem 1007. Matching In Multiplication
-   情况：
    -   3WA, 3TLE, 1AC
-   负责人：
    -   罗齐尧 郭雨
-   题意：
    -   ​给定一张二分图，左侧点集为U，右侧点集为V，U中每个点到V都有且仅有两条边。
-   对于每种完备匹配，对答案的贡献为其边权之积。保证存在完备匹配。
-   求最终答案
-   题解：
-   V中度数为1的点所连的边（不妨记为a -&gt;
    b，a在U中，b在V中）是必选的。因此可以确定取边a -&gt;
    b，并且a连出去的另一条边a -&gt; c，一定不取。
-   重复以上操作，直至V中不存在度数为1的点。又因为U中点度数均为2，所以V中也不存在度数为3及以上的点。因此图中只剩下若干互不相交的简单环。
-   每个简单环很显然只能间隔选边。只有两种取值方案。
-   Problem 1008. Phone Call
-   情况：
    -   1AC
-   负责人：
    -   郭雨 罗齐尧
-   题意：
    -   ​有一棵N个点的树，树上有M类边，每类边将
        ai到bi的最短路上所有点，及 ci到di的最短路上所有点
        两两之间都连上了权值为wi的边。
-   问包含点1的生成树，点数尽可能多的前提下边权之和尽可能小
-   题解：
-   由于点数第一优先，因此能连的点都会连。因此每类边可以等价为，lca以外的每个点到它父亲连wi的边，两个lca之间连wi的边。
-   由于每个点到它父亲的边有多条，我们只需要其中权值最小的边。这就转化为在树链上覆盖权值的问题。而且还是离线处理，挂个并查集解决。
-   最后就是最小生成树。跑一遍kruskal即可。
-   Problem 1009. Questionnaire
-   情况：
    -   1AC
-   负责人：
    -   罗齐尧
-   题意：
    -   给定N个数字A1,A2,…,An，找出m和k使得Ai%m == k的个数大于等于一半
-   题解：
    -   取m为2，k为0或者1一定有一个可行解
-   Problem 1010. Security Check
-   情况：
    -   2WA 1AC
-   负责人：
    -   罗齐尧 郭雨
-   题意：
    -   ​有两条队列，每次可以移除其中一条队列的队首，或者当两个队首权值之差超过K时，可以同时移除。问至少多少次可以移除全部元素。
-   队列长度&lt;=6e4 K &lt;= 10 权值两辆不同
-   题解：
-   考虑暴力做法，即使用dp\[i\]\[j\]表示当前运作到每条队列的第几个
-   因为K极小，因此在每2*K+2个数字中，必然存在一个数字与Ai权值之差超过K。又因为可以同时移除两个队首时，一定会同时移除，因此只有|i -
    j| &lt;= 2 * K + 2时，该dp状态才是有用的
-   因此使用dp\[i\]\[k\]代替dp\[i\]\[j\]，其中j = i + k - 15，0 &lt;= k
    &lt;= 30，即可完整表示所有需要的dp状态。
-   Problem 1011. Time To Get Up
-   情况：
    -   1AC
-   负责人：
    -   郭雨
-   题意：
    -   ​识别七数码表示的数字
-   题解：
-   因为是精确识别，暴力判断
-   Problem 1012. Wavel Sequence
-   情况：
    -   1WA 1AC
-   负责人：
    -   郭雨
-   题意：
    -   ​有两个数列，A数列长度为N，B数列长度为M。选择两者的公共子序列C，并要求a1
        &lt; a2 &gt; a3 &lt; a4 &gt; a5 ……。
-   问总方案数
-   T &lt;= 15 N, M &lt;= 2000
-   题解：
-   使用dp\[i\]\[j\]表示结束分别在A中的第i个位置，与B中的第j个位置。（需要事先预处理Ai
    = Bj的位置，并筛去不需要的状态）
-   （先讨论Aj &lt; Ai的情况。Aj &gt;
    Ai的情况完全类似，不再赘述）考虑当前在Ai位置结束，能够转移到的状态需要满足
    k &lt; i, Ak &lt; Ai, Ak对应的Bt 满足 t &lt; j
-   先假设Ak中不存在重复。那么合法的Ak对应的所有Bt的位置集之并不会出现重复（否则Ak就有重复）。因此所有合法Bt数量
    &lt;=
    M，因此可以通过对Bt排序后单调扫描，用dp\[k\]\[t\]对dp\[i\]\[j\]进行转移。
-   再回头考虑Ak中出现了重复，不妨记为k’。如果Ak与Ak’相同，且k' &lt;
    k，那么如果k'能对之后的i进行转移，那么k也能进行相同的转移。因此直接将dp\[k'\]的值累计到dp\[k\]上即可。之后就无需再考虑k'。
-   因此对dp\[i\]进行更新的总复杂度为O(N + MlogM)，总复杂度为O(N \^ 2 +
    N \* M \* log M)
-   Problem 1013. Yuno And Claris
-   情况：
    -   尚未通过
-   负责人：
    -   ​
-   题意：
    -   ​
-   题解：

------------------------------------------------------------------------

### 总结

​ 我们队这次罚时很高，暴露了我们队代码出错率高的缺点，需要改进。
