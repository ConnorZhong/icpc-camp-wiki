Fudan ACM-ICPC Summer Training 2017
===================================

第12场训练报告
--------------

### （2017年8月4日）

### 王鹏 郭雨 罗齐尧

------------------------------------------------------------------------

### 概况

​ 比赛通过9题，赛后补0题，总共通过9题

------------------------------------------------------------------------

### 比赛过程

​
开场罗齐尧先过掉了第9题，之后王鹏过掉了1,2题，然后郭雨过掉了第11题。罗齐尧想出了第5题的做法，王鹏上去写，然后RE了。罗齐尧上去写第8题，RE了一发后过掉了。之后罗齐尧写第6题过掉了。然后王鹏改第5题，周折了一番后过掉了。郭雨写第7题，WA了几发后过掉了。期间罗齐尧和王鹏讨论出了第4题做法，王鹏上去写后过掉了。最后一个小时罗齐尧和我合力搞第3题，最后没有调出来，GG。

------------------------------------------------------------------------

### 解题报告

-   Problem 1001. Ski Race
-   情况：
    -   1AC
-   负责人：
    -   王鹏
-   题意：
    -   给你一个序列，让你求出所有的数，这些数的的特点是他们的所有倍数都不在这个序列中(不包括自身)
-   题解：
    -   分解质因数再枚举下因数。
-   Problem 1002. Chairs
-   情况：
    -   1AC
-   负责人：
    -   王鹏
-   题意：
    -   一个$n\times m$的棋盘，棋盘上有些必经点，让你从左上走到右下并且每次只能向右走或者向下走，求一种可行的方案。
-   题解：
    -   水题
-   Problem 1003. Triangle
-   情况：
    -   4WA
-   负责人：
    -   王鹏 罗齐尧
-   题意：
    -   二维平面上，有一个三个顶点都是格点的三角形，但是你不知道坐标。
    -   每次你可以给评测机一个询问(a,b,c)，询问三角形内满足$ax+by\leq c$的区域占三角形面积的多少。
    -   要求你在不超过1000次询问内找出三角形的三个定点。
-   题解：
    -   首先显然我们可以二分出包含三角形的最小矩形。
    -   然后我们对矩形的四个顶点分别作为直线的某一点，然后二分，这样我们能找到一些临界点。
    -   根据临界点的个数分类讨论。
    -   细节有点多。。。
-   Problem 1004. Wires
-   情况：
    -   1AC
-   负责人：
    -   王鹏 罗齐尧
-   题意：
    -   题目抽象后可以变成这个：
    -   给定n个点$(X_i,Y_i)$，(X,Y互不相同)
        让你将这n个点分成两个集合$A,B$，使得$A$中不存在两个点a，b，a在b的左上方。(集合B的要求也是一样的)，定义$f(i) = min(2P - X_i - Y_i, X_i + Y_i) + Q, g(i) = \sqrt {(X_i - Y_i)^2 + Q^2}$(P,Q是题目给定的常数)
    -   求一种集合划分的方案，使得$\sum_{i \in A}f(i) +\sum_{i \in B} g(i)$最小。
-   题解：
    -   我们先对第一维排序，然后发现，如果第二维的最长下降子序列$\geq 3$，那么就无解。
    -   否则，我们把这个点列划分成若干块，使得我们在每个块内取一个点组成的点列是单增的。
    -   每个块内只可能有一种划分方法，我们枚举哪个集合是A，哪个集合是B，然后求最小值。
    -   把所有的块的答案加起来就可以了。
-   Problem 1005. Voting
-   情况：
    -   4RE 1WA 1AC
-   负责人：
    -   罗齐尧 王鹏
-   题意：
    -   有n个选民和,m个候选人，每个选民只能给一个候选人投票。
    -   第i个选民给第j个候选人投票需要花费f(i,j)的代价。
    -   当某个候选人的票数严格比其他候选人的票数高的时候，他胜出。
    -   现在候选人T想胜出，问最少需要花费多少的代价。
-   题解：
    -   枚举T的票数x。
    -   那么其他人最多只能得到x-1张选票，而T至少得到x张选票。
    -   我们发现这是个有上下界的最小费用最大流，套板子就好了。
-   Problem 1006. Finate automaton
-   情况：
    -   2WA 1AC
-   负责人：
    -   罗齐尧 郭雨
-   题意：
    -   ​要求设计一个状态数最少的有限状态自动机，使得能够识别所有B进制下被M整除的数字。
-   2 &lt;= B &lt;= 16， 2 &lt;= M &lt;= 1e5
-   题解：
-   先暴力构造一个最简单的自动机，使用状态i表示模M为i的数字，转移方程为j
    = (i \* B + k) % M
-   hash每个状态的出边，如果两个状态的出边完全相同，就可以压缩为同一个状态
-   不断迭代即可。由于每次都会减少至少一半的状态，因此迭代数很有限。
-   Problem 1007. Scene Management
-   情况：
    -   1CE 3WA 1AC
-   负责人：
    -   郭雨
-   题意：
    -   ​初始有一棵有根树，树根为root。有四种操作，add会从一个无父亲的点到另一个点连边（不会使得root变成其它点的儿子），remove会移除两个点之间的边，modify会修改一个点（我们不关心具体修改了什么，而是修改这个操作本身），render会要求你输出状态。保证所有操作合法。
-   你需要输出两次render状态之间，发生变化的点。add发生，当且仅当一个点从不是root的后代，变成root的后代。remove当且仅当一个点从root的后代变成不是root的后代。modify当且仅当一个点前后都是root的后代，且这个点到root的路径上，有点被修改，或者有边被删除、添加。不需要考虑其他状况。
-   保证总输出点数在30w以内，保证树深度始终小于1k。总点数在10w以内，总操作数在20w以内。
-   题解：
-   因为输出范围受到限制，因此一定是适当的暴力+优化
-   在两次render之间，我们将受到修改的点（一个点（更新前或更新后的）父亲是root的后代，那么它就需要被更新。）进行记录，在render时将这些点取出，更新他们的后代。
-   这样做会有两个问题
-   （1）会更新一些无用的点（例如原是root下的点被移动到了非root下，又有一个非root下的点被移动到它以下，就会产生不必要的搜索）。因此当深搜到某个点之前与现在都不是root的后代时，就退出搜索。
-   （2）会导致一些错误的更新。当两个点x为y的祖先，且都被添加、删除到root之下，并且还是有祖先关系时，如果先更新y，不适当的姿势就会导致误认为y仍在root之外。因此需要先计算x与y的深度，优先更新x。
-   综上所述，修好所有bug后就能通过这道题。
-   Problem 1008. A system of balance scales
-   情况：
    -   1RE 1AC
-   负责人：
    -   罗齐尧
-   题意：
    -   给定一个组合天平，每次可能改变天平中某个物品的质量，让天平一直保持平衡，每次询问某一个天平平衡时左侧到支点的长度
-   题解：
    -   给定的图是一棵树，天平平衡时到左侧距离 ＝ (右侧质量)
        / (左侧质量＋右侧质量) ＊ 天平臂长
    -   DFS序，用线断树维护每个子树的质量和。
-   Problem 1009. Karmon Be Ill
-   情况：
    -   1AC
-   负责人：
    -   罗齐尧
-   题意：
    -   给定N个数，从第K个数开始，返回前面所有数前K大之和
-   题解：
    -   用个堆维护最大的K个数，每次用堆内最小的和添加进来的比较大小更新
-   Problem 1010. Battle City Online
-   情况：
    -   尚未通过
-   负责人：
    -   ​
-   题意：
    -   ​
-   题解：
-   Problem 1011. Test Generation
-   情况：
    -   1AC
-   负责人：
    -   郭雨
-   题意：
    -   ​给定一个数字串，问有哪些子区间构成的数字被Pi整除（多组询问，数字串不变，Pi &gt;
        10）
-   题解：
-   将子区间拆分成两个前缀相减，再使用10的逆元补充0，使用hash查询，即可解决问题。

------------------------------------------------------------------------

### 总结

​ 正常发挥，还需加油。
