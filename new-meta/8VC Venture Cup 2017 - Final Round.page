D. Bacterial Melee
==================

**题目: **
有一个长度是$n$的小写字母串。每次操作指的是挑一个位置，把它左边或者右边变成和它一样的字母。可以进行任意多次任意位置的操作。问有多少种可能的结果。

**做法: **
定义$comp(s)$是字符串$s$删掉多余的相邻且相同的字符后的字符串。比如$comp(aabccd)=abcd$。那么一个结果$r$可以由$s$得到当且仅当$comp(r)$是$comp(s)$的子序列（一次操作可以抹掉comp中的字符，或者不变）。一个$comp$可以生成$\binom{n-1}{length(comp)-1}$种不同的最终结果。所以只要统计$comp(s)$的对应长度的合法（符合$comp$的定义）的子序列有多少个，再乘上那个组合数加起来就可以了。这个可以用dp。记$las[i]$为$s[i]$在$s$中上一次出现的位置，$dp[i][j]$表示在$s$长度为$j$的前缀中，长度为$i$的合法子序列有多少个。那么$dp[i][j]=dp[i][j-1]+dp[i-1][j-1]-dp[i-1][las[i]-1]-(dp[i-1][las[i]]-dp[i-1][las[i]-1])$，各项分别对应+不加$s[i]$+加上$s[i]$-加上$s[i]$后重复-加上$s[i]$后不重复且不合法。

[D.cpp](8VC%20Venture%20Cup%202017%20-%20Final%20Round%20D.cpp)

E. Byteland coins
=================

**题目: ** 现在有$n$种货币, 每种都是前一种的倍数(但是可能是$1$倍).
给一个总钱数$S$, 问有多少种方法用手头的货币凑出恰好$S$元.
手头的货币最多有$3e5$个, $S\le 1e10000$,
每种货币和前一种货币的比值在$1$到$1e9$之间.
保证相邻比值为$1$的货币每种不超过20个.

**做法: ** 背包是肯定的. 考虑到货币的性质, 如果相邻货币的比值不是$1$,
那么前一种货币用过以后, 必须令剩余的钱数是后一种货币的倍数.
这个时候我们可以每次$O(当前最多凑出多少钱)$暴力DP,
每次只保留余数正确的部分进入下一次.
这样每次DP的范围都最多加上这种货币的数量, 加了以后又会至少除以2,
总复杂度就是对的. 相邻的比值是1的话, 复杂度就不对了.
但是注意到题目条件每种货币最多有20种和他面值一样. 所以这复杂度就乘了20.

F. Long number
==============

**题目:**

这道题的本质就是问，把$l$到$r$这些数字一个接一个的接成一个数字(比如8-12就变成89101112)，问现在$l, r$都可以是一个$10^5$长度的数字，问他们接出来的数字在模$1e9+7$意义下是多少。

**题解:**

考虑$|l| = |r|$，那么我们有$\sum_{i=0}^{i=r-l} (r - i)10^{|l|i}$。

仔细观察，如果知道了$r-l$在模$1e9 + 7$与$\phi(1e9 + 7)$意义下的值，这个式子可以$O(log MOD)$算出来。

那么对于长度不等，我们分段计算即可。

最后复杂度就是$O(n \log n)$。

[F.cpp](8VC%20Venture%20Cup%202017%20-%20Final%20Round%20F.cpp)
