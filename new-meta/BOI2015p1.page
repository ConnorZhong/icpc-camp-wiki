bow
===

**题意: ** 给你一张保龄球赛况的记录纸.
现在有一些每个frame结束后的total的数字被擦掉了(整个数字, 不是数码),
还有一些得分被擦掉了(得分即每个回合击中几个瓶子之类的)(这里可能擦掉任意字符).
现在问你有多少种符合没被擦掉的东西的合法保龄球比赛方案.

**做法: ** 模拟DP. 但是注意这里total数字是预知未来的,
即某次击球所得bonus是算在之前允许这个bonus的那一轮上的,
不是算在确定这个bonus的当前这一轮上的.

[code](BOI2015p1.cpp)

edi
===

**题意: ** 一个编辑器, 里面只有一个位置可以写字符.
每个操作可以是编辑操作, 把屏幕上的字符改成某个特定的. 也可以是撤销操作,
撤销操作有个等级,
每个撤销操作会撤销当前没撤销的最晚的一个(等级比他低的撤销操作或者编辑操作).
撤销之前的撤销操作后, 会引起连锁反应.
现在问你每个操作结束后屏幕上的字符.

**做法: ** 有个定理是当前的撤销操作x取消了操作y,
那么当前的状态就和y即将进行的状态一样, 除了尾部多个x.
这样就可以可持久化线段树了.

[code](edi.cpp)

net
===

**题意: ** 有棵树, 让你把他变成双联通, 加尽量少的边. 注意此题spj有问题.

**做法: ** 把叶子两两配对. 考虑所有的叶子就可以发现这样是必要的.
最后以重心为根, 按照重心的儿子分为多个子树,
每个叶子都和不同子树里面的叶子配对.

[code](net.cpp)

fil
===

**题意: ** 有个文件系统. 你可以建立一个符号链接,
使得一个文件的路径名长度等于给定值. 现在问哪些文件可以做到这一点.

**做法: ** 符号链接可以建立在路径中无限循环,
也可以从任意位置指向路径中(只用一次).

[code](fil.cpp)

hac
===

**题意: ** 一个项链, 上面每个珠子有个价值. 你先选择一个.
然后你的对手选择一个. 此后你们都只能选和已选的相邻的(环状)(可以选择过).
问足够聪明的你能保证得到多少价值的珠子.

**做法: ** 考虑你的第一轮已经结束的时候.
你的对手可以为他保证任意一段连续的长度为$n/2$的珠子.
他维护这个性质:他期望的这一段的左(右)端点为你已经占领的一段的左(右)端点和他已经占领的一段的左(右)端点的中点.
所以你能做的就是破坏他连续一段决策.

[code](hac.cpp)

tug
===

**题意: ** 有$2n$个高手拔河. 绳子左右各有$n$个位置.
他们每个人在绳子左边只有一个位置愿意站, 在绳子右边也是.
现在让你适当的把高手安排在他们愿意站的位置上, 使得所有的高手都参赛,
并且绳子左右两边的个高手的重量和的差的绝对值小于等于$k$. 问是否可能.

**做法: ** 先不考虑体重. 这是一个二分图匹配问题,
且一边每个点的度数都是2. 我们先把只有一条边的确定下来.
现在右边没有点度数为$1$了. 那有解当且仅当右边的每个点度数都是$2$.
这样就能线性求出匹配的可行解.
并且发现每个可行解都是这些环每个选择shift与否得到的.
即转化为了一个背包问题. 注意到时限10s.

[code](tug.cpp)
