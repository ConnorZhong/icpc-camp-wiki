``` {.cpp}
#include <bits/stdc++.h>
using namespace std;
const int N = 2005;
int tol[N][N], tou[N][N], sum[N][N], f[N][N];
char s[N][N], t[N][N];
int work(int n, int m) {
    for (int i = 1; i <= n; ++ i) {
        for (int j = 1; j <= m; ++ j) {
            sum[i][j] = sum[i - 1][j] + sum[i][j - 1] - sum[i - 1][j - 1] + (s[i][j] == '#');
            if (s[i][j] == '#') {
                tol[i][j] = tol[i][j - 1] + 1;
                tou[i][j] = tou[i - 1][j] + 1;
            }
            else {
                tol[i][j] = tou[i][j] = 0;
            }
        }
    }
    int ans = 0;
    for (int i = 1; i <= n; ++ i) {
        for (int j = 1; j <= m; ++ j) {
            if (s[i][j] == '.' || sum[i - 1][j - 1] == 0) {
                f[i][j] = 0;
            }
            else {
                f[i][j] = f[i - tou[i][j] + 1][j - tol[i][j] + 1] + 1;
                ans = max(ans, f[i][j]);
            }
        }
    }
    return ans;
}
int main() {
    freopen("jinxiety.in", "r", stdin);
    freopen("jinxiety.out", "w", stdout);
    int n, m;
    while (scanf("%d%d", &n, &m) == 2 && n + m) {
        for (int i = 1; i <= n; ++ i) scanf("%s", s[i] + 1);
        int ans = 0;
        for (int i = 0; i < 4; ++ i) {
            ans = max(ans, work(n, m));
            for (int i = 1; i <= n; ++ i) {
                for (int j = 1; j <= m; ++ j) t[j][n - i + 1] = s[i][j];
            }
            swap(n, m);
            for (int i = 1; i <= n; ++ i) {
                for (int j = 1; j <= m; ++ j) s[i][j] = t[i][j];
            }
        }
        printf("%d\n", ans);
    }
}
```
