Problem D. Puzzle
=================

**题意:**

现在有一个$n*n$的网格，其中$n \leq 100$。每一行，每一列都恰好有一个格子里面有一个斜着放置的镜子。

现在有$m \leq 10000$个子弹，在不同的时刻会从边界上平行于坐标轴的射入。现在问你每个镜子要怎么什么方向的斜着放置，才能让这些子弹不会碰到。

**题解:**

由于每一行，每一列都恰好一面镜子，所以每个子弹恰好会被反射一次。考虑子弹碰到的情况

1.  同一轨道上相向而行的子弹，这样相当于ban掉了这个轨道上镜子的一种放置方式。

2.  不同轨道上的子弹，恰好在一个格子中相遇，这就是相当于不允许对应的两个轨道的某一种放置方式。

所以这提示我们此题是一个2-sat问题。

对于第一种情况，我们平方枚举一个轨道上的子弹即可，当然为了复杂度可以单调扫一遍。

对于第二种情况，原则上也可以暴力平方枚举，但我是直接记录了每个轨迹经过了哪些格子，对同一时刻在同一个格子的事件处理2-sat的边。

[XV Open Cup named after E.V. Pankratiev. GP of Udmurtia D.cpp]()

Problem I. Game with Coins
==========================

**题意:**

在一个最多$40\times 40$的网格图中, 有一个棋子. 棋子有一个终点.
除了棋子以外的格子可能是空地或者阻碍. 现在棋子每一步可以进行如下操作:
(1)选择行动模式或者改造模式; (2) 如果选择了行动模式,
则系统随机轻行动和重行动(接下来解释), 如果选择了改造模式,
则系统随机选择创造或消除; (3)选择4方向或8方向,
选择后系统在4方向(上下左右)或8方向(带上45度的)中随机一个;
(4)如果是轻行动, 则向指定方向滑动棋子直到棋盘边界或障碍, 如果是重行动,
则棋子会推动至多一个障碍, 直到碰到第二个障碍或者墙壁, 如果是创造,
则棋子指定方向的相邻格子会出现障碍(已经出现或者在边界外则没有变化),
如果是消除, 那么对应格子会变成空地.
现在要你在$60000$次操作以内让棋子停在终点.

**做法:**

操作的随机性无法改变, 一个简单的想法是,
可以不断改造直到当前格子的四周不想去的方向都是障碍, 想去的方向是空地,
这样再多行动几次应该能去想去的方向. 但是可能会有重移动.
好在用这种方法不断玩下去, 最终整个棋盘会被填满,
即重移动也几乎不能推动障碍了. 这样就能有效的前往目的地了. 要注意的是,
最终到达目的地的时候需要考虑适当的移动策略避免死循环.

Problem J. The hardest dice problem
===================================

**题意:**

现在有$n \leq 10$个骰子，每个骰子的六个面上有数字。现在你要玩游戏，你每次会选一个骰子掷出去，裁判会告诉你的点数是多少。你可以选择接受，那么这一轮你的得分就是这个值减去你这一轮投掷的骰子次数，否则，你要再投掷一个之前没有投掷的骰子。

现在你的对手按照某个固定的顺序来投掷骰子，并且它的策略是，如果之后最优策略下能有至少$\frac{1}{2}$的概率比当前大(考虑了减去投的次数的问题)，那么会不接受当前的分数，否则接受。

你现在要和他玩这个游戏，你在每一轮最后可以知道和他这一轮投出来的骰子点数大小关系(不能知道对方确切的点数)。要你和他玩$10000$场赢$5000$场。注意在和他比胜负的时候，平局算你赢。

**题解:**

首先简单想想就能发现，不同的策略之间是没有严格的偏序关系的，所以我们的策略是肯定要依靠每一轮的结果的。通过猜出来他的决策从而和他一样投掷骰子(注意平局算我们赢)。

由于有$10$个骰子，也就是说对手可能策略高达$10!$种，这显然是没法穷举的，而且还有一个问题是如何评价一种策略和对手策略的"相似程度"。

标程教导了我们，给了多少信息，就做多少事情。因为我们只知道每一次游戏的输赢，而且对于一个确定决策，我们可以得到每个结果的概率分布。那么我们一开始随机一些排列作为我们的决策，相似程度就是对阵某个策略的时候的胜率。

通过遗传算法，把我们觉得相似的策略进行变异与交合，生成更多的可能好序列，不断如此迭代即可。

标程的参数是每一个generation是$400$轮的结果，这样迭代$25$次差不多就好了。
