C. Collections In Containers
============================

**题意:**

给你一个$n$个$d$维的向量集合，满足，如果存在向量$a_1, a_2, ..., a_d$，那么对于任意$b$，满足$0 \leq b_i \leq a_i$都存在。

现在要求你求出一个$n$的排列$p[i]$，使得$a_{ij} + a_{p[i]j} \leq max_{i}a_{ij}$。

满足限制$nd \leq 1e5$

**题解**

这个限制其实就是告诉你，这个集合是凸的，并且满足，

1.  如果你设集合$S(x)$是确定第一维是某个数字$x$，其他维任意的所有向量在去掉第一个维度后组成的集合，那么这个集合也满足原题意说的凸性。

2.  对于任意$a \geq b$，如果$S(a)$是$S(b)$的子集。

有了这个就好做了，设$max_{i}a_{ij} = c_j$，那么我们让$S(c_j - x)$和$S(x)$先分别匹配完，然后对于$S(c_j - x)$中的每个元素，和在$S(x)$中对应的那个元素交换下匹配就好了。

[Petrozavodsk Winter-2015. Michael Tikhomirov Contest 1 C.cpp]()

D. 1D Spreadsheet
=================

**题意：**

你有一个长度为$n\leq2e5$的数组。数组里可以是一个值，也可以是一个指针。如果格子是个指针，那么他的值是沿着指针一直跳，直到跳到某个位置不是指针，那个位置的值。一开始全是值。现在要执行$2e5$个操作。每次操作是把数组里某个位置改成某个值，或者指向某个别的位置，还有查询一段区间值的和。

**题解：**

对询问分块处理。对于这块之前的操作，可以$O(n)$算出每个位置的值，以及前缀和数组。对于这块里所有涉及到操作的那些点，标记为重要点。这些重要点会有自己管辖的一堆点（能通过指针跳到这个重要点的非重要点），也就是在这块操作里，这些管辖的非重要点的值，和这个重要点是同步的。

然后考虑一个操作，实质是修改了某些重要点（和管辖点）的值。每次可以$O(k)$（$k$是块的大小）来更新那些重要点的实际值。每次查询可以调用前缀和，算出不被重要点管辖的部分，然后$O(k)$枚举每一个重要点，二分出有多少个管辖点落在了查询区间里，加到答案里。

复杂度$O(\frac{n}{k}(n+k^2+k^2\log n))$，取$k=300$多就能过了。

[D.cpp](Petrozavodsk%20Winter-2015.%20Michael%20Tikhomirov%20Contest%201%20D.cpp)

I. Infinite Embedding
=====================

**题意: **

给定一棵满二叉树$T$(点数不超过2000)和一棵无穷满二叉树$I$.
问有多少个从$T$的结点到$I$的结点的单射, 使得(1)若$v$是$T$中的叶子,
则$f(v)$在$I$中的深度由输入指定, 为$h(v)$; (2)若$v$是$T$中$u$的左孩子,
则$f(v)$在$I$中是以$f(u)$的左孩子为根的子树中的一个结点; (3)
若$v$是$T$中$u$的右孩子,
则$f(v)$在$I$中是以$f(u)$的右孩子为根的子树中的一个结点.

**做法: **

设$dp_v(x)$代表仅考虑$T$中以$v$为根的子树,
且$f(v)$在$I$中的深度至少为$x$, 有多少种满足题目条件的映射.
$dp_{root}(0)$即为答案.
注意到这里$f(v)$在哪一棵以深度为$h$的点为根的子树中其实不重要,
因为这些子树完全是对称的. 于是我们有如下递推式:

若$v$为叶子, 则$dp_v(x)=2^{h(v)}$, 当$x\le 2^{h(v)}$.

若$v$的左右儿子分别为$a$和$b$,
则$dp_v(x)=\sum_{x\le x'\le h(v)}\frac{dp_a(x'+1)}{2^{x'+1}}\frac{dp_b(x'+1)}{2^{x'+1}}2^{x'}$.
其中$h(v)=min(h(a),h(b))+1$.

设$dp_v(x)=\sum_{0\le i}{a_i2^{ix}}$,
可以发现这种表示方法关于我们的转移封闭, 且$a_i$不为$0$的最大的$i$,
这里称之为$v$的度数, 最多为$v$的左右儿子的度数之和. 于是总复杂度$n^2$.
