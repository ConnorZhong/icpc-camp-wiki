``` {.cpp}
#include <bits/stdc++.h>

using namespace std;

vector<int> all[10] = {
    {},
    {},
    {2},
    {3, 4},
    {4, 6, 10},
    {5, 6, 8, 9, 14, 21},
    {6, 8, 10, 14, 44, 52},
    {7, 8, 9, 10, 12, 15, 22, 33, 39, 52, 55, 68, 102, 114, 138}
};

map<long long, int> para[10];

long long solve(int k, long long r) {
    long long ret = 0;
    for (auto e : para[k]) {
        ret += r / e.first * e.second;
    }
    // cout << r << " " << k << " = " << ret << endl;
    return ret;
}

int main() {
    for (int k = 1; k <= 7; k++) {
        int m = all[k].size();
        for (int mask = 1; mask < (1 << m); mask++) {
            long long lcm = 1, sign = -1;
            for (int i = 0; i < m; i++) {
                if (mask >> i & 1) {
                    sign *= -1;
                    lcm = lcm / __gcd(1LL * all[k][i], lcm) * all[k][i];
                }
            }
            para[k][lcm] += sign;
        }
    }
    int test;
    scanf("%d", &test);
    while (test--) {
        long long a, b;
        int k;
        scanf("%lld %lld %d", &a, &b, &k);
        printf("%lld\n", solve(k, b) - solve(k, a - 1));
    }
    return 0;
}
```
