String \[Miceren\]
==================

**题目描述**

给出一个串，强制在线要求做以下操作:

1.  往字符串后面加入字符$c$。
2.  询问一个区间$[l, r]$中，最长的，出现了两次的串的长度。

**题解**

由于动态加入，考虑动态树或者后缀自动机。由于后缀树的UKK算法有『懒惰』的特性，往后面加入字符后，只能保证维护好树的形态，却无法提供所有的以此为后缀的位置。

考虑使用后缀自动机，可以发现我们是拥有当前加入的后缀在后缀自动机隐式建造的后缀树上的位置的。考虑在这个点以及祖先这一条链上更新，打上当前位置的标记。

考虑我们维护好了一个字符串，长度为$r$，而我们的询问恰好是以$r$为结尾的后缀。那么我们对后缀树上每一个串维护在串中出现的最后2个位置。并且对倒数第二个位置维护它的位置和长度。

考虑用动态树维护这一个隐式的后缀树，每一次更新是对后缀树上一条到根的路径打标记。巧合的是，我们在后缀树上access的时候，每一个遇到的块其实都是我们之前打过的标记，而且恰好就是当前需要更新的『倒数第二』。我们就可以愉快的用这些信息来更新了！

因为要强制在线的询问任意$[l, r]$，而更新其实都是对一个线段树进行标记的添加，这里我们可以使用可持久化线段树做到这一点。
