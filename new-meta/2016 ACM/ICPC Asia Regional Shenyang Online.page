J. Count primes \[Miceren\]
===========================

题意: 给你一个$n \leq 1e11$, 求小于等于$n$的所有素数。

题解:
考虑使用$dp[n][m]$代表前n个数字里面，用前m个素数筛掉后还剩下多少个数字，可以使用$dp[n][m] = dp[n][m - 1] - dp[n / prime[m]][m - 1]$来转移，然后发现一些性质。

-   如果$prime[m] * prime[m] \geq n$，那么$dp[n][m]$就是$n$以内的所有质数，所以对于$prime[m]^2 \geq m$的情况，我们只需要找到满足$prime[m']^2 \leq n$的最大的$m$即可代替。所以对于一个$n$来说，只有$\sqrt(m)$的第二维是有用的。

-   根据转移方程，我们发现所有在第一维的可能的数字只能是$\lfloor\frac{n}{i}\rfloor$这样的性质，只有$\sqrt(n)$种

于是接下来，我们直接记忆化dp，可以做到$O(n^{\frac{3}{4}})$的复杂度。

$$\sum_1^{\sqrt{n}} \sqrt{i} + \sqrt{\frac{n}{i}} \approx \int_1^{\sqrt{n}} \sqrt{i} + \sqrt{\frac{n}{i}} = n^{\frac{3}{4}}$$

Improve:

考虑当n相对较小的时候，我们可以简单地直接预处理出来很多的值，考虑一个cutoff
$M$，把所有我们需要的dp值中，$n$小于等于$M$的询问都抓出来，离线做，这个通过使用树状数组，在$O(M \log M + Q)$的时间复杂度以内搞定，Q为我们需要的询问数量。把$M$取为$n^{\frac{2}{3}}$，把上面公式中的i的上限改为$n^{\frac{1}{3}}$，得到

$$ \sum_1^{n^{\frac{1}{3}}} \sqrt{\frac{n}{i}} \approx \int_1^{n^\frac{1}{3}} \sqrt{\frac{n}{i}} = n^{\frac{2}{3}}$$

可以发现，由于我们的dp转移只有2项，所以我们的$Q \approx n^\frac{2}{3}$，所以总复杂度就是$n^\frac{2}{3} \log n$，由于质数的相对稀疏，我们答案中其实会除以一个$\log^\frac{2}{3}$
