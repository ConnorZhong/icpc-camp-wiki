A. Rectangle Query
==================

**题意：**

给你平面上$n\leq 5e4$个点。强制在线回答$q\leq 5e4$个询问，每次询问给你一个矩形，问你把矩形里的点离散化有几种不同的$x$和$y$。

**做法：**

分块bitset。考虑计算一块矩形里有多少个不同的$y$坐标。把点按x坐标排序，然后每$\sqrt{n}$个点分块，假设有$C$块。预处理$\frac{C(C+1)}{2}$个bitset，表示块$i$到$j$块里的所有y坐标是否出现过。每次询问一个矩形，就把没有出现在整块里的点单独拿出来，和整块预处理的答案or一下，然后左右移一下再count就得到答案了。注意由于一行里的点可能被拆成多个块，所以要分别记录某一行最早出现的块和最晚出现的块。复杂度$O(\frac{n^2+nq}{64}+q\sqrt{n})$。

[A.cpp](Petrozavodsk%20Summer-2015.%20Moscow%20IPT%20Contest%20A.cpp)

D. Maximal Common Subpair
=========================

**题意:**

给你两个长度为$n, m \leq 2e5$的串$s, t$，要求你算出来一个最长字符串$pair$,
$x, y$，使得$|x| + |y|$最长，并且$x, y$作为子串在$s, t$里面按顺序出现过。

**题解:**

考虑$f[i][j], g[i][j]$，代表前缀(后缀)串$s[1..i], t[1..j]$的最长公共后缀。

我们对$s$建立SAM，枚举t串的字符位置$i$，在SAM上行走，考虑更新的位置必然是在SAM上这个点管辖的right集合里面最靠左的那个位置。再往parent上跳，都是满的，所以更新过一次就不用再更新了。可以证明这样的更新次数就$O(n)$次。然后正着做一次，反着做一次，把所有的更新都提取出来，最后用树状数组合并就好了。

[Petrozavodsk Summer-2015. Moscow IPT Contest D.cpp]()

F. PQ tree
==========

**题意:**

给你$k \leq 500$个长度为$n$的排列，问你有多少个PQ树可以生成这所有排列。

PQ树的内节点有$P, Q$两种，叶子则是n个不同的$1..n$里面的数字。

对于$P$节点，至少两个儿子，并且你可以任意交换$P$的儿子顺序。

对于$Q$节点，至少三个儿子，并且你只能reverse或者不reverse孩子的顺序。

**题解**

DP，考虑先把其中一个排列替换成$1,2,3,...,n$(注意，这里是数字替换，而不是排列的变换)。其他的也做相应替换。

然后就是$f, g, h$代表

-   f\[i\]\[j\]代表数字$i - j$组成一棵树有多少种方案，其中要求$i .. j$这些数字在每个排列里面是一段。

-   g\[i\]\[j\]代表数字$i - j$是某个P节点的儿子的方案数。

-   h\[i\]\[j\]代表数字$i - j$是某个Q节点的儿子的方案数，而且已经拥有了至少两块，且$j + 1$在所有排列中和之前的块同向。

这个需要预处理一些东西方便转移，一个是$ok[i][j]$代表$i .. j$是否在所有排列中是连续的。$bar[i][j]$代表$i .. j$这个值所有在区间往左(或往右)，包括了$[j+1..bar[i][j]]$这些数字。

就可以转移了。记住$h[i][j]$转移比较特殊，可以看程序理解。

[Petrozavodsk Summer-2015. Moscow IPT Contest F.cpp]()

H. Sasha And Swag Strings
=========================

**题意:**

现在给你一个长度为$n \leq 5e5$的字符串，问把它建成后缀树后，每一条边上的字符串中，不同的字符串个数总和。

**题解:**

建立SAM，考虑所有点的出边。

一个很有趣的性质，如果我们把出边只有1的点缩掉，那么我们的出边上是个压缩的字符串，而这些字符串就包含了所有后缀树上边的字符串。而每个串出现的次数就是SAM从根到这个点的方案数。

那么现在考虑怎么算这个串里面有多少个本质不同的子串。

考虑没有缩点之前的情况。建立新图，这个图中的点还是SAM上的点，而边只有出边为1的点连出去的边。可以证明新图是个树。

考虑对于一棵树的根$r$，所有树中的点到$r$的路径形成的字符串成后缀关系(SAM中到一个点的字符串必然成后缀关系)。这个启发我们找到那个最长的串，求出这个最长的串每个后缀对应的不同子串个数，那么就能算出来每个点到根这个字符串包含多少本质不同的子串了。

最后复杂度为$n * sigma$

[Petrozavodsk Summer-2015. Moscow IPT Contest H.cpp]()
