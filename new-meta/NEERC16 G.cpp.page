``` {.cpp}
#include<bits/stdc++.h>
using namespace std;
#define sz(x) ((int)x.size())
#define pb push_back
const int N(111111);
int drw[N][2], c[N][2], cnt[N], wn[N][2];
vector<int> prv[N], nxt[N];
int main() {
    int n, m;
    scanf("%d%d", &n, &m);
    for(int i(1); i <= n; i++) {
        for(int j(0); j < 2; j++) {
            drw[i][j] = true;
        }
    }
    for(int i(0); i < m; i++) {
        int x, y;
        scanf("%d%d", &x, &y);
        prv[y].pb(x);
        nxt[x].pb(y);
    }
    vector<pair<int, int> > q;
    for(int i(1); i <= n; i++) {
        if(nxt[i].empty()) {
            q.pb({i, 0});
            q.pb({i, 1});
            drw[i][0] = drw[i][1] = false;
        }
        cnt[i] = 0;
    }
    for(int i(0); i < sz(q); i++) {
        int v(q[i].first), d(q[i].second);
        for(int y : prv[v]) {
            if(d == 0) {
                if(drw[y][1]) {
                    q.pb({y, 1});
                    drw[y][1] = false;
                }
            }else {
                cnt[y] ++;
                if(cnt[y] == sz(nxt[y])) {
                    q.pb({y, 0});
                    drw[y][0] = false;
                }
            }
        }
    }
    q.clear();
    for(int i(1); i <= n; i++) {
        wn[i][0] = true;
        wn[i][1] = false;
        c[i][0] = c[i][1] = 0;
        for(int y : nxt[i]) {
            if(!drw[y][0])
                c[i][1]++;
            if(!drw[y][1])
                c[i][0]++;
        }
        if(nxt[i].empty()) {
            q.pb({i, 0});
            wn[i][0] = false;
            q.pb({i, 1});
        }
    }
    for(int i(0); i < sz(q); i++) {
        int v(q[i].first), d(q[i].second);
        //printf("%d %d %d\n", v, d, wn[v][d]);
        for(int y : prv[v]) {
            if(drw[y][d ^ 1])
                continue;
            if(wn[v][d]) {
                c[y][d ^ 1]--;
                if(c[y][d ^ 1] == 0) {
                    wn[y][d ^ 1] = false;
                    q.pb({y, d ^ 1});
                }
            }else {
                if(wn[y][d ^ 1] == false) {
                    wn[y][d ^ 1] = true;
                    q.pb({y, d ^ 1});
                }
            }
        }
    }
    for(int d(0); d < 2; d++) {
        for(int i(1); i <= n; i++) {
            putchar(drw[i][d] ? 'D' : wn[i][d] ? 'W' : 'L');
        }
        puts("");
    }
}
```
