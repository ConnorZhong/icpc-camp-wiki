如果我们有这么个方程, $a_0=1$, $a_i=\sum_{j=1}^{i}x_ja_{i-j}$,
其中$x_k$是已知的. 那么怎么求$a_n$呢? 答案是分治fft. 每次先算左边,
再算贡献(fft), 最后算右边即可. 算贡献的时候是这么个东西:
假设左边是$a_{le},\ldots,a_{mid}$,
我们要把这个序列和$x$卷积以计算这个序列对$a_{mid+1},\ldots,a_{ri}$的贡献.
所以我们只需要$x_1,\ldots,x_{ri-le}$.
如此说来就是两个长度分别为$l_1=mid-le+1$和$l_2=ri-le+1$的序列做fft,
需要$l_1+l_2-1$这么长的fft.
但是实际上我们只需要做长度为$l_2$的fft就足够了.
这是因为当答案为一个$k$次多项式,
但是我们用$r(r\le k)$次单位根给他做插值的时候,
由于$r$次单位根满足他们的$r$次方都是$1$,
且多项式应保持在所有$r$次单位根处的值不变,
所以得到的$r-1$次多项式与本应得到的$k$次多项式相比,
$k$次多项式中$x^j$的系数会加到$x^{j\text{ mod }r}$的系数中去.
回到我们的问题, 我们取$mid$为$le$和$ri$的中点, 且用长度为$l_2$的fft,
那么左边的元素对超出右边界元素的贡献就会被加到左边一半去(可以验证一下),
但我们只要右边一半, 所以这不影响答案.
于是所需的fft长度就降低到原来的$\frac{2}{3}$. [code](51nod16 F)
