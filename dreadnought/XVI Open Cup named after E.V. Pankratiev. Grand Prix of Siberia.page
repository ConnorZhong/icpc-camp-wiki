XVI Open Cup named after E.V. Pankratiev. Grand Prix of Siberia

A. Passage \[Bacon\]
====================

题解：考虑一组解，一定是A先把一个独立集运过去，然后A运最后一个点，然后B再运一个点，最后B再运一个独立集。

故枚举删掉两个点，剩下的判断二分图即可。

B. Files List \[Bacon\]
=======================

题解：暴力。

C. Graph Optimization \[Bacon\]
===============================

题解：对于第一类限制肯定为直接连边，然后判断第二类显示是否都成立。直接开bitset会爆内存，故分成10块处理即可。

D. Housing Payments \[Bacon\]
=============================

题解：平方DP是显然的，然后发现因为数据范围限制，对于某一天如果超过50天都都不交一定不如当天交优，故转移只需枚举之后的50个即可。

E. Arithmetic Expressions \[Bacon\]
===================================

题解：简单DP不表。

F. Satellite \[TBA\]
====================

题解：

G. Voting \[Lolicon\]
=====================

题解：树dp。每个内点再单独dp算一下转移。

H. Novice Urbanist \[Lolicon\]
==============================

题解：暴力水题不表。

I. Rangefinder \[Bacon\] \[Lolicon\]
=====================================

题解：将每段连续的段看成一个节点，直接用splay维护连续性，细节有些复杂。

稍微思考一下还是可以控制代码复杂度。有这么几个Point： 1.
墙可以看做相同位置上的portal，这样就只有portal了。 2.
离线离散化，方便locate，这样每个询问都是直接询问前缀和。 3.
维护正反两个方向的sequence，这样就不需要reverse标记了。

J. Hive \[Rowdark\]
===================

题解：水题，注意到方向向量可以分解即可。

K. Side Effects \[Lolicon\]
===========================

题解：每个点只会被标记一次。水题不表。

L. Cypher \[Lolicon\]
=====================

题解：DP。思路比较奇怪。首先程序不明所以，转化为ax+b的形式，列出等式$$ax+b-y-km=0\\x=\frac{km+y-b}{a}$$

加上限制$$0\leq x<m$$发现在$$b\geq m$$的时候不好处理，考虑到程序b最多为$2^{14}$，对于m小于等于5位时直接暴力。对于较大的m，对k的限制就比较明确，用数位dp算出模a不同的m的个数及和。模a相同的m对应同一组可能的k，因此可以对m和k分别求和计算。
