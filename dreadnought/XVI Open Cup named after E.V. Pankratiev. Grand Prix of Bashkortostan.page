XVI Open Cup named after E.V. Pankratiev. Grand Prix of Bashkortostan

A. Abstract Picture \[Bacon\]
=============================

题解：
每次找到没有冲突的一行，然后把它都标成问号。因为范围不太小，需要用队列扩展，维护一下每行每列的信息。

B. Battle Mage \[Bacon\]
========================

题解： 直接修改圆并的算法，求重心即可。

C. Constant Ratio \[Rowdark\]
=============================

题解：枚举。

D. dir -C \[Rowdark\]
=====================

题解：枚举+ST求维护区间最大值。

E. Extreme Permutations \[Rowdark\]
===================================

题解：DP，观察到$k+1,\dots,2k+1$两两不相邻，且这$k+1$个数确定后方案可以很快算出方案数，故对这$k+1$个数状压dp即可。

F. Find the Length \[Rowdark\]
==============================

题解：分治+floyd。

G. Game “Minesweeper” \[Lolicon\]
=================================

题解：真.扫雷。基本思路是每次找一个一定不是雷的点下去。搜索尽可能地使用推理，只有当无法直接推理的时候再枚举。虽然写了三百多行但跑得飞快。

H. Hierarchy \[Bacon\]
======================

题解： STL的基本使用。

I. Interactive Casino \[Lolicon\]
=================================

题解：交互。维护目前有哪些值是可能的。如果必胜就all-in，否则就只投1元。

J. Judgement \[Lolicon\]
========================

题解：背包。观察到当第一个系统权值固定时，只有第二个系统的最小值和最大值是有意义的。

K. Krotek \[Rowdark\]
=====================

题解：极角排序+生成树。首先，建边可以排极角序之后用set维护线段关系得到；其次，对于最小的生成树，如果有边相交，可以发现总有些奇怪的改进方案（这里的改进可能会十分复杂）可以使得答案变小，故最小生成树的边一定两两不相交。

L. Liesbeth and the String \[Lolicon\]
======================================

题解：分析一下过程，发现偶数就除2，奇数就除二下取整再乘3加2，直接算即可。

M. Matrix, The \[Bacon\]
========================

题解：
先处理出dp\[i\]\[s\]表示前i行确定的情况下，每列的状态为s($3^n$个状态)合法的方案数，处理的时候逐格转移。

再对于每个询问，一行一行的recover求出k值，每行暴力按字典序枚举$2^n$个方案即可。
