2015 Multi-University Training Contest 10

[A. CRB and Apple](http://acm.hdu.edu.cn/showproblem.php?pid=5406) \[Bacon\]
============================================================================

题解：对原序列直接二分求LIS，二分数组里被踢掉的数字扔到下个二分数组里去。

复杂度$O(n \log n)$，可以扩展为求k个不相交的子序列。

[B. CRB and Candies](http://acm.hdu.edu.cn/showproblem.php?pid=5407) \[Bacon\]
==============================================================================

题解：$ans=\frac{lcm(1,2,\dots,n+1)}{n+1}$。

[C. CRB and Farm](http://acm.hdu.edu.cn/showproblem.php?pid=5408) \[Lolicon\]
=============================================================================

题解：解法很多。都是旋转卡壳。对于外层的每个点可以旋出其下一个可取的最远点。然后就变成了最小环覆盖经典问题。

[D. CRB and Graph](http://acm.hdu.edu.cn/showproblem.php?pid=5409) \[Bacon\]
============================================================================

题解：从n号点开始做tarjan求割边，对于一条割边，答案一定为下面部分的编号最大点k和k+1。

求编号最大点只需在tarjan中加一句话即可。

[E. CRB and His Birthday](http://acm.hdu.edu.cn/showproblem.php?pid=5410) \[Rowdark\]
=====================================================================================

题解：水DP。

[F. CRB and Puzzle](http://acm.hdu.edu.cn/showproblem.php?pid=5411) \[Lolicon\]
===============================================================================

题解：裸矩阵乘法不表。

[G. CRB and Queries](http://acm.hdu.edu.cn/showproblem.php?pid=5412) \[Bacon\]
==============================================================================

题解：老题，目前已知的做法有很多。

-   3个log时间1个log空间的二分+树套树
-   2个log时间+2个log空间的bit套可持久化线段树
-   2个log时间+1个log空间的权值树套树
-   2个log时间+线性空间的分治+bit（最快解）

[H. CRB and Roads](http://acm.hdu.edu.cn/showproblem.php?pid=5413) \[Lolicon\]
==============================================================================

题解：老题。直接逆拓扑序暴力bitset即可。

[I. CRB and String](http://acm.hdu.edu.cn/showproblem.php?pid=5414) \[Lolicon\]
===============================================================================

题解：贪心。显然字母a可以匹配除了aa开头的其他任何串。要求s为t的字串且s的第一块字母与t的第一块字母种类相同，个数大于等于。

[J. CRB and Substrings](http://acm.hdu.edu.cn/showproblem.php?pid=5415) \[Lolicon\]
===================================================================================

题解：用后缀树实现在头上删除字符在尾上添加字符。插入只需按照正常的后缀树构造算法即可。删除则需要删除从目前的那个叶子向上直到一个分叉点或者当前活跃点的一条路径。

[K. CRB and Tree](http://acm.hdu.edu.cn/showproblem.php?pid=5416) \[Lolicon\]
=============================================================================

题解：dfs水题不表。
