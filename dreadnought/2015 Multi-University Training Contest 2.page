2015 Multi-University Training Contest 2

[A. Angry Trees](http://acm.hdu.edu.cn/showproblem.php?pid=5300) \[Bacon\] \[TBA\]
==================================================================================

题解：[虚树相关的题目](http://hzwer.com/category/algorithm/graph-theory/tree/virtual-tree)

总的来说是就是各种乱搞，目前正在思考好写的做法。

[B. Buildings](http://acm.hdu.edu.cn/showproblem.php?pid=5301) \[Bacon\]
========================================================================

题解：讲坏点和中心点周围9联通的格子都拿出来，计算到边界的最短距离，取max的距离即为答案。

[C. Connect the Graph](http://acm.hdu.edu.cn/showproblem.php?pid=5302) \[Lolicon\]
==================================================================================

题解：构造。关键条件是每种点数量大于等于1。这样一定可以用若干条链满足条件。利用空点黑白分开即可。

[D. Delicious Apples](http://acm.hdu.edu.cn/showproblem.php?pid=5303) \[Rowdark\]
=================================================================================

题解：贪心，容易发现一定是一些从顺时针方向收集，一些从逆时针方向，外加至多一次遍历整段，于是处理前后前缀和取min即可。

[E. Eastest Magical Day Seep Group's Summer](http://acm.hdu.edu.cn/showproblem.php?pid=5304) \[Bacon\]
======================================================================================================

题解：DP枚举每个可行的环的点集及方案数，然后把环缩成一个点，用matrix-tree定理求生成树个数。

[F. Friends](http://acm.hdu.edu.cn/showproblem.php?pid=5305) \[Lolicon\]
========================================================================

题解：sb搜索不表

[G. Gorgeous Sequence](http://acm.hdu.edu.cn/showproblem.php?pid=5306) \[Bacon\]
================================================================================

题解：线段树，维护最大值，最大值的个数，次大值。对于取min操作，如果在最大值与次大值之间则直接计算结果，如果小于等于次大值则递归下去。

复杂度待详细证明。[代码](http://acm.hust.edu.cn/vjudge/contest/viewSource.action?id=4613555)

[H. He is Flying](http://acm.hdu.edu.cn/showproblem.php?pid=5307) \[Rowdark\]
=============================================================================

题解：记 f\[i..j\] 表示 x^a\[i\]^ + ... +x^a\[j\]^ , g\[i..j\] 表示
x^-a\[i\]^ + ... + x^-a\[j\]^ ，则本题要求的结果为:

∑(f\[i..n\] \* g\[0..(i - 1)\])

= ∑({f\[0..n\] - f\[0..(i - 1)\]} \* {g\[0..n\] - g\[i..n\]})

= nf\[0..n\] \* g\[0..n\] - f\[0..n\] \* ∑g\[i..n\] - g\[0..n\] \*
∑f\[0..(i - 1)\] + ∑(f\[0..(i - 1)\] \* g\[i..n\])

注意到∑(f\[i..n\] \* g\[0..(i - 1)\])的指数恒非负，∑(f\[0..(i - 1)\] \*
g\[i..n\])的指数恒非正，于是只要计算出

nf\[0..n\] \* g\[0..n\] - f\[0..n\] \* ∑g\[i..n\] - g\[0..n\] \*
∑f\[0..(i - 1)\]

并重新计算零次项的系数即可，故可以使用三遍FFT得到答案。

[I. I Wanna Become A 24-Point Master](http://acm.hdu.edu.cn/showproblem.php?pid=5308) \[Lolicon\]
=================================================================================================

题解：用n个n算24点。n&lt;=10\^5。除123外均有解。我是这么做的：4、5、6、7、8、9特判&gt;10用8\*3&gt;1000分奇偶用很多个1搞。

[J. JRY is Fighting](http://acm.hdu.edu.cn/showproblem.php?pid=5309) \[Lolicon\]
================================================================================

题解：DP。题意复杂不表。一开始以为可以贪心，然而我太naive了。首先能喝就喝的贪心可以求出最少喝的次数，判掉特殊的情况。然后二分答案check。live\[i\]表示在i时刻之前喝一口能不能满足gap。试图转移到下一个能活且距离大于gap的时刻。用单调队列维护中间收到的最大伤害。

反思
====

Lolicon:
我认为这场反映出了我对于自己的错误处理上面还存在着一些问题。I题n特别大的case没有把通项写好，在机器上调试了一会儿。C题由于提交之前没有看一遍把||打成了&&。而J题的问题比较严重一些。我首先认为是贪心，但我对于单调队列的边界没有提前想清楚，造成了机时的浪费。之后开始debug，15min才查出了一处逻辑错误，然而由于算法本身是错的，还是WA。之后反复校对程序和题面，终于开始怀疑算法有问题，改写了个dp，但单调队列转移的部分也没有想太清楚，造成了机时的浪费以及后面出现的脑残逻辑错误。我认为确实有必要反思自己一个题错了究竟应该采取何种行动来更有效率地发现和修正错误。
