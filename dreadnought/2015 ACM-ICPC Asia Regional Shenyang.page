2015 ACM-ICPC Asia Regional Shenyang

[A. Pattern String](http://acm.hdu.edu.cn/showproblem.php?pid=5509) \[TBA\]
===========================================================================

题解：

[B. Bazinga](http://acm.hdu.edu.cn/showproblem.php?pid=5510) \[Bacon\]
======================================================================

题解：从前向后确定每个答案i，对于之前的一个活着的串j，如果如果它为i的子串，则将j杀掉，以后不考虑。这样做的复杂度为$O(n*2000)$。

[C. Minimum Cut-Cut](http://acm.hdu.edu.cn/showproblem.php?pid=5511) \[Bacon\]
==============================================================================

题解：
**注意**割的[定义](https://www.wikiwand.com/en/Cut_(graph_theory)#/Definition)。

割的另一个类似的定义：一个边的子集，删掉之后使得图不联通。

这两个定义在这道题里是有区别的！出题人定义的是前者（组合上一般的定义也是前者），我一开始理解为后者而挂到死。

我们称以根的直系儿子为根的子树为“大子树”，分情况讨论两条边的位置关系：

1.在同一棵大子树里，不成祖先后继关系：则此时一定为割出两个叶子，随便算算。

2.在同一棵大子树里，成祖先后继关系：则此时两条边一定相邻，随便算算。

3.不再同一棵大子树里：枚举一棵子树，快速找另一棵子树的最优值。

暴力用启发式+轻重链剖分+线段树做是$O(m \log m \log^2 n )$的。、

当然轻重链剖分+线段树可以用一些其他的数据结构做到一个log。稍微好一点的方法是，考虑当枚举一棵子树u时，用一棵大线段树（剖分序）维护全局的每个点的代价，称其为seg(u)。

则seg(u)可以由儿子v的seg(v)合并上来，时间复杂度为$O(m \log^2 n)$。但这个做法空间也是$O(m \log^2 n)$的，不好承受。

简单的技巧，求seg(u)的时候，seg(u)先由它的重儿子继承过来，则同时存在的线段树至多为$O(\log n)$个，空间复杂度为$O(n \log n)$，需要写个垃圾回收即可。

[D. Pagodas](http://acm.hdu.edu.cn/showproblem.php?pid=5512) \[Rowdark\]
========================================================================

题解：水题，GCD即可。

[E. Efficient Tree](http://acm.hdu.edu.cn/showproblem.php?pid=5513) \[Lolicon\]
===============================================================================

题解：水连通性dp。

[F. Frogs](http://acm.hdu.edu.cn/showproblem.php?pid=5514) \[Rowdark\]
======================================================================

题解：水容斥。

[G. Game of Flying Circus](http://acm.hdu.edu.cn/showproblem.php?pid=5515) \[Lolicon\]
======================================================================================

题解：先分类讨论在第二条还是在第三条边上，然后再二分求解。

[H. Chessboard](http://acm.hdu.edu.cn/showproblem.php?pid=5516) \[Bacon\]
=========================================================================

题解：模拟，考虑如果在一个没有障碍物的无限平面的话，则每次的移动只需要记一个增量即可。

把边界也视为障碍物，则障碍物只有上千个，每回合只有上千个位置的棋子会被障碍物挡住，而和其他棋子合并。

暴力把这些需要合并的抓出来即可。复杂度$O(l(n+m+o))$。

[I. Triple](http://acm.hdu.edu.cn/showproblem.php?pid=5517) \[Lolicon\]
=======================================================================

题解：注意到ci,di&lt;=1000。可以直接暴力。也可以不暴力用cdq分治。

[J. John's Fences](http://acm.hdu.edu.cn/showproblem.php?pid=5518) \[TBA\]
==========================================================================

题解：

[K. Kykneion asma](http://acm.hdu.edu.cn/showproblem.php?pid=5519) \[Lolicon\]
==============================================================================

题解：容斥+dp。首位0直接相减。状态$f[i][st]$表示填了前i个数字，st每种数字是否使用。转移只能是从i-1那里再填一个可以使用的数字，容斥掉填了这个数字之后爆掉的情况。

[L. Number Link](http://acm.hdu.edu.cn/showproblem.php?pid=5520) \[Rowdark\]
============================================================================

题解：KM，建图参照路径覆盖。

[M. Meeting](http://acm.hdu.edu.cn/showproblem.php?pid=5521) \[Lolicon\]
========================================================================

题解：两边Dijkstra。
