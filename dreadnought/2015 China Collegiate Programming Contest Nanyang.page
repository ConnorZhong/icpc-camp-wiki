2015 China Collegiate Programming Contest Nanyang

A. Secrete Master Plan \[Bacon\]
================================

题解：暴力转。

B. Build Towers \[Rowdark\]
===========================

题解：搜索。调整搜索顺序，hash剪枝以及迭代加深即可。

C. The Battle of Chibi \[Lolicon\]
==================================

题解：求长度为m的最长上升子序列的个数。暴力树状数组dp。N^2^做法还没想清楚。

D. Pick The Sticks \[Bacon\]
============================

题解：直接背包。

E. Ba Gua Zhen \[Bacon\]
========================

题解：老题，所有环抓出来直接消基。

F. The Battle of Guandu \[Rowdark\]
===================================

题解：将题目条件对偶之后，容易发现该模型就是个差分约束系统，且直接做最短路即可。

G. Ancient Go \[Lolicon\]
=========================

题解：围棋。枚举。

H. Sudoku \[Lolicon\]
=====================

题解：4\*4数独。暴力。

I. Mahjong \[Lolicon\]
======================

题解：dp套dp。f\[i\]\[j\]\[st\]表示用了前i种牌，一共取了j块，现在可能到达的dp状态是st。st中有是否取了对子和前两种分别还剩多少个。实际的st非常稀疏。预处理转移可以直接AC。也可以暴力打表。

J. Walk Around The Campsite \[Bacon\]
=====================================

题解：枚举一个点，其他的点以这个点极角排序。

则可以分成，1.插入一条线段，2.删除一条线段，3.查询一个点 三个操作。

用set维护这些线段，key值为当前极角下线段到枚举点的距离。

查询的时候直接看是不是被set的第一个元素挡住了即可。

一些case要注意，比如三点共线啥的，数据好像不卡精度。

K. Game Rooms \[Lolicon\]
=========================

题解：dp。dp\[i\]\[j\]\[st\]表示现在到第i层，上一次出现st是在第j-1层(j&lt;i)的最小代价。每次要么放st，需要计算一次代价。要么和上一层一样。注意下开始的一段和结束的一段计算代价略有不同。预处理sum{a\[i\]}和sum{i\*a\[i\]}就可以O(1)计算代价。

L. Huatou's Medicine \[Lolicon\]
================================

题解：2n-1。
