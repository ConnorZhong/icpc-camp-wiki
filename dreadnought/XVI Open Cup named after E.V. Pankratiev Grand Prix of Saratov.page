XVI Open Cup named after E.V. Pankratiev Grand Prix of Saratov

A. Three Servers \[Bacon\]
==========================

题解： 暴力bitset压位dp，复杂度$O(n*4000*4000/32)$。

B. Game on Bipartite Graph \[Lolicon\]
======================================

题解：博弈。结论是能够取出对面的一个集合使得其在这边的邻集的度数除了所在的点是奇数以外都是偶数。高斯消元。

C. Black and White Board \[TBA\]
================================

题解：

D. Catenary \[TBA\]
===================

题解：

E. Evacuation Plan \[Bacon\]
============================

题解：首先分治是要的，问题在于分治之后怎么球最后一个到达的时间。

第一个方法是直接维护分段函数，用启发式合并。复杂度$O(n\log^3 n)$。

第二个方法是比较精妙。首先任意两波人如果在某条边堵住了，以后一直会连在一起。那么可以看作除了连接根的最后一条边以外容量限制都为无穷，所以直接枚举最后一段是由哪个点最先堵住的，被他堵住的一定是一个距离根的最远的几个点，这样可以统计一个下届。
而答案的最后一段也一定会被枚举到，所以答案是正确的。

F. Empty Vessels \[Lolicon\]
============================

题解：BFS。在模最大的容器的size的剩余系中考虑。

G. Maximum Product \[Rowdark\]
==============================

题解：枚举。观察到一定是$b$的某个前缀减$1$后取到最大值，注意初值。

H. Biathlon 2.0 \[Lolicon\]
===========================

题解：凸包。求个凸壳，排序扫一遍即可。

I. Archaeological Research \[Lolicon\]
======================================

题解：贪心。转化模型后发现是求mex，按照数值建线段树维护。

J. Sockets \[Lolicon\]
======================

题解：二分+贪心。易知度越大的内点和深度越深的叶子越好，二分答案贪心check。

K. Toll Roads \[Bacon\]
=======================

题解： 直接$O(n^2)$枚举置为0的一段，只要做到快速计算就好了。

确定一个端点为根，然后先dfs一遍搞出来每个点向下的最长路及子树内的直径，然后再dfs一遍维护置为0的直径。

取最大的三个即可，不用非要搞个前缀后缀。
