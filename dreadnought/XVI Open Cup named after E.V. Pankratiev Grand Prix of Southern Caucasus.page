XVI Open Cup named after E.V. Pankratiev Grand Prix of Southern Caucasus

A. Business \[Bacon\]
=====================

题解： DP, f\[i\]表示生产力为i，剩余钱为0，到达目标的最短时间。

B. Edit \[TBA\]
===============

题解：

C. Cellular Explosion \[Lolicon\]
=================================

题解：DP。考虑答案可能会出现在什么位置。由于串的长度指数增长。要么是从某个单个字母开始走不超过10步，要么是从某个相邻的字母对开始走不超过10步。先BFS出对于每种字母和每种pair最早走几步出现。对于每个字母在其扩展一步之后的串上dp。对于每个pair则一定是左边字母的后缀匹配一段前缀右边字母的前缀匹配一段后缀。这两种情况都只需要我们求出dp\[i\]\[j\]\[k\]表示第i种字母走j步是否能匹配k前缀/后缀，且有j小于等于10。

D. Pocket Money \[Rowdark\]
===========================

题解：水题不表。

E. Lighting \[Rowdark\]\[TBR\]
==============================

题解：暴力。对于某个位置i第j天完成之的分布是二项分布，从峰值向两边指数下降。于是可以直接求出峰值向两边暴力若干步计算答案的近似解。

F. Toll Roads \[Lolicon\]
=========================

题解：DFS序前缀和。

G. Boxes \[Rowdark\]
====================

题解：dp + 容斥。注意发现一般的 dp 可以维护前缀信息优化，于是在 dp
的同时容斥即可。

H. Track Gauge \[Lolicon\]
==========================

题解：贪心。首先观察，对于任意最优解，每个内点必然是它所有邻居的中位数，并且也一定是其所有子树的中位数。任选一个内点作为根，从叶子向上贪心，每次取其所有子树的中位数（可能是一个区间）这直接用nth
element可以做到线性。

I. States \[Bacon\]
===================

题解：对每个集合用treap直接存，split是简单的。对于merge操作，merge u v
两颗子树时，设min(u) &lt;
min(v)，则将u用min(v)split成两颗树，后面的树继续递归和v合并。

可以证明这样的复杂度是$O(n\log^2n)$。

J. Dancing Course \[Rowdark\]
=============================

题解：费用流优化。按照题意构建费用流模型，容易发现由于中间$10$个点的存在，使得费用流增广路不会太长，于是只要想办法维护这$10$个点两两之间到达的最小费用即可，这只要维护每类
party 中当前有哪些人即可做到。
