**[async题解](https://async.icpc-camp.org/d/587-pku-campus-selection)**

A. Escape\[hx\]
===============

螺旋形的运动轨迹，枚举下最后以哪种方向到达以及转的圈数，就能用组合数算出答案。

B. Synchronous Design
=====================

C. Shadow Area
==============

D. Blocks\[hx\]
===============

推公式 $$
\sum_{k=0}^{\lfloor \frac{n}{2}\rfloor}\binom{n}{2k}\sum_{p=0}^{k}\binom{2k}{2p}2^{n-2k}=2^n+\sum_{k=1}^{\lfloor \frac{n}{2}\rfloor}\binom{n}{2k}2^{2k-1}\times 2^{n-2k}=2^n+2^{n-1}\times(2^{n-1}-1)=2^{n-1}+2^{2(n-1)}
$$

E. Training little cats\[hx\]
=============================

先处理好矩阵，然后矩阵乘法，由于矩阵每行最多两个非零元素，每次乘法可以做到$O(n^2)$

F. Snipe the Sniper\[lyj\]
==========================

每次选最早能打这个人的怪物去干这个人,复杂度O(n\^2)

G. UmBasketella\[lyj\]
======================

推公式,输出用%.2f

H. Card Game(补)
================

比赛的时候看都没看这道题<br> 只需要状压dp就行了<br>
记录一下每一列最外面的是第几张牌,总共有6!种状态<br>
f\[i\]\[j\]\[k\]表示还能取i次,base card是j,状态是k的最大期望<br>
然后转移就行了<br>

I. Special Squares(补)
======================

首先对输入点求一遍二维前缀和，这样就能$O(1)$判断一个矩形内是否含有点了。<br \>
将所有交点求出来，一个正方形的左下和右上两个点必定在同一主对角线上，对每个主对角线，从左下点开始枚举，然后找到最靠近它的可行的右上端点，用双指针即可。

J. Full Steiner Topologies(补)
==============================

令$a(n)=(2n-1)!!$，答案即$a(n-2)$，将所有询问排序后，扫一遍。<br \>
至于为什么，考虑从n推到n+1，可以从2n-3条边里选一条断开，插入一个非叶子点，然后把n+1号点连在它上面。

K. Polygon Division(补)
=======================

设$f(n)$为n个点的答案，枚举1-n这条边在哪个三角形or四边形里面，具体见题解。

L. Pumping Lemma(补)
====================

实际上就是找一条s到t的经过环的路径，先DFS出所有能到达t的点，然后从s出发DFS只走能到达t的点，看能不能走出环，找到环后，再从环上一个点DFS到t。

M. Subimage Recognition\[lyj\]
==============================

枚举选了哪些行,贪心地扫每一列
