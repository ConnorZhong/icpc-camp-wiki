A Altitude\[hx\]
================

把数组扩展成三倍，然后分别找出每个数左右比他小的最近的数的位置即可。

B Blocking Buffer\[lyj\]
========================

看gcd(r,w)的倍数是否在\[l-w+1,r-1\]中出现即可

C Catch Me If You Can
=====================

D Demolition Time
=================

E Economy Printing\[hx\]
========================

将所有页数排序，然后设 $f[i][j]$ 表示打完前 $i$ 页，当前状态为 $j$
所需最少的字符数，j可以为：

-   $j=0$，无任何状态
-   $j=1$，当前处于打印连续偶数页的状态
-   $j=2$，当前处于打印连续奇数页的状态
-   $j=3$，当前既处于打印连续偶数页也处于打印连续奇数页的状态
-   $j=4$，当前处于打印连续页的状态

然后记录一下转移，最后统计答案。

F Format\[lyj\]
===============

字符串处理,分情况讨论,有个trick就是一个字符串包含字符集中所有字符时要输出\^!

G Great Guest Gathering\[hx\]
=============================

答案肯定是 $n(n-1)+1$ 次，然后随便构造就行了。

H Hockey Cup(补)
================

分情况讨论,暴力枚举比赛的情况

I Interesting Interactive Idea
==============================

J Juice Degustation
===================

K Knights of the Old Republic
=============================

L Lazy Coordinator\[hx\]
========================

倒着枚举，记res为枚举过的最后一个“-”到最后的答案，如果当前为"+"，答案即为res+这个“+”到最后那个“-”的距离；如果当前为“-”，更新res
