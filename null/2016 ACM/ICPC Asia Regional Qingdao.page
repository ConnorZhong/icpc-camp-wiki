A.Relic Discovery
=================

签到

B.Pocket Cube
=============

枚举所有旋转判断

C.Pocky
=======

积分可推出若L&gt;d,答案为ln(L/d)+1

D.Lucky Coins(补)
=================

考虑到p在0.4到0.6之间，所以暴力枚举1e4轮就行了。

赛场上由于对k=1的情况理解有误，没有AC。

E.Fibonacci
===========

F.Lambda Calculus(补)
=====================

PE了半辈子后终于过了。。。

按照定义扫一遍，用一个map维护当前lambda的参数。

G.Coding Contest(补)
====================

直接跑乘法的费用流，或者取log之后跑普通费用流。

赛场上错误的输出了**不**破坏的概率，因此没有AC。

H.Pattern(补)
=============

相当于求图的对数满足每个格子在两图中度数相同。对两个图同时轮廓线DP，f\[now\]\[s1\]\[s2\]表示当前两个图插头的状态分别为s1和s2时的方案数，在转移的时候保证格子在两图中度数相同且等于输入。

I.Travel Brochure(补)
=====================

$\sum_{j=0}^{k}(a_{i_{j+1}}-a_{i_j})\frac{b_{i_j}b_{i_{j+1}}}{a_{i_j}a_{i_{j+1}}}=\sum_{j=0}^{k}(\frac{b_{i_j}}{a_{i_j}},b_{i_j})\times(\frac{b_{i_{j+1}}}{a_{i_{j+1}}},b_{i_{j+1}})$，即求这k+1个点围成的图形的面积的最大值，显然为凸包。

J.Cliques(补)
=============

要使得图由团组成，等价于对于每个三元组，它们之间的边数不等于2。先预处理出所有的这样的三元组，然后dfs，枚举是加上剩下那条边还是删去某条边，每次操作影响到的三元组为
$O(n)$ 个，搜的深度不超过10，因此复杂度为 $O(n^3+n\times 3^n)$。

K.Finding Hotels
================

L.Tower Attack(补)
==================

用ST表求两个点的LCA，然后对DFS序再用ST表求一段区间的点的直径，考虑删去两条边，将DFS序分为五个部分，然后分两种情况讨论下，就能得到答案。

其中要用到的结论为：合并两个点集，新的直径只需要考虑两个点集原来的直径上的点，共2\*2=4个点。

M.Generator and Monitor
=======================
