# 无向图，有向图判K元环

请问如何有效判断无向图／有向图是非存在K元环呢？

[Fancy wrote on 2017-08-19T12:48:22]

---

如果这能做。。。我判一下有没有 $n$ 元环就解决了汉密尔顿路问题了啊。

[ftiasch wrote on 2017-08-19T14:16:20]

---

当*K*较小的时候可以利用*参数算法(Parameterized Algorithms)*解决.
对于每条边等概率的随机指派*[0,k-1]*的颜色,问题转换为图上是否具有一条长度为*K*的闭环且恰好访问了所有颜色*1*次，这个可以很简单的使用Bfs检查即可.
在今年我校的搜索专题上，出了两个参数算法的题目，你可以尝试着AC.
https://vjudge.net/problem/UESTC-1710
https://vjudge.net/problem/UESTC-1711

[xiper wrote on 2017-08-19T14:19:28]

---

可以做到关于图的规模多项式的算法。
如果n和m分别记为图的结点数与边数，那么整个问题可以做到的时间复杂度为 O( nmk 2^k )。

记H[u][v][t]为从u出发到v结束，长度为t的简单路径全体，并维护H集合的t-system representation，记为F[u][v][t]。则F[u][v][t]是大小为C(k,t)的集合（或者简单一点的版本，F[u][v][t]是一棵高度为k-t的t叉树），里面每一个元素是一个长度为t的路径。t-system representation可以支持在一个大集合（也就是这里的H）中，寻找是否存在不包含指定元素的信息。利用F做动态规划，进而推出F[][][t+1]。

上述的做法可以直接解决长度为k的简单路径的判定问题（但不能支持记数）。对于长度为k的环其实可以做到更快，尤其在k更小的时候，以及图是稀疏图的时候。

[AHdoc wrote on 2017-12-08T09:56:50]

---

@xiper#5263 请问一下，随机次数的期望大约是什么数量级的？k^k / (k!)么？

[Skydog wrote on 2017-12-08T21:07:40]

---

@Skydog#5542 对

可以看 https://algo2017.ac.tuwien.ac.at/wp-content/uploads/Randomized60MinutesNoExer.pdf

[ftiasch wrote on 2017-12-09T04:03:54]

---

