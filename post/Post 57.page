# 2015 北京赛区网络赛 D The Celebration of Rabbits

求问如何做。

题目大意如下：

给定四个正整数$n$, $m$, $L$, $R$ ($1 \le n, m, L, R \le 1000$)。

设$a$为一个长度为$2n+1$的序列。
设$f(x)$为满足$x \le a_i \le m + x$且$a_i$的异或和为0 的序列$a$的个数。

求 $\sum^{R}_{x=L} {f(x)}  \mod 1000000007$


[dtyfc wrote on 2015-09-20T14:15:03]

---

你可以从[这里](http://apps.topcoder.com/wiki/display/tc/SRM+518) 学一下 1k 分的 Nim 的做法，这样你就学会了 $O(m \log m \log n)$ 算一个解了。

暴力一下，是不是就可以了呢？

[ftiasch wrote on 2015-09-20T14:21:25]

---

@ftiasch#438 感谢！去学习一下。

[dtyfc wrote on 2015-09-20T14:33:29]

---

比赛的时候想到了标算然而感觉会T没敢写..
果然是信仰决定一切吗..QAQ

[jiry_2 wrote on 2015-09-20T14:52:15]

---

@jiry_2#444 吉利你好！

所以标算是啥？

[ftiasch wrote on 2015-09-20T14:53:56]

---

@ftiasch#447 叉姐好www
对于每一个数组a可行的x只有恰好一个（然而考场上并没有管这个qwq）
所以就可以直接枚举x，然后问题就变成了n个属于区间[x,m+x]的数异或值为0的方案数。
然后暴力DP就是每次n^3的？然后因为转移时一样的所以倍增FWT就能每次nlog^2n？
（突然感觉好虚啊..如果口胡错了能炸楼吗..

[jiry_2 wrote on 2015-09-20T15:01:05]

---

@jiry_2#454 是我没看懂么……我感觉你的做法复杂度看上去还不如我直接用 FWT 暴力 = =

[这个做法](http://dreadnought.icpc-camp.org/2015%20ACM/ICPC%20Asia%20Regional%20Beijing%20Online#TOC) 看上去精彩一点。

[ftiasch wrote on 2015-09-20T15:04:50]

---

@ftiasch#457 QAQ怎么用FWT暴力啊..
比赛之后问了一下今天的出题人之一他和我说这个做法是标算QAQ？
一个悲伤的故事..

[jiry_2 wrote on 2015-09-20T15:12:12]

---

@jiry_2#459 sorry ... 窝又仔细阅读了你的话 = =发现你就在描述一个每次算 $f(x)$ 的算法啊。

[ftiasch wrote on 2015-09-20T15:18:12]

---

@ftiasch#460 QAQ我刚才没有看到您前面的那个回复QAQ
突然发现我后面说的是一个东西..
那个网址上的做法是什么意思啊QAQ看起来好玄幻

[jiry_2 wrote on 2015-09-20T15:21:07]

---

@jiry_2#461 窝也没能看懂，需要召唤@TankEngineer

[ftiasch wrote on 2015-09-20T15:39:04]

---

@jiry_2#454 请问倍增FWT是什么方法啊，没搜到相关的内容。FWT是快速小波变换- -？

[dtyfc wrote on 2015-09-21T02:53:52]

---

@dtyfc#474 就是我说的那个办法…

[ftiasch wrote on 2015-09-21T02:57:02]

---

@ftiasch#475 感谢！做法大致明白了，第一次知道还有这种神变换。

[dtyfc wrote on 2015-09-21T03:18:57]

---

有一种感觉比较贴近题解的dp做法：
枚举x之后，题目转化为n个数，每个数范围在[L,R]，求异或和为0的方案数,其中n为奇数
1.$L=0,R=2^x-1$,答案就是$(R+1)^{n-1}$,这是因为前n-1个数确定了，必定能确定最后一个数，使得异或为0
2.$L=0,R>L$,假设$R$的二进制表示为$R[0],R[1],R[2]...R[len]$,我们可以枚举哪一位第一次出现了某个数$x$,
$x[j]<R[j]$,由于$x[j]<R[j]$那么$x[0],x[1],x[2]...x[j-1]$可以取任何值，因此，他对答案的贡献是$2^{j*(cnt-1)}\times {（num[j-1]+1）}^{n-cnt} $,（其中$cnt$为$x[j]<R[j]$的个数，$num[j]$为$R[0],R[1],...R[j]$表示的二进制数）
这是因为有一个数能随便取，我们让他最后取必然能产生一组合法解。观察这个式子发现幂次之和总是$n-1$,因此考虑
$dp[j][0/1][0/1]$表示前i个数，是否出现过$x$,当前位产生的异或值；转移就枚举这个数是否变成$x$，因此可以在$O(logR\times n)$时间解决这个问题。
3.$R>L$,仿照之前的思路，枚举哪一位出现可以自由变动的数（自由元），这里有一个$trick$：在被枚举的位之前，每个数要么被R卡住，要么被L卡住，但是这里并不需要枚举有多少个数被R卡住，由于总个数是奇数个，对于一个数列我们只需要知道$被R卡住的数字个数的奇偶性$就能判断这个数列是否在之前的位都异或出了0,因此可以设计$dp[j][0/1][0/1][0/1]$，最后一维代表被L卡住的数个数的奇偶性，转移就枚举一下 被L/R卡住->被L/R卡住或者自由元，因此也可以在$O(logR\times n)$解决这个问题
综上所述，可以在$O(n^2\times logn)$的时间解决原问题。

[_ilovelife wrote on 2015-09-21T14:37:09]

---

@_ilovelife#516 楼上这个dp说的很对啊

[TankEngineer wrote on 2015-09-21T14:50:51]

---

@ftiasch#438 计算一个解的复杂度不是O(mlogm+mlogn)的嘛。。。

[splinter wrote on 2015-09-23T06:39:44]

---

