# Codeforces Round #429 笔记

# C. On the Bench

题意：$n$ 个球排成一行，相邻的球不能同色，问方案数。

评论：比赛的时候胡乱写了一个 $O(n^3)$ 的 dp，记一下 $O(n^2)$ 的。
大方向是容斥，就是算有 $k$ 对相邻球不合法的方案数，这个只要单独考虑某种颜色的 $x$ 个球里面有 $k$ 对不合法 (1)，之后背包就行。
sb 之处是 (1) 又写了一个 $O(n^3)$ 的 dp，实际上就是 $x! \binom{x - 1}{k} / (x - k)!$. 

# D. Destiny

题意：$n$ 个数 $a_1, a_2, \ldots, a_n$，询问区间 $[l, r]$ 出现至少 $1/k$ 的数。

评论：出过很多次的题了……才知道有这样一个方法。在 $[l, r]$ 的权值线段树上走，如果不足 $1/k$ 就 return。因为只会分裂 $k$ 次，复杂度是 $O(k \log n)$.

# E. In a Trap

（核心）题意：$n$ 个数 $a_1, a_2, \ldots, a_n$，询问 $[l, r]$ 表示 $\max_{l \leq i \leq r} a_i \oplus (i - l)$.

$n \leq 50,000$

解法：

以 $256$ 为块大小，询问 $[l, r]$ 时去问 $[l, l+256), [l+256, l+512), \ldots$ 的最值，以及暴力最后一个块。
因为问的块都是差 $256$ 的倍数，所以这个区间里面低 $8$ 位一定都是 xor 了 $0, 1, \ldots, 255$. 
这样就相当于询问一个 $????????00000000$ 异或区间里面数的最大值，这个是比较经典的 trie 树题。所以只要对于每个块把可能的 $2^8$ 种询问都预处理了就好。

预处理的时候可以用 dfs，这样复杂度就不是 $2^8 * 8$ 而是 $2^8$. 当然这个跑得不比别人的 $2^8 * 8$ 快多少。

---

代码：https://code.icpc-camp.org/ftiasch/acm-icpc/src/master/codeforces/840-codeforces-round-429

[ftiasch wrote on 2017-08-18T17:39:04]

---

