# POI X Sums

一个集合 $S$ 内有 $n$ 个正整数 $\{a_1, a_2, \ldots, a_n\}$ ，$S'$ 表示由集合 $S$ 中的数相加所得的集合，每个数都可以用无数次。

有 $q$ 次询问，询问一个 $x$ 是否在 $S'$ 内。存在输出 y 否则输出 n。

$n \leq 5000, q, a_i, \leq 50000, x \leq 10^{17}$.

输入 $n$ ，然后输入 $n$ 个数，再输入 $q$，然后 $q$ 个 $x$

## Input
```
2
4 7
3
5
11
8
```

## Output
```
n
y
y 
```


[nnOnn wrote on 2017-03-31T11:39:41]

---

最短路。$d(x)$ 表示模 $a_1 = x$ 的最小的能构造出的数是啥。

[sevenkplus wrote on 2017-03-31T22:45:00]

---

@sevenkplus#5028 太弱没看懂==。能详细的说一下吗，谢谢

[nnOnn wrote on 2017-04-01T02:41:55]

---

@sevenkplus#5028 噢，懂了，谢谢。。这个转化好奥妙，分类求出来之后的判断是暴力判断吗？如果amin比较大的话。复杂度就到2.5e9了

[nnOnn wrote on 2017-04-01T03:00:34]

---

@sevenkplus#5028 好吧。无视第二条回复。现在才是看懂了，刚刚理解错了d[(now+a[j])%a1]=min(d[now]+a[j])
a1个点然后每个点都连着n条边
最后判断x是否大于d[x%a1]。谢谢大佬。。好强的建模

[nnOnn wrote on 2017-04-01T03:24:44]

---

@nnOnn#5031 这是个古老的 POI 题来着。。。大家都做过= =

[ftiasch wrote on 2017-04-01T04:33:35]

---

可以再详细解释一下做法吗？蒟蒻太弱没听懂……

[hymscott wrote on 2017-04-03T12:03:03]

---

@hymscott#5037 

在 $S$ 中找一个数，例如 $a_1$. 一个关键性质是：如果 $x \in S'$，那么 $x + a_1 \in S'$.

那么设 $d[r]$ 表示所有模 $a_1$ 于 $r$ 的数中，最小的 $\in S'$ 的数。根据性质，$d[r], d[r] + a_1, d[r] + 2a_1, \ldots \in S'$. 同时因为 $d[r]$ 是最小的，所以同余类中 $< d[r]$ 的数都 $\notin S'$.

具体求 $d[*]$ 的过程是最短路。首先，$d[0] = 0$。其次，可以用 $d[x] + a_i$ 去更新 $d[(x + a_i)\ \mathrm{mod}\ a_1]$. 
这里如果用 Dijkstra 的话，复杂度是 $O(na_1 \log{a_1})$. 从这个角度上讲，$a_1$ 应该取 $S$ 中最小的。

---

BONUS：我们还可以注意到，$d[r]$ 总是可以写成 $x + k[r] a_1$ 的形式。

如果用 $x + a_i < a_1$，那么也就是用 $k[x]$ 去更新 $k[x + a_i]$.

不妨取 $a_1$ 是 $S$ 中最大的元素，那么当 $x + a_i \geq a_1$ 时，也就是拿 $x + k[x] a_1 + a_i = (x + a_i - a_1) + (k[x] + 1) a_1$ 去更新 $d[(x + a_i)\ \mathrm{mod}\ a_1 = x + a_i - a_1] = (x + a_i - a_1) + k[x + a_i - a_1] a_1$ 时，就等价于用 $k[x] + 1$ 去更新 $k[(x + a_i)\ \mathrm{mod}\ a_1]$.

这是一个只有 $01$ 边权的最短路，可以 BFS，复杂度是 $O(n a_1)$.

[ftiasch wrote on 2017-04-04T00:21:47]

---

@nnOnn#5027 想问一下，题目在哪里可以交

[kugwzk wrote on 2017-04-11T23:41:59]

---

@kugwzk#5051 http://main.edu.pl/en/archive/oi/10/sum

[ftiasch wrote on 2017-04-12T02:34:07]

---

@ftiasch#5052 谢谢叉姐～

[kugwzk wrote on 2017-04-12T04:33:18]

---

