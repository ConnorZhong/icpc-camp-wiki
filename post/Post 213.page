# Changchun 2015 K Maximum Spanning Forest

给一个网格图，每次给出参数$x_1,y_1,x_2,y_2,c$，在满足条件$x_1 \leq a_1,a_2 \leq x_2$，$ y_1 \leq b_1,b_2 \leq y_2$，$|a_1-a_2|+|b_1-b_2|=1$的点对$(a_1,b_1),(a_2,b_2)$中间连一条权值为$c$的边，每次操作之后输出图的最大生成森林。

$T(T \leq 500)$组数据，$n \leq 100$，坐标范围$2,000,000,000$，只有$20$组数据$n > 50$。

[KuribohG wrote on 2015-10-21T16:37:50]

---

目前我的做法是先把所有询问的坐标离散化，将整个棋盘分成$200 \times 200$个矩形，每次加边的时候矩形内部的生成森林可以直接算出来，矩形边界上的所有边重新排序跑Kruskal，复杂度应该是$O(n\^3 \log n)$（这里公式显示不出来怎么回事）。

原题时限是7s，自己写出来之后本机跑了30+s，请问算法还有什么优化的方法吗？

[KuribohG wrote on 2015-10-21T16:41:14]

---

@KuribohG#2063 这个排序如果用插入排序的话……是不是就省了 $O(\log n)$ 啊。

而且实际上只需要上次生成森林里面的边，不需要所有的边。这样是不是能够再降一点常数呢。

[ftiasch wrote on 2015-10-22T00:43:39]

---

@Varona#2069 应该省不了，每加一个矩形仍然会多出 $O(n\^2)$ 条边
只要插入的权值一直递增时间会花很长

是说要怎么拿到现场赛的测试资料?


[syoboi wrote on 2015-10-22T01:12:11]

---

@syoboi#2071 你说的这个问题不成立吧……新增加的 $O(n\^2)$ 条边权值是一样的诶。你只要 for 原来老的 MST 的边，在合适的时机 for 一下这新加的边，不就不用排序咯。

[ftiasch wrote on 2015-10-22T01:27:02]

---

@syoboi#2071 本机生成的随机数据现在就要跑30+s，没拿到现场的

[KuribohG wrote on 2015-10-22T02:21:51]

---

@Varona#2072 谢谢叉姐！

[KuribohG wrote on 2015-10-22T02:22:22]

---

@KuribohG#2074 

可以试试[这份代码](http://paste.ubuntu.com/12892303/)跑你的数据需要多长时间吗？

[sd_invol wrote on 2015-10-22T05:46:14]

---

@Sd_Invol#2080 52s左右
我自己的程序改成叉姐说的那个方法之后，又加了一个如果当前加的边每条都更小就直接输出答案不跑生成树，然后随机数据大概7s就可以出来了

[KuribohG wrote on 2015-10-22T05:54:08]

---

考虑Kruskal过程，对于每个矩形，把它里面和之前矩形交的部分缩起来，然后就知道这个矩形内的实际点数x，所以连x-1条边咯。然后做这个事情需要求矩形和矩形并的交，拿线段树优化一下，也是nnnlog...然后只要2秒？

[Nero wrote on 2015-11-05T08:33:35]

---

Kruscal的那个log怎么看都能省掉的吧……基数排序或者提前排好序维护个桶都可以吧。

[TankEngineer wrote on 2015-11-06T03:40:36]

---

