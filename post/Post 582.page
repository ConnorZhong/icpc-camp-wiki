# 2016 长春解题报告

以下题解由 @quailty 提供，其中 C 题题解由 @Miceren 提供，感谢两位同学的贡献！

---

## A. Hanzo vs. Genji

题意：三维空间中有一个圆柱体，给出质心的初速度和加速度以及圆柱体的半径和高，圆柱体的旋转轴与质心运动轨迹的切矢方向平行，现在问这个圆柱体是否会经过空间中某个点。

题解：？？？

## B. Fraction

题意：给一个连分数，输出化简后的分数$p/q$，要求$\gcd(p,q)=1$。

题解：结果在$64$位整数范围内，直接模拟即可。

## C. Rotate String

题意：给定一个字符串$s$，求有多少个字典序不大于$s$的字符串$t$，使得$t$是循环意义下的最小表示，结果对$10^9+7$取模。

题解：[by @Miceren]

其实这道题本质上就是求在rotate下同构的长度为 $n$ 的字符串中，最小表示的字典序小于给定串 $s$ 的字符串个数。

由于牵涉到了同构的思想，我们使用burnside引理来去掉这个同构的讨厌的限制来做这一道题，考虑在往左shift d后，字符串不变的那些串，有多少的最小表示小于等于 $s$。于是就变成了给定一个串，问最小表示法小于等于 $s'$ 的长度为 $n'$ 的串有多少个。为了方便，以下都用 $n, s$ 来代替 $n', s'$。

对于现在的 $s$，我们可以发现如果 $s$ 不是representative string，我们可以把它修改成最大的，不大于 $s$ 的representative string。虽然现在看起来只是一个优化，但在后面的步骤中十分重要。

为了不重不漏的计算，我们需要对每一个合法的串给定一个『标号』。因为每一个合法串不断往左shift，总有一刻会小于等于 $s$，不妨我们假设这些串就shift到*最早的*位置，在这个位置下他们的字典序小于等于原串。假如原串是
$$s_1s_2s_3s_4s_5...s_n$$

那么对于我们现在要统计的串，可能是如下两种情况之一：

case 1:
$$???s_1s_2s_3s_4\ldots s_mr???$$
这些存在的 $s$ 串中的子串就是shift后，和 $s$ 串相同的最长前缀。
对于这种情况我们需要 $r$ 小于 $s_{m+1}$，那么对于后面的 $?$，其实我们可以随便填写了。但是注意，因为我们现在是『最少的shift次数』，所以我们要保证不存在以左边 $?$ 开头的字符串的字典序要小于等于 $s$。由于 $s$ 是最小表示，这个可以等价于以左边 $?$ 开头的字符串的后缀字典序要大于 $s$。这个的方案数可以DP出来，大概想法可以参考KMP的过程。

case 2:

$$s_{w+1}s_{w+2}s_{w+3}\ldots s_{m}r???s_1s_2\ldots s_w$$

这种情况下其实还是需要我们限制 $r$ 小于对应位置 $s$ 的字符，并且不能有更加靠前的前缀大于或者等于 $s$ 串。这里还是可以考虑DP，只不过这次前几个字符已经限定了而已。

这些就是这道题目的大概思路，可以做到 $O(n^2)$，如果其中一些步骤暴力一些可能需要 $O(n^3)$，但还是可以过的。其中还是有些细节需要好好想想。

Tips：由于 $s$ 串是最小表示，所以在KMP的DP转移中，我们失配了是会按照fail指针一直跳到开头，所以就没必要真的用KMP来转移DP了，直接DP即可，这个地方大家可以独立思考。

## D. Triangle

题意：有长为$1,2,\ldots,n$的木棍各一根，现在要拿走尽可能少的木棍使得从剩下的木棍中任取三根均不能构成三角形。

题解：打表，或者观察到结果即为$n$减去不大于$n$的 Fibonacci number 的个数。

## E. The Fastest Runner Ms. Zhang

题意：给定一个$n$个点$n$条边的无向连通图，边权均为$1$，求一条经过所有点至少一次的最短路径，记长度为$t$，起点$S$和终点$T$可以任选，输出字典序最小的 $(t,S,T)$ 三元组。

题解：整个图是一个环上挂很多棵树，记环长为$c$，分两种情况讨论：

1. $S$和$T$在同一棵树上，那么$S$到$T$的简单路径是唯一的，那么每条边除了这条路径上以及环上的边恰好要走一次以外均要恰好走两次，路径长度是$2n-c-\mathrm{len}(S,T)$，只需最大化 $\mathrm{len}(S,T)$，树 dp 即可，

2. $S$ 和 $T$ 不在同一棵树上，那么$S$到$T$的简单路径必然过环，设从$S$出发沿着这条路径走到环上的第一个点是$U$，同理$T$走到$V$，那么环上$U$到$V$路径上的边都要一次，不在$U$到$V$的路径上的边有一条边可以不走，其余都要走两次，树上的边除了$S$到$U$的$T$到$V$路径上的要走一次以外均要走两次，路径长度是$2n-2-\mathrm{len}(U,V)-\mathrm{len}(S,U)-\mathrm{len}(T,V)$，只需最大化 $\mathrm{len}(U,V)-\mathrm{len}(S,U)-\mathrm{len}(T,V)$，显然$S$和$T$应该取子树中最深的，在环上取一个原点$P$，规定 $\mathrm{dis}(P,U)$ 表示从$P$逆时针走到$U$需要经过的边数，于是有 $\mathrm{dis}(U,V)=\mathrm{dis}(P,V)-\mathrm{dis}(P,U),\mathrm{len}(U,V)=\max(\mathrm{dis}(U,V),\mathrm{dis}(V,U))$，现在枚举$U$，逆时针找下一个$V$，单调队列维护 $\mathrm{dis}(P,V)-\mathrm{len}(T,V)$ 的最值即可，也可枚举环上一条边，枚举$U$到$V$的路径是否经过这条边，这样只需维护一个最值然后来回扫两次。

## F. Harmonic Value Description

题意：构造一个$1,2,\ldots,n$的排列$p_1,p_2,\ldots,p_n$使得 $\sum_{i=1}^{n-1}\gcd(p_i,p_{i+1})$的值是所有排列中的严格第$k(\leq n/2)$小。

题解：考虑将$k$和$2k$放在一起，可以构造出$2k-1,2k-2,\ldots,k+2,k+1,1,2,\ldots,k-2,k-1,k,2k,2k+1,2k+2,\ldots,n-1,n$这也表明严格第$k$小值就是 $n-2+k$。

## G. Instability

题意：一个点集被认为是 *unstable*，当且仅当存在一个大小 $\geq 3$的子集是团或独立集，现在给定一个 $n$ 个点$m$条边的无向图，求有多少个 *unstable* 的点集，结果对$10^9+7$取模。

题解：考虑反面，求出不包含任何一个团或独立集的点集个数，直接搜索即可，观察到如果点数 $\geq 6$ 那么一定包含一个大小为$3$的团或独立集，因此搜索深度不超过 $5$。

## H. Sequence I

题意：给定序列$a$、序列$b$和一个整数$p$，要求出有多少个$q$使得$b_1,b_2,\ldots,b_m$恰好是$a_q,a_{q+p},\ldots,a_{q+(m-1)p}$。

题解：将$a$按照 $\mathrm{mod}\ p$拆成若干个串，分别做一次 KMP.

## I. Sequence II

题意：给定一个序列$n$，有$m$次查询，每次查询一个区间$[l,r]$，求区间中每一种数在区间中第一次出现的位置的中位数，强制在线。

题解：每次查询二分答案$t$，求出 $[l,t]$中数的种类数，记 $\mathrm{pre}_i$ 表示 $a_i$ 上一次的出现位置，就是查区间 $[l,t]$中满足 $\mathrm{pre}_i<l$ 的$i$的个数，主席树维护即可，复杂度是 $O(n \log n+q \log ^2n)$。

如果考虑离线做法，从大到小枚举 $r$，用线段树对每个 $l$ 维护$[l,r]$中数的种类数，查询时在线段树上二分，那么支持在线只需要简单可持久化一下，复杂度是 $O((n+q) \log n)$。

## J. Ugly Problem

题意：给定一个不大于 $10^{1000}$ 的正整数$s$，构造不超过$50$个回文数，使得这些数之和恰好是$s$。

题解：每次用不超过$s$的最大回文数去减$s$，这样$s$的位数会减半，需要实现一个高精度减法。

## K. Binary Indexed Tree

题意：用树状数组维护一个序列，在给区间 $[l,r]$ 加上一个$t$的时候，要给 $[1,r]$加上 $t$，给 $[1,l-1]$ 减去 $t$，两次操作后值真正发生变化的节点个数就是这一次区间修改的代价，现在要修改每一个$[1,n]$的子区间，求总代价对 $10^9+7$取模后的结果。

题解：记$cnt_i$表示$i$的二进制表达式中$1$的个数，$lcp(i,j)$表示$i$和$j$的二进制表示的最长公共前缀（如果长度不同，右对齐之后在左边补0），那么就是求$$\sum_{r=1}^{n}\sum_{l=0}^{r-1}(cnt_l+cnt_r-2cnt_{lcp(l,r)})=\frac{1}{2}\sum_{l=0}^{n}\sum_{r=0}^{n}(cnt_l+cnt_r-2cnt_{lcp(l,r)})$$考虑逐位计算贡献，对于第$i$位，枚举两个数$l$和$r$，如果前$i$位都相同那么没有贡献，否则贡献是$l$和$r$在第$i$位的数之和，于是$dp[i][0/1][0/1][0/1]$表示已经考虑了最高$i$位，现在$l$和$r$的前缀是否相等以及各自是否等于$n$的前缀的方案数，计算贡献时要补上后缀，观察到$l$和$r$的后缀是相互独立的，只需考虑前缀是否等于$n$的前缀。


[ftiasch wrote on 2016-10-04T09:00:59]

---

给个A题的题解, 首先问题转化到平面上, 是一个做抛物线运动的长方形和给定点有没有交的问题. 我们称与抛物线始终平行的长方形的两条边为上边和下边, 其中上边始终在抛物线外. 如果点在抛物线内, 我们可以通过求点到抛物线最近距离解决此题. 同时如果点在抛物线外且距离够近, 也可判断. 出去这两种情况, 如果长方形在运动过程中和点有交, 那么必定存在某一瞬间点经过长方形的上边. 所以我们只要判断上边与点的相交情况. 给定点与上边有交时, 上边就是过给定点的"抛物线处处向外扩展r的曲线"的切线. 亦即抛物线与圆心在给定点, 半径为r的圆的公切线的平行线. 

[yuzuriha_inori wrote on 2016-10-04T16:00:22]

---

E题题解是不是有误，是最大化 len(U,V)+len(S,U)+len(T,V)吗？
还有枚举U的话如何确定最优的V这里我不是很懂。请赐教谢谢~

[Coolxxx wrote on 2016-10-05T03:05:26]

---

@Coolxxx#4524  你把这个环上的森林看作一个首尾相连的序列， 每个位的值A[i]是这个点的子树的最大深度， 那么对于环上U, V两棵子树里面的S, T的直径最大， 你考虑i和j之间的最短距离不跨环的情况， 是A[i] + i + A[j] - j, 维护A[j] - j的最大值即可， 跨环的情况是A[i] + N - i + A[j] + j, 维护A[j] + j的最大值 

[续一秒 wrote on 2016-10-05T16:04:46]

---

C题的case2要怎么做到平方？研究了很久还是只能做到三方

[litc wrote on 2017-07-07T04:05:46]

---

@litc#5150 
要注意，$s$ 已经是最小表示了。

首先你要明白第一问怎么简单的做到平方，我们用$f[i][j]$代表有多少种长度为$i$的串，已知它的前$j$位等于$s_1 .. s_j$，且它的所有后缀都严格大于串 $s$。（可以平方算出来。）

那么第一个case就很直接，枚举shift了多长和$m$的大小后，前一部分的$????$形成的串，肯定要对于每个后缀严格大于$s$（否则要么我们可以shift的更加少，要么这个$s$不是最小表示法），所以我们可以直接调用预处理出来的$f$即可算出答案。

对于第二个case，本质还是一样，唯一区别在于$s_{w+1}...s_m$这个串可能可以有某个后缀等于$s$的前缀。这个平方算一下，相当于看$s_1 ... s_m$的最大border。知道这个之后，其实也可以直接使用我们预处理的$f$数组。要注意这里的$r$有两个大小关系的情况要考虑。

总而言之，其实我们预处理出来了$f$之后，就是枚举了shift了多少和$m$的大小，算的里面都是直接使用$f$数组$O(1)$算出来的。最后复杂度自然就是$O(n^2)$。

[Miceren wrote on 2017-07-08T17:21:02]

---

@yuzuriha_inori#4521 

hi，我在填坑的时候遇到两个问题，希望方便的时候能帮忙看一下，

第一个问题是数据里存在速度向量 $V$ 和加速度向量 $G$ 共线的情况，这时圆柱体做的是竖直抛体运动，飞行过程中圆柱体的方向是否应该保持不变？

第二个问题是，[如图](https://drive.google.com/open?id=17h9NlIv4lOJXU_2DLqUMZ19HUsB2nerf)，对于圆柱体半径 $r$ 远大于圆柱体半高度 $l$ 的情况，似乎需要考虑长方形的垂直于抛物线方向的边界？

[quailty wrote on 2018-06-20T12:31:57]

---

