# 2015 合肥赛区网络赛 H The Next

就是二进制转化那个，求构造姿势

[vgiceiceice wrote on 2015-09-28T02:20:34]

---

@vgiceiceice#825 用类似树状数组lowbit的方法，每次尝试1，3，7等数值就好了，注意爆int。

[zyeric wrote on 2015-09-28T02:22:57]

---

@zyeric#827 呃，话说没看懂，我悟性太低

[vgiceiceice wrote on 2015-09-28T02:25:43]

---

@vgiceiceice#828 举个例子，比如二进制表述是1010100的数，我尝试的顺序是：1010101，1010111，1011000，1011001，1011011，1011111，1100000，1100001等等

[zyeric wrote on 2015-09-28T03:04:36]

---

@zyeric#835 你为什么选这些数，而不是按顺序选呢，我想知道选这些数的依据


[vgiceiceice wrote on 2015-09-28T03:35:01]

---

我的做法是，先判断在与d相同的二进制长度下有没有解，如果没有那么答案就是(1<<|d|) or ((1 << (s1 - 1)) - 1)。判断的方法是假设相同长度下有解，d和y分别去掉最高位，于是变成了一个更小的相同的问题。

还有一种做法是，如果最低位是1，找到最右的0变成1然后最小化这个位置右边的1的个数。否则，如果|d|<s2，答案就是d+1，如果|d|==s2，从右往左找越过至少一个1后的第一个0将其变成1并且将越过的1置0，然后还差多少个1全部放最低位。

（表示因为这题被n!次bs了...Orz）

[vainman wrote on 2015-09-28T04:51:04]

---

@vainman#848 答案就是(1<<|d|) or ((1 << (s1 - 1)) - 1)。前一种情况我理解，后一种是什么情况？可以给个例子吗

[vgiceiceice wrote on 2015-09-28T05:32:14]

---

@vgiceiceice#859 这里的or是按位与的意思

[vainman wrote on 2015-09-28T05:33:22]

---

答案最小为d+1，从d+1开始考虑。
如果当前数1出现次数超了，最多超1（因为d是合法的），所以尝试用进位消去至少1个1，不难发现就是把最低位的1推到次低位的1后面，然后再加一个最低位的1产生至少两次进位，显然得到的新数之前的所有数都不合法。
现在当前数1出现次数可能不够，从低到高找0的位置把1补进去就好了。

[skywalkert wrote on 2015-09-28T06:01:04]

---

@vainman#860 呃

[vgiceiceice wrote on 2015-09-28T12:40:01]

---

@vainman#860 懂了，谢谢

[vgiceiceice wrote on 2015-09-28T12:41:51]

---

@skywalkert#862 还是有个问题，超出之后把最低位的1推到次低位1后面再加一个1，这不是多了两个1了吗


[vgiceiceice wrote on 2015-09-28T13:01:11]

---

我的做法是这样，比如说101111
1.1的数量没有达到上限，那么我先找到一个一定比101111打的数，那很显然只要从末尾开始把第一个0变成1就好了，然后我们得到了111111，虽然他的确比101111大，但并不能保证是最小的，所以我们从原来的0后面开始 ”把1变成0“ ， 至于执行的数量就由 ”下限控制“ 。
2.1的数量达到了上限，比如101100，我们把它变成101101的话，虽然比原来的大，但是我们无法再减少任何一个1 ，来小于 上限。
所以这时候我们要修改的是 第一个后一位是1的0 ， 所以101100 ，要变成111100 。
这样我们肯定可以减少 ”修改0“ 后的1了，但是我们发现111100 还可以进一步减少，我们把 ”修改0“ 后的两个1 ，全部移到末尾110011。
最后在按照第1种情况减少1即可

[Voil wrote on 2015-09-29T01:04:04]

---

@vgiceiceice#877 例如10110000001，先推成10111000000，然后加一个lowbit（1000000），产生进位变成11000000000

[skywalkert wrote on 2015-09-29T02:59:30]

---

@skywalkert#914 懂了，懂了。多谢多谢

[vgiceiceice wrote on 2015-09-29T06:03:17]

---

