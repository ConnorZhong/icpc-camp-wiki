# Tokyo 2014 I Sweet War

题意是给n个巧克力球，每个巧克力球可以加饥饿值和美味值，两个人轮流吃。两个人各有一个初始饥饿值。每次一个人可以选择吃不吃最前面的巧克力球，不吃掉一点饥饿，吃了就拿走饥饿和美味。两个人足够聪明，求两人最终各得到多少美味值

[ZJiaQ wrote on 2015-11-07T08:17:58]

---

少条件了吧？是不是要求饥饿值不能为负？

[linyuzhou wrote on 2015-11-07T08:23:30]

---

http://chffy.github.io/2015/08/16/uvalive6840(dp)/

[ftiasch wrote on 2015-11-07T08:29:52]

---

DP\[i\]\[S\]表示 对 巧克力球剩下i~N的局面 当前玩家打算从剩下的巧克力球里获得S美味度  当前玩家至少要比对面多多少饱食度（DP\[i\]\[S\]可以为负）。
如果你选择自己吃掉，那么考虑DP\[i+1\]\[Sum\[i~N\]-S+1\]（对手要破坏你的计划至少需要多少相对饱食度），所以我们最多只能给对手DP\[i+1\]\[Sum\[i~N\]-S+1\]-1的相对饱食度，即-(DP\[i\]\[S\]+ri)<=DP\[i+1\]\[Sum\[i~N\]-S+1\]-1，整理得到DP\[i\]\[S\]>=-DP\[i+1\]\[Sum\[i~N\]-S+1\]-ri+1
如果你选择把第i粒给对手吃，那么下一个状态就是DP\[i+1\]\[S\]，由(DP\[i\]\[S\]-ri-1)>=DP\[i+1\]\[S\]得DP\[i\]\[S\]>=DP\[i+1\]\[S\]+ri+1，注意既然你是强喂给对手，那你至少要有1的相对饱食度（饱食度大于对面），所以实际上是DP\[i\]\[S\]>=max(1,DP\[i+1\]\[S\]+ri+1)
总的转移方程就是DP\[i\]\[S\]=min(-DP\[i+1\]\[Sum\[i~N\]-S+1\]-ri+1,max(1,DP\[i+1\]\[S\]+ri+1))

由于N<=150,Σsi<=150，所以记忆化搜索什么的搞一搞就可以了。
1.没写过这道题，不保证正确性，我觉得大致思路应该是没错的。
2.写到一半发现叉姐把题解丢了上来，我的心情是崩溃的。
3.回复之后又发现我的整个回复都变得奇怪了……叉姐放的题解和我写的是一样的，请大家无视我就好。<Paste>


[linyuzhou wrote on 2015-11-07T09:12:54]

---

@Varona#2471 
叉姐你好，为啥我
@linyuzhou#2472 
的回复变得很奇怪？有什么特别的发帖姿势需要注意吗？

[linyuzhou wrote on 2015-11-07T09:15:38]

---

@Varona#2471 
叉姐，这道题目里f[ i ][ j ]随着j的增大应该是不减的吧？对所有的k(k>S−j)满足−(f[ i ][ j ]+ai)<f[ i+1 ][ k ] 似乎没有必要查询每个f[ i+1 ][ k ]，只要k=S-j+1满足上式那么对所有k>S-j就都满足条件了。
这样，状态数为n乘Σbi，转移复杂度O(1)，总的复杂度就是O(n*Σbi)
PS:之前的疑问已解决，我刚才用了[ i ][ S ]。

[linyuzhou wrote on 2015-11-07T09:38:58]

---

@linyuzhou#2473 发之前敢不敢看看预览？

[sevenkplus wrote on 2015-11-08T21:16:46]

---

