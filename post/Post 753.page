# 2014 NEERC Northern Subregional Contest F Fragmentation

题意：给定一个序列a，将a分成尽量少的块（一块是连续的一段），块间重排可以使得a变成一个不减的序列。求最少分多少块,以及怎样分。
数据范围：序列长度 <= 100000, 数<=100000。

题解是俄文的，google翻译了之后感觉似乎有偏差不是很懂，然后别人的代码也比较长比较难理解。所以弱弱地来求助了。

题目链接：http://codeforces.com/gym/100531


[evilgeek wrote on 2017-10-15T07:34:22]

---

先做几个显然的变换：

1. 把相邻相同的数合并；
2. 如果 $a_i > a_{i + 1}$，那么一定要切开。

这样会得到一些（严格）单调上升的段。

接下来你这么想象，每个段 $b_1, b_2, \dots, b_m$ 相当于是一条绳子，从 $b_1$  一路挂到 $b_m$. 那么什么时候答案是会 $0$ 呢，就是当每个区间都只被一条绳子覆盖的时候（对吗？不对，考虑那种单点的绳子）。

应该就是跨过单点的一定要切掉，覆盖次数 > 1 的一定要切掉，就差不多了？可能有点小 bug。。

[ftiasch wrote on 2017-10-15T08:31:36]

---

