# Beijing 2015 Online  F Couple Trees

题目链接: [LINK] (http://hihocoder.com/contest/acmicpc2015beijingonline/problem/6)

题目大意如下:
有两棵树, 都是n个节点, 标号1的节点是根, 每次询问, A树上的x到根的路径上, 和B树上的Y到根的路径上, 第一个标号相同的点是谁?  强制在线.

[yuzhou627 wrote on 2015-09-20T14:14:55]

---

如果可以离线，很容易想到把询问按A树上所在点分类，然后对A树DFS，DFS的同时在B树上标记出所有当前A树上x点到根路径上的所有点。

对于每个询问，只需要求出y点到B的根的被标记的点的最大值即可，这个过程可以使用线段树+树链剖分维护。

强制在线的话，换用可持久化线段树来维护即可。

[sd_invol wrote on 2015-09-20T14:30:17]

---

@Sd_Invol#439 线段树维护DFS序就可以了，链剖没必要

[AngryBacon wrote on 2015-09-20T14:32:29]

---

@AngryBacon#440 说得对 = = 刚在编辑来着

[sd_invol wrote on 2015-09-20T14:35:45]

---

@AngryBacon#440 具体怎么不要链剖啊

[ftiasch wrote on 2015-09-20T14:52:59]

---

@ftiasch#446 http://dreadnought.icpc-camp.org/2015%20ACM/ICPC%20Asia%20Regional%20Beijing%20Online#f.-couple-trees-bacon

[AngryBacon wrote on 2015-09-20T14:57:23]

---

@AngryBacon#450 看来你这个链接 = = 我还是学不会啊！

[ftiasch wrote on 2015-09-20T15:00:12]

---

@ftiasch#446 大概就是添加一个点就是对B树的一个子树的权值全部max一下这个点的下标，询问是单点的。

[sd_invol wrote on 2015-09-20T15:01:20]

---

离线的想法是按照深度优先顺序遍历树 $A$，那么树 $B$ 的节点会插入、删除，每次询问是询问 $B$ 树上存在的节点的最大值。

我们站在 $B$ 的角度看待问题，对于 $B$ 的每一个节点，实际上存在的时刻是一个区间。那么我们对 $B$ 中的每个节点 $v$，维护一个持久化线段树，下标是时间（呃，就是 $A$ 遍历的顺序），那么每个节点就是父亲的线段树加上当前节点的区间。这个是 $O((n + q) \log n)$ 的。

[ftiasch wrote on 2015-09-20T15:05:52]

---

@ftiasch#458 把每个标号在两颗树的dfs序上的贡献区间弄出来（比如根节点的贡献区间是【1，n】），然后把它看成平面上的矩形。。。。询问就是询问某个点被哪个矩形包着且该矩形最小。。。。。

[zhzqkkk wrote on 2015-09-22T06:47:48]

---

@Sd_Invol#455 这样的话，对子树权值max的过程是一个主席树的区间更新，每次增加的节点是$\log{N}\log{N}$的，内存不会爆炸吗？

[dtyfc wrote on 2015-10-29T02:56:31]

---

@dtyfc#2265 算错了吧？$O(\log N)$ 的？

[ftiasch wrote on 2015-10-29T02:58:20]

---

有一个使用树剖的方法， 可以不需要主席树， F [i, j] 表示在第一颗树上面以i为top并且在第二颗树上以j为top的点，对于每一次询问暴力枚举i和j，之后二分找就可以了。

[burglar wrote on 2015-11-09T12:47:53]

---

@AngryBacon#440 
@Varona#446 
@Sd_Invol#439 
求教，请问离线不使用主席树时线段树怎样维护？
每次dfs遍历到新点时会进行一次区间覆盖，dfs回朔清除当前点影响要怎么维护呢？

[linyuzhou wrote on 2015-11-10T02:29:46]

---

@linyuzhou#2509 你一定不想用「持久化」的话，那么可以在每个节点处维护一个栈，每个元素记录它下面的点的最大值。

实际上这跟持久化是一样的吧……

[ftiasch wrote on 2015-11-10T04:43:24]

---

@Varona#2511 
谢谢。
所以这题离线和在线并没有什么差别吧？我觉得主席树的复杂度已经很优秀了。

[linyuzhou wrote on 2015-11-10T06:03:58]

---

