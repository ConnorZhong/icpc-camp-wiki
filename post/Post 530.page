# Aim Tech Round 3 题解

# Letters Cyclic Shift

找第一个非 a 的字符，和接下来第一个 a，对它们之间的字符操作。

注意 aaa...a 的特殊情况。

# Recover the String

假设有 $x$ 个 $0$, $y$ 个 $1$，根据 $\binom{x}{2} = a_{00}, \binom{y}{2} = a_{11}$ 解出 $x, y$。
注意 $\binom{x}{2} = 0$ 有两解。

之后注意到 000..0111..1 有 $xy$ 个 01，而 111..1000..0 有 $xy$ 个 10. 
那么每次找最右边的 0，将其向右移动一位，可以把一个 01 变成 10. 
所以中间状态都是可行的。

# Centroids

考虑点 $u$ 最大的子树 $v$，如果 $\mathrm{size}(v) > \frac{n}{2}$，那么就是问子树 $v$ 中是否存在 $w$，使得 $\max\{\mathrm{size}(w), \mathrm{size}(v) - \mathrm{size}(w)\}\leq \frac{n}{2}$. 
只需树形 dp，计算子树中大小 $\leq \frac{n}{2}$ 的最大子树即可。

# Incorrect Flow

首先，计算每个点的盈余「即流入减去流出」，新建一对源点和汇点，源点连向有盈余的点，亏损的店连向汇点，那么就是求新源点到汇点的最小费用最大流。
（啊，当然要从原来汇点往源点连一条容量无穷大，费用为 0 的边……

然后考虑每条边的代价，有两种情况：

1. 原来的流量不超过容量，那么花 $1$ 的代价可以让流量加一，这种机会有 $c - f$ 次。之后可以花 $2$ 的代价使得流量和容量加一。
另外，还可以花 $1$ 的代价使得流量减少 $1$. 
总的来说，就是 $u \to v$ 连 $(c - f)$ 条费用为 $1$ 的，$\infty$ 条费用为 $2$ 的。$v \to u$ 连 $f$ 条费用为 $1$ 的。

2. 原来的流量超过容量了。那么首先花 $f - c$ 的代价使得容量匹配流量。之后如果增加，有无穷次机会花 $2$ 的代价把流量容量都加一。
减少的话，有 $f - c$ 次机会，免费把流量减一（实际上就是在用刚才预先加的代价）。之后有 $c$ 次机会花 $1$ 的代价把流量减一。

# Student's Camp

先求 $p(x)$ 表示某一边被打掉 $x$ 个砖块的概率。
设第 $i$ 行左边被打掉了 $l_i$ 个，右边被打掉了 $r_i$ 个。
方案合法当且仅当 $\max\{l_i  + r_i, l_i + r_{i + 1}, r_i + l_{i + 1}\} < m$.

设 $f(i, L)$ 表示考虑了前 $i$ 行，$l_i < L$ 时合法的概率。

那么 $f(i, L + 1) = f(i, L) + p(L) \sum_{r = 0}^{m - L - 1} p(r) (f(i - 1, m) - (f(i - 1, m) - f(i - 1, M - L)) - (f(i - 1, m) - f(i - 1, m - r)))$.

稍微解释一下最右边一对括号里面三个式子，其中 $f(i - 1, m)$ 是总数，后面两项分别是不满足 $l_i + r_{i - 1}$ 和 $r_i + l_{i - 1} \geq m$ 的方案的数量。画个图就知道这两种方案是不重复的。

之后前缀和就可以了。

---

我的代码 https://git.icpc-camp.org/ftiasch/acm-icpc/tree/master/codeforces/708-aim-tech-round-3

[ftiasch wrote on 2016-08-25T17:52:25]

---

啊咧 那个D的1条件里 应该是f条v->u的边呢QAQ 想了好久看了下代码才发现是笔误了QAQ

[TaoSama wrote on 2016-08-26T06:17:34]

---

@TaoSama#4118 啊对不起，打错了！现在改对了

[ftiasch wrote on 2016-08-26T10:50:08]

---

