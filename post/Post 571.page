# Codeforces Round #372 题解

# Plus and Square Root

构造，使得以 $k(k - 1)$ 的数字到达 level $k$ ($k \geq 2$). 
不断 $+k$ 变成 $[(k + 1)k]^2$。

# Complete The Graph

想了好久。。说说我的思路吧。

首先，保证 $s$ 到 $t$ 的最短路 $\geq L$，否则无解。考虑 Dijskatra，假设当前标号 $d_u$ 最小的点是 $u$。如果它沿着一条 $0$ 边走到 $v$，那么根据 $0$ 边的取值，$d_v$ 可以以 $d_u + 1 + x$ ($x \geq 0$) 更新。

那么，如果一个点 $v$，同时被一个不确定的 $d_u + 1 + x$ 和 $d_w + \mathrm{length}(w, v)$ 更新，也就是说 $d_v$ 可以在区间 $[d_u + 1 + x, d_w + \mathrm{length}(w, v)]$ 内取值。进一步可以发现，这个上界没有意义。原因是我们已知 $d_w + \mathrm{length}(w, v) + \delta_t(v) > L$（其中 $\delta_t(v)$ 表示点 $v$ 到点 $t$ 的最短路），如果 $d_v$ 超过上界，那么不会产生 $\leq L$ 的最短路。
反过来说，如果 $d_u + 1 + x + \delta_t(v) \leq L$，总能适当选取 $x$ 来产生一条长度为 $L$ 的最短路。

剩下的问题是，为什么不会产生 $<L$ 的最短路。我们可以把 Dijskatra 已经确定标号的点，和还没确定的点分开，可以想象这行程了一个割。我们最后选取 $x$ 的那条边，构成了这个割集唯一的一条边（其他未知的边都设成 $\infty$。因为我们在做 Dijsktra，所以其他能通过这条边的点的标号一定比 $d_v$ 大，也就是说总长度 $\geq L$.

这样做复杂度是 Dijkstra 的复杂度，看上去是比题解好的。。

# Digit Tree

套路树分治/启发式合并题，跟 http://acm.hdu.edu.cn/showproblem.php?pid=4812 是一模一样的。。

# Create a Maze

不会做。。抄的一图流。。

![image https://async.icpc-camp.org/assets/images/1-DWMoRQZyFRq0UcDD.png](https://async.icpc-camp.org/assets/images/1-DWMoRQZyFRq0UcDD.png)

来源 http://codeforces.com/blog/entry/47169?#comment-315644

#  Complete The Permutations

大家应该都知道，如果两个排列都完整，那么就应该是 $p_i \to q_i$ 连边后得到一个图，如果有 $k$ 个环那么交换次数就是 $n - k$.

那么我们看一看已经有的图，肯定是若干环和若干链。环我们就不用管了，最后把答案减去那么多就行。
我们就是要数把链拼成 $k$ 个环的方案数。
注意到链应该有 $2 \times 2 = 4$ 种。之所以如此，是因为一条 $x \to y, z \to v$ 的链，如果 $y \to ???$ 和 $??? \to z$ 的边同时存在，那么这两条链不能接到一起。所以根据两端的边是否存在，我们可以得到 $4$ 种链，不妨称为 $00, 01, 10, 11$，$?1$ 和 $1?$ 不能相连。

然后考虑如果全是 $00$ 的链，我们要求的实际上是第一类斯特林数。$S(n, k) = (n - 1)S(n - 1, k)  + S(n - 1, k - 1)$. 就是要么新链自成一环，要么插入到某一条链的前面，原来有 $(n - 1)$ 条链，自然有 $(n - 1)$ 种插入方式。

插入完 $00$ 我们插 $01$，我们发现这时候还是不会有冲突。。所以还是只要 $\times (n - 1)$ 就行。
之后插 $10$ 时，我们发现唯独不能插入到 $01$ 的前面，所以这时候要 $\times (n - 1) - \mathrm{cnt}[01]$. 

最后插 $11$ 时，他的要求应该是那个空隙两端都是 $00$. 这个的数量应该就是 $\mathrm{cnt}(00)$ 减去已经插入的 $11$. 这个也很好数，每插入一条链能增加一个空隙，但是每插入一条 $01, 10$ 都会恰好占据一个空隙。而插入的 $11$ 会占两个。

最后还要注意，那些 $?? \to ??$ 的位置可以随便换，假设这样的位置有 $x$ 个，最后答案还要乘上 $x!$.

这样做的复杂度是 $O(n^2)$，看上去也是比题解好的。。

---

我的代码：https://code.icpc-camp.org/ftiasch/acm-icpc/src/master/codeforces/715-codeforces-round-372

[ftiasch wrote on 2016-09-29T16:16:08]

---

