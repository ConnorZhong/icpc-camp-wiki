# 启发式合并

似乎启发式合并能解决一些奇怪的问题。可是我对启发式合并的理解只限制在并查集的合并上。
哪位能提供一些相关资料或者题目吗？
谢谢了。

[wuyanze wrote on 2015-11-04T12:17:30]

---

题目的话
http://www.51nod.com/contest/problem.html#!problemId=1515
http://www.51nod.com/contest/problem.html#!problemId=1462
BZOJ 1483
SGU 507

[winoros wrote on 2015-11-04T13:17:11]

---

http://acm.hdu.edu.cn/showproblem.php?pid=3726

这题标准做法并不是启发式合并，不过也可以乱搞啦。
http://acm.hdu.edu.cn/showproblem.php?pid=4358

[Ruins wrote on 2015-11-05T02:57:11]

---

@winoros#2440 

@Ruins#2443 
谢谢两位。

[wuyanze wrote on 2015-11-05T02:59:11]

---

树剖！...

[Nero wrote on 2015-11-05T08:23:48]

---

@Nero#2446 
啊？

[wuyanze wrote on 2015-11-05T11:50:01]

---

@wuyanze#2450  我的意思是，树链剖分 的复杂度分析和启发式合并是一样的。

[Nero wrote on 2015-11-05T11:56:18]

---

启发式合并一般用来解决将n个单元素的集合按照一定顺序合并为一个集合（合并复杂度为O(其中一个集合大小)）以及类似的问题。
在合并过程中，每次将较小的集合合并到较大的集合上。总的复杂度就是O(nlogn)
证明
考虑对于每一个元素，它每次被并入一个新的集合，它所处集合的大小至少是原来的两倍。所以对每个元素至多进行logn次合并操作，总复杂度nlogn

启发式合并一般也就是用在树上了（吧）。不过这种每次操作规模增大一倍从而确保logn复杂度的思想不仅在启发式合并出现，在其他地方也有应用，我觉得挺有价值的。

[linyuzhou wrote on 2015-11-06T03:45:54]

---

@linyuzhou#2460 
具体的应用
比如一些路径问题，就可以自底向上拓扑，对每个点维护一个答案集合，每次合并子节点集合时使用启发式合并。
实例就像2012年福建省选的一道标解树分治的题目，也能用启发式合并来解决，代码量上会优秀一些（大概）。

[linyuzhou wrote on 2015-11-06T03:52:35]

---

