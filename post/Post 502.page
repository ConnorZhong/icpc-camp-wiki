# 2016 Multi-University Training Contest 4 H Turn Game

http://acm.hdu.edu.cn/showproblem.php?pid=5771
题解看不懂啊。

状态到底是横放的还是被覆盖的格子。 转移又是什么呢？

[tankche1 wrote on 2016-07-31T06:41:27]

---

我的做法是 dp 套 dp。让我们先来看里层的 dp。

假设棋盘已知，我们的目标是翻转最少的次数，使得全部变成 0. 
我们用 dp[row][S] 表示考虑到第 $row$ 行，S 是长度为 m 的二进制数，$S_i$ 表示第 $i$ 列上有没有 1. 注意，这里的 $1$ 一定是从在第 row 行结束的连续一段。否则，这个 1 无论后续如何操作都消不掉了。
转移的话是新加一行，我的代码 https://gist.githubusercontent.com/ftiasch/de118fbac5f86bad7d754fa1675dc4b8/raw/73a48e80cc1a25862d80fe1d3d47cb35f07c0047/H.cpp 非常野蛮。我先枚举了只用第 row + 1 行的翻转，能达到一个怎样的状态，再考虑只使用每个列的翻转，能达到一个怎样的最终状态。

以上就是里层的 dp。之后只要套路一下，用一个 f(row, dp[0..15]) 表示考虑到第 row 行，dp 值分别是这么多这么多这么多时的方案数，每次枚举一下棋盘，跑一下里层的 dp 就可以辣。最后我们要统计的就是 dp[0] <= k 的方案数。

[ftiasch wrote on 2016-07-31T08:30:27]

---

QAQ 题解写太差了吗。。

[Y_UME wrote on 2016-07-31T11:38:57]

---

