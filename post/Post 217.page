# NEERC 2015 Moscow Subregional E Entertainment

http://codeforces.com/gym/100792/problem/E

题意：有 $2\^k\ (k \leq 18)$ 个战士打淘汰赛，比赛形式是每一轮两两对局，胜者进入下一轮，直到只剩一个人为止（形状是一颗满二叉树）。每个战士有一个战斗力排名，第 $i$ 个战士排名就是 $i$，一场对局中一定是排名靠前的那个战士获胜。每个战士还有一个 amusement 程度 $a\_i$ , 每场对局的 amusement 程度是对局的两个战士 amusement 程度的乘积 $a\_i \times a\_j$。现在一开始战士的分组是完全随机的，问的是整个比赛中所有对局的 amusement 程度的和的期望。用 $P/Q$ 的形式表示。输出 $P \times Q\^{-1} \mod (10\^9+7)$。

这个该怎么捉呀。。思考了很多方向然未果QAQ

[NExPlain wrote on 2015-10-22T15:55:24]

---

大概就是考虑在某个节点的贡献。。然后就可以算了吧


[ftiasch wrote on 2015-10-22T18:34:36]

---

@Varona#2106 觉得应该算一下$i$和$j$两个人在某一层的节点相遇的方案数然后求和化简。。但没得到什么靠谱的式子。。我再推推看。。

[NExPlain wrote on 2015-10-23T03:14:46]

---

@NExPlain#2114 思路没问题啊, i, j两个是独立的, 抽出来就行

[yangyue wrote on 2015-10-23T15:06:37]

---

队友太忙,替队友回答一发,算是自问自答啦. 不能考虑单独的$a_i$的贡献,可以考虑$a_i a_j$的贡献, 推出公式来之后只需要枚举两个点在哪一层相遇然后把$i$放一坨$j$的放一坨,累加相乘即可. 最后再乘$n!$的逆元输出. 

[AuThor wrote on 2015-10-28T14:23:26]

---


一个可行的方法是。。。枚举每一场比赛 (i, j)。。。在枚举它们发生在哪一层。。
只要保证。。它们所在的子树的两支中，其他人的编号都比它们大就可以了。。。

接下来考虑优化这个方法。。。总共有 n 个人。。n = 2^k。。
当前枚举的子树的 size 为 nn，nn = 2^kk
 
。。我们设 i < j。。。那么我们尝试固定 i。。。一次性统计所有大于 i 的人和 i 比赛的收益。
设这个值为 b[i]。。那么答案就是。。。
显然是 a[i] * b[i] * \binom{??, ??}。。
然后我们注意到 b[i] 是可以递推的~。。。就解决了。。。


[xiaodao wrote on 2015-11-14T16:23:32]

---

