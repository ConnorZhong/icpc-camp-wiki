# Shanghai 2015 E Expection of String

一个只有一个乘号的长为N的乘法表达式，每次操作交换任意两个字符，总共进行K次操作。求最终表达式的值的期望。
乘号在两端则值为0。
K<N<50

[ephxyscj wrote on 2015-11-24T14:14:02]

---

我们考虑任意两个数x,y，它们最后对答案的贡献一定是x*y*C，其中C只跟最后x,y和乘号的位置有关，与x,y是什么无关，那么我们可以用dp[a]\[b][c][K]表示，两个数在a,b，乘号在c，还有K轮操作时的C的期望，然后通过一些求和优化，这个DP方程可以做到O(1)转移

[elfness wrote on 2015-11-24T14:25:44]

---

@elfness#2850 请问一下对于存在某个数在原位置上或者在另外一个数的位置上的特殊情况需要分类特判吗

[aclsh wrote on 2015-11-29T06:58:03]

---

@aclsh#2907 
不需要讨论， 我们这里关心的只是C的期望 不管x, y最后在哪里

[elfness wrote on 2015-11-29T08:32:58]

---

再更新一个另外的做法, 固定C我们去dp x × y的期望
用dp[A][ B][C][K]表示当前某三个位置i < j < k的值分别是A B C，还有K步要走时，这三个位置的 $x\times y$ 的期望，边界条件为dp[A][ B][C][0] = (B == '\*') ? A \* C : 0
于是由于A B C分别只能是0-9以及\*共11种 然后转移的时候也只与这11种的个数有关，因此可以做到O(11)的转移
最后ans = sum(dp[s[ i ]][s[j]][s[k]][K]\* C(i, j, k)) 其中C(i, j, k) = 10 ^ ((j -  i - 1) + (len - k - 1))
总复杂度O(11^4 * K + n^3) 比标程的O(n^3K )快

[elfness wrote on 2015-12-03T09:24:07]

---

