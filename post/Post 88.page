# 2015 合肥赛区网络赛 A Monitor the Alpacas

[Source](http://acm.hdu.edu.cn/showproblem.php?pid=5484)

我来发一下这道题的讨论吧，希望能得到这道题各种各样复杂度的算法。

[sd_invol wrote on 2015-09-27T15:23:03]

---

枚举$M^2$个点对$(i,j)$，如果$N$个点都在$i$到$j$连线左侧，$i,j$连一条有向边。这样构出来的图的最小环就是答案。
判断$N$个点是否在直线左侧的方法：$N$个点先做一次凸包，利用凸包上的边斜率单调的性质，lower_bound找出凸包上与直线斜率最近的边，该边在直线左侧即凸包在直线左侧。
复杂度$O(NlogN+M^2logN+M^3)$，凸包+构图+最小环。

[wodesuck wrote on 2015-09-27T15:51:40]

---

我用了kdtree来判断$N$个点是否在直线左侧.  每个kdtree的节点可以表示为一个最小的矩形, 然后判断当前节点是否在直线左侧, 如果是那么找到了. 否则考虑左右子树的两个矩形的直线的关系, 如果完全在直线左侧, 那么找到了; 如果部分在左侧, 进入这个节点, 如果完全在右侧, 忽略这个子树.

复杂度$O(N\log N+M^2\sqrt{N}+M^3)$

[zimpha wrote on 2015-09-27T16:12:25]

---

@zimpha#798 kd-tree这么用复杂度能保证吗。。为什么是sqrtN呢。。

[splinter wrote on 2015-09-27T16:13:23]

---

@splinter#799 传闻期望是$O(\sqrt n)$, 虽然不知道对不对, 但是实际效果很好.

[zimpha wrote on 2015-09-27T16:14:44]

---

@zimpha#798 @splinter#799  私以为保证不了……

[ftiasch wrote on 2015-09-27T16:15:42]

---

![](http://ww4.sinaimg.cn/large/7b194757gw1ewhgp4duzvj20b708rglm.jpg)
上图，lower_bound一下就能找到红色的那条边

[wodesuck wrote on 2015-09-27T16:16:52]

---

@zimpha#801 $k$-d 树复杂度之所以对是因为，一条横线（竖线）只会经过 $O(\sqrt{n})$ 个矩形。

原因是$k$-d 树中横竖线是交替的，所以横线只会切到竖线，在再下一次切到的时候，点数已经变为四分之一了。
也就是 $f(n) = 2 f(n / 4)$，这个解出来就是 $f(n) = O(\sqrt{n})$。那么斜线是没法这么画葫芦的。

[ftiasch wrote on 2015-09-27T16:18:45]

---

@ftiasch#804 你说的很有道理, 所以说这东西是玄学, 今天看时限长才敢用的.

[zimpha wrote on 2015-09-27T16:23:41]

---

@zimpha#806 我觉得$k$-d 树用来求最近点也是个玄学，我越来越相信它复杂度是不对的。

[ftiasch wrote on 2015-09-27T16:24:35]

---

@wodesuck#803 这个似乎需要对上下凸壳分别二分？

[yangyue wrote on 2015-09-27T16:38:52]

---

@wodesuck#792 不用二分，把所有点对按照极角排个序，然后在凸包上卡一遍壳即可。 $O(N\log N+ M ^3)$

[AngryBacon wrote on 2015-09-27T18:04:53]

---

@yangyue#808 其实我是用极角代替斜率做的，这样可以整个凸包上二分

[wodesuck wrote on 2015-09-28T01:30:25]

---

@AngryBacon#813 所有点对极角排序不也是 $O(M^2 \log N)$ 么

[wodesuck wrote on 2015-09-28T01:31:17]

---

@wodesuck#817 好有道理, 学习了

[yangyue wrote on 2015-09-28T01:58:12]

---

@wodesuck#818 异议！明明是$O(M^2\log M)$

[AngryBacon wrote on 2015-09-28T02:56:37]

---

