# Nanyang 2015 F The Battle of Guandu

看了大牛的[解题报告](http://dreadnought.icpc-camp.org/2015%20China%20Collegiate%20Programming%20Contest%20Nanyang#TOC)，可是还是有点不懂。对偶后变成了

 - 最小化 $\sum\_{u} d\[u\] \cdot [w\[u\] = 0]$
 - $d[x\[i\]]-d[y\[i\]] \leq c\[i\], i \in [1,n]$

难道要用$d$的前缀和来变成一个差分约束？

[wuyanze wrote on 2015-10-23T01:17:46]

---

不太懂对偶啊...
按我来的话，Y\[i\]向X\[i\]连边构图，对于图上一条路径，会导致起点多一个袁绍，终点多一个艹艹。然后问题就变成找若干条0类点到2类点的路径，使得每个2类点至少作为终点1次。于是考虑费用流，然后这个图它边都是INF所以一次最短路就做好了...

[Nero wrote on 2015-10-23T02:33:02]

---

对偶之后不就是标准的最长路吗？

[ftiasch wrote on 2015-10-23T03:10:03]

---

@Varona#2113 
我打错了，应该是最大化。可是标准的差分约束不是应该最大化$d[t]$吗？（我智商低，叉姐别笑我。。
是不是应该弄个$d$的前缀和？

[wuyanze wrote on 2015-10-23T03:27:26]

---

对偶后是让目标方程最大化
最短路恰好让各变量最大化
如果目标方程的系数都非负。那么最短路跑出来的解肯定能让目标方程取最优
又原问题和对偶问题会同时到达最优，那么最短路跑到的解就是原问题的一个最优解

[winoros wrote on 2015-10-23T04:08:53]

---

@wuyanze#2115 所以咱说的是最长路嘛…

[ftiasch wrote on 2015-10-23T04:16:22]

---

@Varona#2118 

@winoros#2117 

谢谢两位解惑，我唯一搞不明白就是是不是该整个前缀和，然后一个约束变成两条边？

[wuyanze wrote on 2015-10-23T04:34:57]

---

@wuyanze#2107 
拿第一个样例来解释一下吧。
原问题是
min y1 + y2
s.t.
- 1y1   -1y2  >= -INF
+1y1  ＋0y2  >= 1
  0y1   +1y2  >= 1
  y1  >= 0
  y2  >= 0

第一行等于没有约束，我们可以添加一个辅助变量 -INF <= y0 <= INF，问题化为

min 1y1 + 1y2 + 0y3
s.t

 -1y1   -1y2   +1y0  >= 0
+1y1 + 0y2 + 0y0   >= 1
  0y1 + 1y2 + 0y0   >= 1
  y1 >= 0
  y2 >= 0
  y0   无约束

这样可以直接化为对偶问题

max 0x1 + 1x2 + 1x3
s.t.
-x1 + x2  <= 1
-x1 + x3  <= 1
x1 = 0
x2 >= 0
x3 >= 0

这就是最短路问题的线性规划描述了，或者说是查分约束系统。

[BIT_silence wrote on 2015-10-26T13:12:48]

---

