# 关于博弈中SG函数的一点疑问

引用挑战程序设计竞赛里的一道题

一开始有K个数字a1,a2,a3...ak， 然后有n堆硬币，每堆各有xi枚硬币，两人轮流选一堆硬币并取硬币，每次取的硬币的数量要在a1,a2...ak当中，先取光的一方获胜

书上说用SG函数，把每一堆的Grundy值异或起来，为零则先手必败，否则必胜，但是感觉有反例。。。比如说，有两堆硬币，数量分别为2和3，每次只能取1枚硬币。按照SG函数解法，这两堆硬币的SG值都是0，所以先手必败，但实际上一共5枚硬币，每次只能拿1枚，显然先手必胜的说

那么问题来了， 智障了应该喝什么药比较好

[fhy_tan wrote on 2016-07-10T07:45:34]

---

为什么SG会都是0呢。。

[702ca781-5d12-47ec-86c6-976f99ae215f wrote on 2016-07-10T08:59:08]

---

$\mathrm{SG}(n) = n$

[ftiasch wrote on 2016-07-10T18:46:14]

---

欸。。。
当前的SG值为除任意一步所能转移到的状态的SG值以外的最小非负整数，所以两个硬币的情况会转移到一个硬币，那么SG值不就是1以外的最小非负整数0吗。。。

[fhy_tan wrote on 2016-07-11T03:15:20]

---

哦。。。好吧我理解错了，这样例里SG(1)是1，SG(2)是0，SG(3)是1才对。。。

[fhy_tan wrote on 2016-07-11T03:18:07]

---

