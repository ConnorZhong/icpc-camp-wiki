# 2013 长春赛区 J Tri-war

给出一棵树每条边的长度为1，在树上选三个点A，B，C，求A，B，C分别控制了多少个点。比如：树上的一个点，它到A的距离比它到B或者C的距离都要近，就说明这个点是被A控制的

题目地址：[http://acm.hdu.edu.cn/showproblem.php?pid=4822](http://acm.hdu.edu.cn/showproblem.php?pid=4822)

在网上找到一种想法是考虑每个点被另外两个点影响能覆盖的范围的交集，并用线段树求交集的大小。比如求A控制的点的个数，A在B的影响下，能取到的每个点+1，A在C的影响下，在能取到的范围求和。感觉这么做的时间复杂度是 $O(q \log n)$，$q \leq 100000$，$n \leq 100000$，但是我写的代码一直TLE，那个博主的代码WA，求教是想法不对还是我哪里写错了T_T

我的代码：[http://paste.ubuntu.com/12552127/](http://paste.ubuntu.com/12552127/)

[gyf wrote on 2015-09-25T07:18:05]

---

= = 没这么复杂吧 ……

我觉得你首先研究一下 $A, B, C$ 三个点组成的 Y （可能退化）上面点被控制的情况，Y 外面的店的情况也确定了。

看上去只要愿意的话，是可以做到 $O(n + q)$ 的？

[ftiasch wrote on 2015-09-25T07:23:46]

---

@ftiasch#611 感觉这么做（用线段树）更无脑一点啊，研究位置关系好像要讨论好多种情况T_T，还是想请教为啥会TLE

[gyf wrote on 2015-09-25T07:37:21]

---

@gyf#612 = = 这个窝不知道啊 …… 感觉你这程序常数巨大 = =

[ftiasch wrote on 2015-09-25T07:38:18]

---

@gyf#612 你考虑两个点A，B，求到A近的点的数量。很明显在dfs序上肯定是一个或者两个连续的段，然后求个线段交就可以了。

[zyeric wrote on 2015-09-25T08:21:02]

---

当时的做法好像是强行建出三个点的树结构然后暴力计算的。

http://sd-invol.github.io/2014/08/17/Changchun-2013-Tri-War/

[sd_invol wrote on 2015-09-25T08:44:59]

---

@zyeric#616 求教求线段交的做法，线段树做的的TLE了...

[gyf wrote on 2015-09-25T10:00:01]

---

@zyeric#616 我觉得这个思路很好啊，几乎没有讨论了

[AngryBacon wrote on 2015-09-25T20:28:21]

---

@gyf#621 现在有两个点A，B，我们需要求在树中离A点较近的点，假设路径A，B的中点是D，如果depth[A] < depth[B]，那么离A点较近的是D的子树部分，如果depth[A] > depth[B]，离A点较近的是除了D的子树部分。在上述的两种情况下，符合要求的点一定是在dfs序上连续的一段。那么对三个点A，B，C，我们求到A点最近的区域，即为{A，B} 与{A，C}的交集。

[zyeric wrote on 2015-09-26T01:01:27]

---

