#   Codeforces Round #356 题解

# Bear and Prime 100

如果 $n$ 可以被 $\{2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 4, 9, 25, 49\}$ 中至少 $2$ 个数整除，那么 $n$ 是合数；否则 $n$ 是质数。

# Bear and Tower of Cubes

设 $x$ 是最大的 $x$ 满足 $x^3 \leq m$。
如果不选择 $x^3$，那么剩下的数的和不能超过 $x^3 - 1$. 
设 $f(m)$ 表示答案，我们有
$$ f(m) = \max\{f(m\ \mathrm{mod}\ x^3), f(x^3 - 1) - 1\} + \lfloor \frac{m}{x^3} \rfloor .$$

注意 $m\ \mathrm{mod}\ x^3 < \frac{m}{2}$。为了计算 $f(m)$，除去形如 $f(x^3 - 1)$ 的项外，只有 $O(\log m)$ 个值需要计算。
所以，只要预处理形如 $f(x^3 - 1)$ 的项，复杂度就是 $O(m^{1/3} \log m)$. 

# Bear and Square Grid

Floodfill 找出所有连通快。考虑去掉 $C = [i, i + k) \times [j, j + k)$ 范围内的障碍。
考虑 $C$ 边界上的 $4k$ 个格子，它们所在的连通快会行程新的连通块。
除此之外，还应该统计完全在 $C$ 内的连通块。

考虑连通快 $P$，其格子的 $x$ 坐标的最小、最大值为 $x_m, x_M$，$y$ 坐标的最小、最大值为 $y_m, y_M$。
当 $i \leq x_m, i + k > x_M, j \leq y_m, j + k > y_M$ 时，连通块完全在 $C$ 内。
显然，满足条件的 $(i, j)$ 是地图上的一个矩形，部分和预处理即可。

# Bear and Chase

题意比较复杂……

首先，枚举第一天在城市 $A$ 探测. 只考虑和 $A$ 距离是 $a$ 的城市 $v_1, v_2, \dots, v_k$.
这部分的概率是 $\frac{k}{n}$. 如果直接抓捕，有 $\frac{1}{k}$ 的概率成功，所以总的概率是 $\frac{1}{n}$.

考虑第二天，我们可以算出一个 $p_1, p_2, \ldots, p_n$. 其中 $p_i$ 表示第二天在 $i$ 的概率，conditioning on 第一天和 $A$ 的距离是 $a$. （固定 $A$，不同的 $a$ 对应的城市集合不同，所以算第二天概率时，总的复杂度是 $O(m)$）

那么，如果在城市 $B$ 探测，本质就是把所有城市按照和 $B$ 的距离 $b$ 划分，每个集合成功的概率就是其中的最大值。

如果暴力枚举 $A, B$ 和 $a, b$，总复杂度好像 $O(n^4)$ 的。
实际上，对于固定的 $A, a$，第二天概率不为 $0$ 的点，只可能是和 $A$ 距离是 $\{a - 1, a, a + 1\}$ 的点。所以，在枚举 $B, b$ 时，只需要考虑点集的一部分。总的复杂度是 $O(n^3)$.

# Bear and Bad Powers of 42

感觉挺傻的……

搞一个平衡树，把相邻的相同数字收缩成段，并维护每段和下一个 $42$ 的幂次的差。
如果没有操作 $2$，那么每段的「下一个 $42$ 的幂次」只会改变 $\log$ 次，每次暴力修改即可。

---

我的代码 

https://git.icpc-camp.org/ftiasch/acm-icpc/tree/master/codeforces/679-codeforces-round-356

[ftiasch wrote on 2016-06-10T03:20:47]

---

D题的话，如果是完全图，和A距离为${a-1, a, a+1}$的点可能也是n个，理论上复杂度还是能达到$n^4$才对。但是为什么最后还是能过呢= =

[Veda wrote on 2016-06-13T11:24:35]

---

@Veda#3779 你不能这么算。

固定 $A$，所有点按照离 $A$ 的距离分成了 $n$ 个部分。那么对于每个部分，只会作为 $a$，作为 $(a - 1)$，作为 $(a + 1)$ 被枚举 $3$ 次，所以这部分的总复杂度是 $3n$.

[ftiasch wrote on 2016-06-13T11:59:42]

---

