# CCPC 2016 合肥 J 最大公约数/ Gcd


定义函数
```
f(x,y){
	c = 0
	当 y > 0
	{
		c += 1
		t = x % y
		x = y
		y = t
	}
	返回 c * x * x
}
```
给出$n(n\le 666,666,666)$,$m(m\le 666)$,$p(p\le 666,666,666)$
求 $\sum \limits_{i=1}^n \sum \limits_{j=1}^m \lfloor \frac{i \times j}{f(i,j)}\rfloor \text{ mod } {p}$
最终测试数据有66组，并且保证$n$,$m$,$p$在上述范围内随机

请问该怎么捉呢


[QAQ wrote on 2016-10-20T04:43:43]

---

@QAQ#4604 无责任口胡. 

对于$(i,j)$你可以先得到$(x,y)=(i \text{ mod } j, j)$, 这样$x, y \le m$. 由于$m$比较小, 可以先暴力预处理出所有的$f(x,y)$ $(x < y \le m)$. 之后大概枚举下$i \text{ mod } j$的值, 然后随便统计下?

[zimpha wrote on 2016-10-20T05:41:54]

---

现场过了这题。
不知道是不是水过去的，不知道有没有m方的算法。
先是枚举j，然后枚举i ％ j（然后这样会形成一个子列），然后 由于有向下取整 ，仔细观察以后会发现一定周期以后的增量是可以被分母整除，然后拿出来的，然后就是等差数列了＝＝，说的可能不清楚，大概类似于比如a1，b1，c1，...  , a2 ，b2 ，c2 , ...，然后这样的等差数列大概有lgj个，然后我的做法就是T ＊ m ＊ m ＊ lgm的了吧大概（由于数据是随机的，就过了）

[evilgeek wrote on 2016-10-20T07:15:43]

---

请教一个问题...
int f(int x, int y)
{
     int c = 1, t;
     while(y > 0){
          c ++;
          t = x % y;
          x = y;
          y = t;
     }
     return c * x * x;
}

for(int j = 1; j <= n; j ++)   for(int p = 0; p < j; p ++)
      cur[j][p] = g[j][p] / gcd(j * j, g[j][p]);

其中
g[j][p] = f(j, p); 

这个∑cur[j][p]的值理论上大概是多少可以算出来吗？

[luras_oil wrote on 2016-11-05T12:51:00]

---

具体后面怎么处理啊.

预处理次数，枚举gcd之后分子怎么等差...

[sd197555 wrote on 2016-11-06T03:46:43]

---

https://github.com/halfapri/half/commit/041bce9e91eeaa133abede5f30f29058e9d7fe01
里面可能有些奇怪的名词。。。直接略过就好了= =

[Foam wrote on 2016-11-06T14:07:35]

---

@luras_oil#4746 

@Foam#4752  这个问题大概知道啦谢谢!

[luras_oil wrote on 2016-11-08T00:54:45]

---

