# Codeforces Round #441 F Royal Questions

问题转化一下大概是这样：给出一张无向图，每条边有一个权值，要求选出一些边使得它们的权值和最大，并且满足这些边让图中存在的所有连通块要么是一棵树，要么是一棵只有一个基环的树。

一种贪心的做法是，先将所有边按权值从大到小排序，之后用并查集维护连通块并记录该连通块是否已经有环。如果当前正在处理的这条边连接的是两个不同的连通块，那么这条边在答案中当且仅当这两个连通块至少有一个没有环；如果连接的是同一个连通块的两个点，那么这条边在答案中当且仅当这个连通块中原本不存在环。

感觉是要用拟阵去证明，但是独立集交换性好像很不显然。

希望有人能解答我的疑惑，非常感谢！

[ShinriiTin wrote on 2017-10-17T11:19:39]

---

我试试看……

假设 $\mathcal{A}$ 和 $\mathcal{B}$ 是两个边集，而且 $|\mathcal{A}| < |\mathcal{B}|$. 设对应的导出子图的点集分别是 $U$ 和 $V$. 如果 $|U| < |V|$，那么依照树的 case 就证明了。
唯一剩下的情况是 $|U| = |V|$，也就是 $\mathcal{A}$ 是树，$\mathcal{B}$ 是环套树的情况。这也很简单啊，毕竟树加上随便一条边都行……

[ftiasch wrote on 2017-10-18T04:12:44]

---

@ftiasch#5457 
A 和 B 中都可能有很多的树和很多的基环树，如何证明 | U | = | V | 的时候一定能找到一条 B/A 中的边连接的是一棵树和一棵环套树呢？

[ShinriiTin wrote on 2017-10-18T11:49:47]

---

@ShinriiTin#5459 首先 $U = V$，否则就找一条伸出去的边就行。
否则就是随便一条边都连两个环套树，这样 sum 起来会和 $|\mathcal{A}| < |\mathcal{B}|$ 矛盾吧。

[ftiasch wrote on 2017-10-18T12:56:30]

---

