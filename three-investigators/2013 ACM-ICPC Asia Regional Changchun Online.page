# Contest Info

date: 2017.08.12 12:00-17:30

[practice link](https://cn.vjudge.net/contest/178485)

# Solutions

## A. Poker Shuffle

solved by skywalkert, upsolved by none

---

skywalkert's solution

考虑编号为 $i$ 的牌在牌堆中的位置 $p_i$，一次洗牌可以使 $(p_i - 1)$ 右移一位并在最高位添上一个值，这个值与 $(p_i - 1)$ 的最低位是几有关。

注意超过 $N$ 轮洗牌之后， $p_i$ 就与 $i$ 的具体数值无关了，而 $(p_i - 1)$ 和 $(p_j - 1)$ 只与 $(i - 1)$ 和 $(j - 1)$ 对应位是几有关系。

可以枚举具体对应哪一位，也即 $(i - 1)$ 和 $(j - 1)$ 的循环移位。只需检查是否存在一种循环移位使得 $\text{RotateShift}((i - 1) \oplus (j - 1)) = (p_i - 1) \oplus (p_j - 1)$ 即可，时间复杂度 $\mathcal{O}(\frac{N^2}{64})$。

## B. Good Firewall

solved by skywalkert, upsolved by none

---

skywalkert's solution

本着数据水时限松的想法，直接维护每个策略的子网，对于询问直接检查是否存在子网包含询问地址即可。

## C. Sky

sovled by braveTester, upsolved by none

---

braveTester's solution

显然落在一条直线上的点越多，需要的线越少。

维护至少有两个点的直线上的点对数，这个信息是 $O(n^2)$ 的，同时根据这个信息维护每个斜率不产生贡献的点的数目，也是 $O(n^2)$ 的。这两个信息都可以用 `map` 维护。

每次增加或删除一个点，至多影响 $O(n)$ 条直线，直接暴力修改更新上述两个信息即可。

时间复杂度 $O(nm\log n^2)$。

这里提供一些实现细节。对于斜率，采用正规化后的法向量表示。正规化的法向量满足

1. 第二个分量非负，
2. 如果两个分量有一个为 $0$，另一个为 $1$，
3. 如果两个分量均不为 $0$，则二者互质。

这里认为已经去除了重点。

对于一条直线，采用正规化的法向量和其上一个点与法向量的点乘表示。

通过上述做法全程可以避免浮点数的使用。

## D. Cut the Cake

sovled by skywalkert, upsolved by none

---

skywalkert's solution

考虑所有可能的切蛋糕方式中可以获胜的概率为 $\frac{M N}{M^N}$，那么化简后分母最大不超过 $19^{19}$，可以用 __int128 表示，直接算即可。

## E. Theme Section

sovled by braveTester, upsolved by none

---

braveTester's solution

设歌的长度为 $L$，二分主题部分的长度 $l$，从第二个位置开始到第 $L - l$ 个位置结束（闭区间，从一开始标号），用歌在歌上做 KMP 匹配，并且加上条件，如果匹配的部分不合法或者超过了枚举的长度 $l$ 则失配，检查中间有没有长度为 $l$ 的匹配点，以及歌的长度为 $l$ 的前缀是不是等于后缀即可。

复杂度 $O(\text{len} \times \log(\text{len}))$，其中 $\text{len}$ 为输入总长。

## F. Stone

sovled by chitanda, upsolved by none

---

chitanda's solution

如果石头数对 $k+1$ 取模余 $1$，那么若先手取 $x$ ，后手可以取 $k+1-x$ ，使得最后总能剩一个给先手拿。否则，先手可以先将石头拿到模 $k+1$ 余 $1$ 来保证必胜。

## G. Tsp

sovled by chitanda, upsolved by none

---

chitanda's solution

题目讲的很麻烦，实际上可以转换一下。一对 `x+` 和 `x-` 可以看成一对括号，最终的序列一定是一个合法的括号序列。

编号小于 $x$ 的括号对，要么在 `x+` 之前出现，要么被 `x+` 和 `x-` 括起来。那么，一段合法的括号序列必定由连续编号的括号对组成。

那么我们设 $f[l][r]$ 为以 `r+` 和 `r-` 括起来的从 $l$ 到 $r$ 的满足条件的括号序列的最小花费，$g[l][r]$ 则为从 $l$ 到 $r$ 依次组成若干个满足要求的括号序列的最小花费。

对于 $f[l][r]$ 的转移（需满足 $l<r$ ），枚举它的第一个子括号序列：
$$
f[l][r]=\min_{k=l}^{r-1} \{ \text{cost}(r_+,k_+)+f[l][k]+g[k+1][r-1]+\text{cost}(r-1_-,r_-) \}。
$$


那么对于 $g[l][r]$ 的转移，枚举第一个括号序列：
$$
g[l][r]=\min_{k=l}^{r} \{ \text{cost}(l-1_-,k_+)+f[l][k]+g[k+1][r] \}。
$$

观测上述转移，可以发现我们在计算 $g[l][r]$ 时加上了 $\text{cost}(l-1_-,k_+)$ ，为什么呢？因为 $g[l][r]$ 前面那段括号序列的末尾，必定是 $l-1_-$ ，我们可以将这个值算到 $g[l][r]$ 中，这样就能只用二维状态了。

## H. Network

upsolved by braveTester

---

braveTester's solution

这题做法还是蛮多的...

**Solution 1**

如果最优解的圆 $C$ 与 General M 的连线的直径上没有点的话，可以调整 $C$ 使得其上至少有两个点。如果只有一个点的话，以 General M 为圆心，$C$ 的圆心至少可以向顺时针或者逆时针中的一个方向转动一点点，再朝 General M 靠近一点点，违反了最优解的假设。

对于点在直径上的情况，可以直接枚举检查，复杂度 $O(n^2)$。对于两个点在圆上的情况，由于还给了半径 $d$，因此以两个点为圆心，作两个半径为 $d$ 的圆，二者交点即为可能的圆心，再 $O(n)$ 检查即可。复杂度 $O(n^3)$。

**Solution 2**

稍好一点的做法是枚举在圆上的一个点 $x$，然后对每个不同与 $x$ 的点 $y$，算出 $x$ 和 $y$ 在同一个半径为 $d$ 的圆，且 $x$ 在其上时圆心的可能极角范围，再对这些范围端点相对 $x$ 极角排序，用类扫描线思想扫一遍，在端点处查当前圆的合法性并更新答案即可。复杂度 $O(n^2 \log n)$。

**Solution 3**

在 Solution 2 的基础上，我们发现，其实只要得出所有点的圆心极角范围的交就行了，不用排序。得出交后找最靠近 $x$ 与 General M 的连线的极角计算答案即可。由于可能的圆心极角区间长度严格小于 $\pi$，因此最后交出来的区间最多只有一段，判断是 $O(1)$ 的，所以复杂度是 $O(n^2)$ 的，而且在这个做法中，点在直径上的情况已经被包含，不用单独处理。

**Solution 4**

另外一个复杂度更优的做法是，以每个点做半径为 $d$ 的圆，共 $n$ 个。再二分圆心到 General M 的最大距离 $r$，以其为半径，以 Gerneral M 为圆心作圆，该圆与之前的 $n$ 个圆如果有公共部分，则说明二分的 $r$ 可行，否则不可行。

判圆交是否为空有个经典做法，具体如下：

1. 算出圆在 $x$ 轴投影的区间交，设为 $[l, r]$。
2. 取 $[l, r]$ 中点 $\text{mid}$，将圆与 $x = \text{mid}$ 交的区间求交。这里只需要维护上端点最小值和下端点最大值及其各自对应的圆即可。
3. 如果 2 中交不空，说明找到了解；如果交空，对达到上端点最小值和下端点最大值的两个圆求交，若二者相离，则无解，否则两个（如果有的话）交点一定在 $x = \text{mid}$ 一侧，取对应的区间，转 2。

上述检查过程是 $O(n \log v)$，其中 $v$ 是坐标差的最大值。又因为最终答案的可能范围和 $v$ 同阶，故总复杂度为 $O(n \log^2 v)$。

注意要提前判断一下是否有解，即不要 Gerneral M 的圆做一下圆交。

---

braveTester's comment

个人用的 Solution 4，不知道这个做法对精度要求如何啊...数据太水完全看不出来...

或许可以通过给半径 $d$ 加 `eps` 来避免交只有一个点时探测不到的问题。虽然自己测的时候没碰到这个问题。

吸取了个教训...以后二分的话次数多一点没坏处...至少也得在保留位数后确保三位才行...不然大概率影响四舍五入位然后欢声笑语中打出 gg...

## I. Bell

sovled by skywalkert, upsolved by none

---

注意到模数 $95041567 = 31 \times 37 \times 41 \times 43 \times 47$ 是一个无平方因子数，只需在模质数 $p$ 意义下算出 $B_n$ 即可。

首先利用 $B_n = \sum_{i = 0}^{n - 1}{{n \choose i} B_i}$ 或 Bell Triangle 预处理 $B_0, B_1, \cdots, B_{p}$。

接下来利用 $B_{p^m + n} \equiv m B_n + B_{n + 1} \pmod{p}$ 依次维护出 $B_{a_0 + 0}, B_{a_0 + 1}, \cdots, B_{a_0 + p}$， $B_{a_0 + a_1 p + 0}, B_{a_0 + a_1 p + 1}, \cdots, B_{a_0 + a_1 p + p}$，依次类推，其中 $n = \sum_{i \geq 0}{a_i p^i}$，时间复杂度 $\mathcal{O}(p \sum_{i \geq 0}{a_i}) = \mathcal{O}(p^2 \log_p n)$。

## J. Flyer

sovled by braveTester, upsolved by none

---

braveTester's solution

签到题。

因为奇数至多有一个，因此求前缀和会呈现一段连续的偶数，一段连续的奇数，直接二分分界点即可。最开始直接判断整段前缀和是不是偶数即可判断有没有解。

复杂度 $O(n \log n)$。

## K. Sword

upsolved by skywalkert

---

skywalkert's solution

如果有解，最优解一定在 $\max(LPT) \max(\max(LPT), n)$ 秒内，二分最后一次操作的时间，检查是否存在操作最少的解满足时间限制。

最坏情况下是从 600 个决策里选出至多 21 个决策，使得决策覆盖 200 种情况，若不考虑禁位，属于重复覆盖问题，启发式搜索即可。

考虑禁位，为其写精确覆盖代价较高，不过禁位不多，直接在搜索时暴力判断即可。

数据范围比较小，数据可能也没专门卡位运算优化，手写 bitset 搜索重复覆盖即可通过，反而我的 Dancing Links 常数写大了很尴尬。

至于为什么是至多 21 个决策，可以考虑选择一些 4, 5, 6 的倍数覆盖所有 10 个角色，由于 4, 5, 6 都是距离超过 1 的所以比较好构造，最少需要的数量即为 $3 \times 10 -  \frac{60}{\text{lcm}(4, 5)} - \frac{60}{\text{lcm}(4, 6)} - \frac{60}{\text{lcm}(5, 6)} + \frac{60}{\text{lcm}(4, 5, 6)} = 21$。

# Replay and Summary

## Replay

今天有了进步，迟到人数更多了。

H 一开始随便看题，然后发现 F 过的人多，想了想之后切了。

L 过来了，看了几个题，发现 J 很水，就上去切了。

之后 T 终于过来了，开始搞 I，然后就过了。

L 看了 B 和 C 之后表示 B 似乎就是简单模拟，C 他也会做。

H 和 T 开始讨论 A，然后没睡醒的 H 没想明白就让没睡也没想明白的 T 上去写，wa 了若干次。

期间 L 觉得 E 二分一下就行了，然后上去切了，H 和 T 还在没想明白继续 wa A。

L 在 B 和 C 中抉择，但是 B 的提交实在太惨了，于是 L 没敢上，虽然此时 C 也很惨，但是题意比 B 难一些，于是 L 选了 C。

L 敲完交的时候评测姬挂了。之后 L 过来看了下 A，瞬间秒了，H 和 T 只能抱着大腿痛哭流涕。

然后 T 上来写了个 B 的暴力，提交了。之后三人开始讨论 H，没睡的 T 一直在嘟囔着~~援交~~啊不圆交，而 H 则坚持着枚举边界点，之后不了了之。

L 发现 C 有点问题，改了改又交了一遍。H 和 T 又交流了一下 G，一个没睡一个没睡醒的人又没想明白就准备写，搞了几分钟又发现不会做了。

不死心的 H 继续想 G，突然灵光一闪会做了，和 T 说了下上来写完交了。

之后评测姬终于恢复了。没睡的 T 则代替评测姬躺下了。

之前提交的 A 和 G 通过了，而 B wa 了，C ce 了，L 改了改 C 之后 wa 了，又查了会错之后过了。

H 则在帮 T 看他的 B，感觉没什么问题，L 过了 C 之后也过来看，两人改变量类型什么的都试了也没用。就在 H 感到绝望之际，L 发现 T 一个判断的逻辑是错的，改了之后就过了。

## braveTester

这场也没怎么休息好...再加上评测机挂了，拖了很长时间，心态有些问题，后期极其颓废。

$3$ 的净贡献加上两个助攻，还算可以吧。

应该再自信一些？敢想敢写敢过。

## chitanda

首先得调整好作息，早点睡，不然什么都想不明白。

整个队在比赛期间都比较消极，不太愿意动脑子、交流和上题。

## skywalkert

本场贡献水题和套路题，输出很低。

合理安排时间，不作死就不会死。