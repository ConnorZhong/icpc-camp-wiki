Contest Info
============

date: 2017.07.27 12:00-17:00

[practice
link](http://acm.hdu.edu.cn/contests/contest_showproblem.php?cid=760)

[official
solution](http://bestcoder.hdu.edu.cn/blog/2017-multi-university-training-contest-2-solutions-by-电子科技大学)

Solutions
=========

A. Is Derek lying?
------------------

solved by braveTester, upsolved by none

------------------------------------------------------------------------

braveTester's solution

对于 Derek 和 Alfia
选项相同的题，只能二者同时得分或者同时不得分。对于不同的题，可以让 Derek
和 Alfia 中的一人得一分，或者都不得分。

二者分差显然只能通过选项不同的题抹平。抹平之后，除了使用选项相同的题使二者同时得分以外，也可以用两道选项不同的题，使二者各得一分。

时间复杂度 $O(n)$。

B. hash
-------

upsolved by skywalkert

------------------------------------------------------------------------

skywalkert's solution

考虑将 $M \times M$ 的目标矩阵分成许多块 $A \times A$
的矩阵，每块的同一个位置标记一个 $B \times B$ 的矩阵，当
$A + B - 1 \leq N$ 时，$N \times N$ 的询问矩阵至少包含一个标记矩阵。

考虑哈希这些标记矩阵的出现位置，再对询问矩阵进行处理，当询问矩阵出现标记矩阵时，找到匹配位置尝试进行匹配，其中标记矩阵出现的期望次数为
$$
(N - B + 1)^2 \frac{{\left\lceil\frac{M}{A}\right\rceil}^2}{2^{B^2}}。
$$

这里将查询某个坐标取值和哈希查找视为常数次操作，总复杂度为 $$
\mathcal{O}\left({\left\lceil\frac{M}{A}\right\rceil}^2 B^2 + T (N - B + 1)^2 \frac{{\left\lceil\frac{M}{A}\right\rceil}^2}{2^{B^2}} N^2\right)，
$$ 为了平衡 $B^2 + \frac{N^4}{2^{B^2}}$ ，已知 $N = 1000,$ $M = 10^6$
，故这里取 $B = 6,$ $A = 995$ 。

C. Maximum Sequence
-------------------

solved by braveTester, upsolved by none

------------------------------------------------------------------------

braveTester's solution

设 $b^j_{k} \ge b^{j + 1}_{k}$，其中
$j > n$，稍加分析可以发现，调整二者的 $b$ 不会使解更差，因此
$\{b^{j}_k\}_{j = n + 1}^{2n}$ 一定是单调不减的。

之后只要预处理后缀最大值即可递推算出 ${a_i}$ 中的每个数，时间复杂度
$O(n)$。

跟 jyb 讨论后，发现如果 $b$ 的取值可以为 $[1, 2n]$，且计算 $\max$
时没有减下标的操作，则问题转化为 2017 camp
那道单调栈的矩阵乘法题，还是可以 $O(n)$ 的。

D. Puzzle
---------

upsolved by skywalkert

------------------------------------------------------------------------

skywalkert's solution

每个数字在选出时已经确定其后数字与其产生的逆序对数，线性模拟这个过程即可。

注意每次是拿完而不是只拿至多 $N + 1$ 个。

E. Sdjpx Is Happy
-----------------

solved by braveTester, upsolved by none

------------------------------------------------------------------------

braveTester's solution

考虑交换后的最终答案，则一定形如 `...xxx***yyy---`，其中

1.  每段排完序后都是一个完整区间。
2.  相邻两段排完序后都不是完整区间。
3.  `xxx` 和 `yyy` 不可以为空，其它几段都可以为空。
4.  `...` 的最小值为 $1$，`---` 的最大值为 $n$（如果两段各自存在的话）。
5.  `xxx`，`***`，`yyy` 的最小值一定形如 $321$ 这种样子。

首先 $O(n)$ 预处理 `...` 和 `---` 的可能位置和最大分段，然后 $O(n^2)$
预处理 `...xxx` 和 `yyy---` 的可能位置和最大分段。

注意如果可以分成 `...xxx` 以及 `..xxxx`
的话，选前者显然答案不会变差，因此每个 `...xxx`/`yyy---`
的可能位置对应的 `xxx`/`yyy`，都只有一个，把他们的最大值和最小值记下来。

现在要枚举 `***` 的左端点 $l$ 和最小值 $m$，设现在能切的第一段右端点为
$jump[l][m] := r$。对于 `...xxx` 的信息，已经计算过了。对于 $r$
右边的数，要么是 `***` 的一段，则转化为一个子问题；要么是 `yyy---`
的一部分，也已经计算过了。这部分复杂度 $O(n^2)$。

为了快速得出枚举左端点和最小值后能切的第一段右端点 $r$，可以枚举左端点
$l$，再枚举 $r$，如果 $[l, r]$ 与排序后值的区间 $[m, M]$
长度相等，则为一个可能的段，令 $jump[l][m] = r$。这样预处理复杂度
$O(n^2)$。

由于要满足 $321$ 这种模式，因此确定分段之后要通过之前计算的 `xxx`，`yyy`
和 `***` 的最小值比较一下确定是否是可行答案即可。

需要特殊判断 `***` 为空的情况。

总复杂度为 $O(n^2)$。

多校数据太弱，可以去 [Google Code
Jam](https://codejam.withgoogle.com/codejam/contest/5264487/dashboard#s=p3)
测一下原题的小数据。

F. Funny Function
-----------------

solved by skywalkert, upsolved by none

------------------------------------------------------------------------

skywalkert's solution

设矩阵 $A$ 满足
$[F_{1, 1}, F_{1, 2}] \times A^{i - 1} = [F_{1, i}, F_{1, i + 1}]$
，可以发现
$[F_{2, i}, F_{2, i + 1}] = [F_{1, 1}, F_{1, 2}] \times \sum_{j = 0}^{n - 1}{A^{i - 1 + j}}$
，同理可以得到 $[F_{3, i}, F_{3, i + 1}]$ 的情况。

令 $B = \sum_{i = 0}^{n - 1}{A^i}$ ，则
$[F_{i, j}, F_{i, j + 1}] = [F_{1, 1}, F_{1, 2}] \times B^{i - 1} A^{j - 1}$
，直接快速幂即可。

G. If the starlight never fade
------------------------------

upsolved by skywalkert

------------------------------------------------------------------------

skywalkert's solution

由 $(x + y)^i \equiv x^i \pmod{p}$ $(1 \leq x < p)$ 得
$(1 + \frac{y}{x})^i \equiv 1 \pmod{p}$ 。

对于不同的 $y = a$ 和 $y = b$ ，总能找到 $x = c$ 和 $x = c \frac{b}{a}$
对应相同的 $\frac{y}{x}$ ，故 $y$ 在这里的影响可以被省去，只用考虑
$\frac{y}{x}$ 的取值。

而事实上有 $1 + \frac{y}{x}$ 的阶整除 $i$ ，以及 $\frac{y}{x} \neq 0$
，故解的数量为 $\gcd(i, \varphi(p)) - 1$ 。

所求即 $$
m \sum_{i = 0}^{p - 1}{i(\gcd(i, \varphi(p)) - 1)} = m \left(\sum_{d \mid p - 1}{\left(\frac{p - 1}{d}\right)^2}\frac{d \varphi(d) + [d = 1]}{2} - {p \choose 2}\right)。
$$

H. To my boyfriend
------------------

solved by skywalkert, upsolved by none

------------------------------------------------------------------------

skywalkert's solution

根据期望线性性，每个颜色计算有多少概率选一个矩阵包含该种颜色。

对于每个颜色，计算有多少种方法选矩阵不包含该种颜色，即把该种颜色的点当作障碍，求无障碍矩阵数量。

直接每行做单调栈的复杂度是 $\mathcal{O}(n^2 m^2)$
的，但是实际上只有至多该种颜色点个行需要计算。

对于一整行是空行的情况，可以直接根据上一行信息直接得到该行信息，因此总复杂度为总点数乘以列数，也即
$\mathcal{O}(n m^2)$ 。

I. TrickGCD
-----------

upsolved by skywalkert

------------------------------------------------------------------------

skywalkert's solution

任意区间 gcd 大于 1 等价于任意子集 gcd 大于 1 ，所求即
$\sum_{d > 1}{-\mu(d) \prod_{i}{\left\lfloor\frac{A_i}{d}\right\rfloor}}$
。

枚举 $\mu(d) \neq 0$ 的 $d$ ，统计满足 $k d \leq A_i < (k + 1) d$ 的
$A_i$ 数量，快速幂即可。

J. String and String
--------------------

upsolved by chitanda

------------------------------------------------------------------------

chitanda's solution

后缀自动机。

对于一个询问，先在后缀自动机上找到 $T$ 的这个子串所在状态。

然后需要查询这个状态的 $\text{Right}$ 集合中在 $S$ 的一个区间内的那些
$\text{Right}$ 的 $f$ 的和，将所有 $\text{Right}$ 按 DFS
序排列，那么每个状态的 $\text{Right}$
集合就是一个连续的区间，可以用线段树维护。

然后套一个线段树/平衡树来查询当前线段树节点的这个 $\text{Right}$
集合在一个区间内的 $\text{Right}$ 的 $f$ 的和。

------------------------------------------------------------------------

skywalkert's comment

利用树状数组套可持久化线段树维护下标相关的 $f$ 值即可。

K. Regular polygon
------------------

solved by skywalkert, upsolved by none

------------------------------------------------------------------------

skywalkert's solution

整点组成的正多边形只有正方形。枚举一条边上的两个点，检查剩下两个点是否存在即可。

Replay and Summary
==================

Replay
------

L 开场从 1001 开始读， T 开场从 1011 开始读。

T 发现 1011 是自己出过的题 = =||| 抖了个机灵在 17
分钟的时候搞掉了这个题。

L 给 T 讲了下 1002, 1003 然后上机写 1001 ，一发没过，改了个 sb
错误过掉了。

T 看了下 1009 发现是 zz 题，然后 zz 地写了个根号暴力卡常数，两罚没过换 L
上去写 1003 。

L 上之前让 T 去看下 1006 ，感觉是 T 题， T 推了下发现是 sb 题。

L 第一发 1003 没过， T 开始码 1006 ，期间 L 改了个 sb 错误过了 1003
，过了一会 T 没啥难度地过了 1006 ，此时 L 差不多读完了其他题目。

现在陷入没开新题的局面。。。 二人先讨论了一下 1005 ， T 觉得是个可以写的
DP 但有些细节，于是推给了 L = =|||

T 决定先搞掉被板刷的 1009 ，各种暴力卡常数，然而…… L 强烈要求 T
换个题，垃圾时间再搞 1009 。

T 看了下 1008 ，感觉是个 math 题，然后 fix 了一下暴力做法开始莽 1008
，莽太快 WA 了一发，改了个 sb 错误过掉了。

L 感觉好像可以写 1005 了，于是开始码码码，码着码着发现复杂度不对，尴尬。

T 整理了一下现在的题目， 1010 字符串放最后做， 1002 没细想怎么随， 1007
不会做…… 1004 怎么是个 sb 题？

L 想好 1005 做法与 T 确认后继续码码码，码完 debug 了许久，感觉会超时但是
AC 了。

期间 T 变身吃瓜选手，不时拿根号暴力莽 1009 ，拿树状数组莽 1004
，莽到比赛结束也没过去。

skywalkert
----------

冷静。对多校错误的认识导致自己写起暴力无药可救，TLE
的时候还是应该多想想，找找其他突破口。

对节奏把控还差点火候。 1002 没有合理安排时间去想，有些不好。

知识掌握不牢靠。 1007
居然不会做？以及字符串抄版选手需要多练习没怎么使用的 SAM 。

braveTester
-----------

今天和 tls 平分贡献，并且最终想到的都做出来了，没坑，很好！

最后 3min
过了题还是第一次啊，真刺激。虽然赛后发现有个小问题交上去的码其实是错的...

字符串题虽然能嘴巴做法但是还是落不到代码上...字符串还是有待加强...

对于数学题一上来就畏难摔锅 tls 这习惯不好...
