## SRM701 Easy

> 有 $n$ 个石头，Alice 和 Bob 轮流取，Alice 一次只能取 $a$ 集合中的数量的石头，Bob 一次只能取 $b$ 集合中的数量的石头，$a,b$ 中的元素在 $1\backsim 5$ 之间，不能取的人输，问最后谁能赢。

当石头数足够大时，循环节为 $lcm_{x\in a,y\in b}(x+y)$，暴力算前 $10^5$ 个石头，后面的按循环节来。

## SRM701 Medium

> 给出一个字符串（长度 $n\le 50$），通过以下方式得到一个新的长度为 $n$ 的串：枚举 $i$ 从 $1$ 到 $n$，每次有一半的几率令长度为 $i$ 的后缀翻转。问在所有可能的 $2^n$ 个串中字典序第 $k$ 小的串。

先转化一下问题，相当于有一个初始为 $0$ 的头指针和初始为 $n-1$ 的尾指针，然后枚举字符串的每一位，每次有一半的几率将这个字符放到新串的头指针位置并使头指针  $+1$，有一半的几率放到新串的尾指针位置并使尾指针 $-1$。

依次枚举答案每一位的字符，然后 DP 得到新串前缀为当前答案的有多少。DP方式为 $f[i][j]$ 表示已经搞完字符串的前 $i$ 位，当前头指针的位置在 $j$ 的方案数，转移根据头尾指针的位置和当前字符决定。

## SRM701 Hard

> 给出 $n,a,b$ ，对于所有满足下列条件的长为 $n$ 的串：
>
> 1. 每个元素都是 $0$ 或 $1$
> 2. 没有相邻的 $1$
>
> 设其中 $0$ 的个数为 $x$ ，$1$ 的个数为 $y$ ，求 $x^a\times y^b$ 的和。

首先可以设 $f[i][j][k][l]$ 表示处理完前 $i$ 个元素，最后一个元素为 $l$ ，当前 $x^j\times y^k$ 的和，那么可以通过矩阵快速幂做到 $O((2ab)^3\log n)$ 的复杂度，但还是太慢。

注意到一个事实，那就是 $y=i-x$ ，所以 $x^j\times y^k=x^j(i-x)^k$ ，可以通过 $x^t(j\le t\le j+k)$ 的值算出，因此我们的状态变成 $f[i][j][l]$ ，其中 $j$ 的范围是 $[0,a+b]$ ，最终时间复杂度为 $O((2a+2b)^3\log n)$ 。