Contest Info
============

date: 2017.09.10 21:35 - 2017.09.11 00:35

[practice link](http://codeforces.com/contest/856)

Solutions
=========

A. Set Theory
-------------

solved by chitanda, braveTester, upsolved by none

------------------------------------------------------------------------

chitanda's solution

实际上相当于 $a$ 中任意两个数的差和 $b$ 中任意两数的差不一样即可。$a$
中任意两数的差最多只有 $\frac{100\times 99}{2}=4950$ 种，枚举小于
$10000$ 的数，必然能找到一个数 $d$，$i\times d(1\le i\lt n)$
都没有在那最多 $4950$ 个数中出现，以 $d$ 作为公差构造一个等差数列即可。

B. Similar Words
----------------

solved by chitanda, upsolved by none

------------------------------------------------------------------------

chitanda's solution

构建 AC 自动机，如果一个点刚好比 fail 的长度大一，那么它和 fail
只能二选一，又由于用 fail 边可以构成一个森林，因此做树 DP 就行了。

C. Eleventh Birthday
--------------------

solved by chitanda, upsolved by none

------------------------------------------------------------------------

chitanda's solution

被 $11$ 整除的数的性质是奇数位之和和偶数位之和的差能被 $11$
整除，那么我们只需关心每个数的奇偶位和的差在模 $11$
意义下的值，以及它拼接后的最低位是奇数位还是偶数位。

将初始数字分奇偶长度做。

先做所有长度为奇数的。显然从低到高第奇数个数的最低位是偶数位，第偶数个数的最低位是奇数位，那么
$f[i][j][k]$ 表示做完前 $i$ 个数，还剩 $j$
个偶数位没有填，奇数偶数位和的差模 $11$ 为 $k$ 的方案数。

做完奇数之后再做偶数。那么每个数插入的位置往低位数有奇数个奇数长度的数，那么整个数的最低位所在位为奇数位，否则为偶数位，那么
$g[i][j][k]$ 表示做完 $i$ 个数，其中最低位为偶数位的有 $j$
个，奇数偶数位和的差模 $11$ 为 $k$ 的方案数。

这样复杂度为 $O(11n^2)$

D. Masha and Cactus
-------------------

solved by skywalkert, upsolved by none

------------------------------------------------------------------------

skywalkert's solution

选一条非树边相当于覆盖一条链，要求覆盖的链互相不在端点处相交，大概是第三次遇见这个题了。

令 $f(i)$ 表示以 $i$ 为根的子树中链覆盖的最大收益，考虑所有 $\text{lca}$
在 $i$ 处的链
$(u, v)$，若选这条链，则对于不在该链上的点且与这些点直接相连的点的
$f(*)$ 可以直接求和，然后加上选这条链的权值，定义 $s(i)$ 表示 $i$
的直接孩子的 $f(*)$ 之和，则选 $(u, v)$ 的收益可以表示为该链的权值加上
$(u, v)$ 上的 $s(*) - f(*)$ 之和，不选任何一条链的收益即为 $s(i)$。

利用 dfs 序线段树维护子树里每个点到当前点的 $s(*) - f(*)$ 之和，在
$\text{lca}$ 处 dp 即可，时间复杂度 $\mathcal{O}(n \log n)$。

E. Satellites
-------------

upsolved by skywalkert

------------------------------------------------------------------------

skywalkert's solution

两个行星覆盖区域的交集可以用一个新的行星覆盖区域表示。如果这个区域内不可选点作为基站，说明存在一个其他行星满足它的覆盖区域能包含这个区域。

对于询问，首先判断两个行星的覆盖区域是否有交集，这个可以用其在圆弧上的覆盖区间确定。

接下来考虑每个三角形的两个底角，交集为两对底角取最小值，询问是否存在其他三角形的底角均不小于交集的底角。

根据左边的底角排序所有的三角形，维护区间三角形右底角的最大值即可，时间复杂度
$\mathcal{O}(n \log n)$。

为了避免精度误差，圆弧上的交点的横坐标可以用整型分数表示，角度同理可用相应的余弦值表示。

F. To Play or not to Play
-------------------------

upsolved by skywalkert

------------------------------------------------------------------------

skywalkert's solution

~~在题解的误导下许久不会做~~

用二维空间里的点 $(x, y)$ 表示第一个人经验值为 $x$，第二个人经验值为 $y$
的状态，则初始状态只有
$(0, 0)$，之后根据三种可能的事件，可行的状态组成的区域会不断地向 $x$
正向、$y$ 正向以及 $y = x$
正向偏移，但是在第三种情况时可能出现偏移量不同的情况。

考虑两个可行状态 $(x_1, y_1)$ 和 $(x_2, y_2)$，如果
$x_1 < x_2, y_1 < y_2$，那么在以后的任意事件里 $(x_2, y_2)$
及其相关的前继状态总有一个能扩展出不比 $(x_1, y_1)$ 更差的状态。

因此可以尝试维护不被其他可行状态**支配**的极限可行状态，这些状态形成了一个单调点列。在第三种事件出现时，可能在
$x - y = \pm C$
处产生新的极限可行状态，而新的极限可行状态可能支配原有的极限可行状态。

如果使用在线算法，需要一个数据结构支持对**有序**点集增加区间偏移、定位区间端点、增加删除点。如果使用离线算法，可以尝试处理出
$x - y$ 可能的值，用线段树维护某些信息。
