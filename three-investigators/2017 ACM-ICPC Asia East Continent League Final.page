# Contest Info

date: 2017.12.17 09:00-14:00

practice link: **onsite**

# Solutions

## A. Chat Group

solved by skywalkert, upsolved by none

---

skywalkert's solution

答案是 $2^N - \sum_{i = 0}^{K - 1}{{N \choose i}}$，预处理逆元顺着推 ${N \choose i}$ 即可。

## B. Scapegoat

solved by skywalkert, upsolved by none

---

braveTester's solution

因为 $\sigma^2 = E[X^2] - E[X]^2$，而 $E[X]$ 为定值，因此只需要最小化 $E[X^2]$。由拉格朗日不定乘子法可以证得，当一个麻烦的替罪羊数目一定时，一定是均分严重度使 $E[X^2]$ 最小。因此当麻烦为 $a_i$ 有 $b_i$ 个人分摊时，该部分 $E[X^2]$ 为 $a_i^2 / b_i$。

建立费用流模型，期望是一流量表示一个替罪羊。由于 $a_i^2 / b_i$ 是 $b_i$ 的下凸函数，因此将代价差分之后求最小费用最大流即可得到答案。

具体来说，一个麻烦先认为强制只有一个替罪羊，然后将一个麻烦拆成两个点，两点间连有若干条容量为 $1$，费用为 $a_i^2 / (j + 1) - a_i^2 / j$ 的边。这样每一个满足选择 $(u, v)$ 间费用为 $w$ 的边时，所有 $(u, v)$ 间费用比 $w$ 小的边都满流的流量方案与合法解之间构成一个一一映射。而求最小费用最大流时，由于增广过程限制，求出的解必然是满足这个限制的，并且由于是全局最小解，因此必然是满足限制的最小解。

但仔细观察这个图，发现增广过程用堆模拟即可。因此总复杂度为 $O(m \log n)$。

## C. Traffic Light

solved by braveTester, upsolved by none

---

braveTester's solution

路上时间没有意义，不妨认为都是 $0$，相应的，该部分时间需要预先统计进答案。

一个直觉是，如果把所有红灯都靠右放，则至多等一个灯的红灯时间。接下来说明最坏情况下至少要等一个最长的红灯时间。

不论方案为何，设达到最长红灯时间的灯为 $l$，则从 $l$ 的红灯开始时间进入第一个红绿灯，一直到达 $l$。如果到达 $l$ 的时候，已经等待了超过 $l$ 的红灯时间，则命题得证；否则，则需要等待 $l$ 的红灯至结束，这样等待时间至少也是 $l$ 的红灯时间。因此，至少等待一个最长的红灯时间。

这个性质结合之前的构造可以得到，只等一个最长的红灯时间是最优解，读入的时候取个最大值即可。

复杂度 $O(n)$。

## D. Mr. Panda and Geometric Sequence

solved by skywalkert, upsolved by none

---

skywalkert's solution

数字不会很多，全部构造出来即可。

不妨设前三项是 $A, B, C$，那么有 $B^2 = A C$，再根据 $A < B < C$ 和数字长度不超过 $16$ 可知 $B < 10^5$。

枚举 $B$，对其做质因数分解，再枚举小于 $B$ 且是 $B^2$ 约数的正整数作为 $A$ 即可构造其他项。

复杂度 O(跑得过)。

## E. Snakebird

unsolved

## F. Good Number

solved by chitanda, upsolved by none

## G. Image Recognition

upsolved by skywalkert

---

skywalkert's solution

一道假题……

考虑将向量插入字典树，由于题目保证向量两两不同，则它们一定能被区分，只需要保证它们两两 LCA 往下延伸的那条边所在维度被选即可，而任选 $k$ 个点的两两 LCA 去重之后才 $k - 1$ 个……

先造出这 $n$ 个向量对应的恰好 $n - 1$ 个能作为两两 LCA 的点，对这 $2 n - 1$ 个点建一棵新树。每次询问时相当于给叶子标记存在性，之后随手在新树上遍历一下就知道要留下哪 $k - 1$ 个点往下延伸的那条边所在维度……

## H. Mr. Panda and Birthday Song

solved by chitanda, upsolved by none

## I. PLAYERUNKNOWN'S BATTLEGROUNDS

unsolved

## J. Straight Master

solved by skywalkert, upsolved by none

---

skywalkert's solution

强上生成函数无果，后来发现 $3, 4, 5$ 的线性组合能表示所有不小于 $3$ 的整数……

将序列差分，于是可以将每个 $1$ 与距离至少为 $3$ 的 $-1$ 相消，贪心地消去即可判定是否有解。

## K. Downgrade

solved by skywalkert, upsolved by none

---

skywalkert's solution

每次降级只需要考虑主等级，用双指针预处理出降级后的情况即可。

然后模拟一下。

## L. SOS

solved by chitanda, upsolved by none

## M. World Cup

solved by skywalkert, upsolved by none

---

skywalkert's solution

枚举一下 $63$ 场分别干了什么即可。

# Replay and Summary

## Replay

`L` 从头开始看，`T` 从后往前，`H` 跳着挑短的看。

`L` 看到 A 觉得是个签到题然而没能一眼看出解法，但知道 `T` 肯定会，直接扔给 `T`，果然 `T` 一眼出然后上机敲，不一会 A 了。

`T` 之前看 M 没看懂，做完 A 之后又读了边样例，发现是个傻逼题，没换手直接继续敲 M，不久之后也 A 了。

`L` 在这个过程中读了 B 和 C，化简了一下 B 的式子发现不会做，和 `T` 讨论后无果，遂搁置。`H` 看了几个题都没啥想法。

`H` 和 `T` 交流了下 L 的题意觉得是个奇怪的博弈，跳过。`H` 读完了 J 和 `L` 交换了一下题意，然后大眼瞪小眼不会做。`H` 觉得 F 看上去像个简单题，于是开始思考。

此时 `T` 看了看榜发现海女快如闪电的过了 G，瞅了眼题发现也不会做，于是跟 `L` 交换了一下题意，不会做，搁置。

`T` 和 `L` 整理了一下题的情况，发现 H 有些长就把 `L` 赶去读 H。`L` 由于不知道 in a row 的含义对着样例一脸懵逼，卡了很久直到看见了输入中的 continuous 才知道什么意思。

`L` 看见旁边的嗨呀好气呀有 4 个球，而自己只有 3 个，数了数发现多个 C，于是踌躇满志的开始干 C。

（**J 的过程需要 `T` 补充**）

`H` 上去写 F，写了会发现样例没法过，调试过程中发现这题其实情况很复杂。

`H` 从 F 上下来，和 `L` 聊了几句，`L` 在什么都不知道的情况下，顺着 `H` 的思路说这像个 KMP，然后 `H` 发现之前的代码没有写 KMP...继续讨论了一会末尾是 0 的情况，`H` 提出复杂度可能会爆炸，`L` 直觉说不会，后面是可以预测的，这点给了 `H` 启发。`H` 顺着这个思路推了个结论把漏洞补了上去继续写 F，不一会过了（实际上在实现的时候忘记预处理一个东西复杂度错了，但还是通过了）。

`L` 继续干 C，期间和 `T` 意识流了一波，虽然 `T` 的话和正解没什么关系，但是其中的思路还是给予了 `L` 启发。`L` 猜测只需要等一次，试了试似乎总可以等最长的，拿两个红绿灯试了试觉得很对，然后和 `T` 说了一下。`T` 看完样例觉得 `L` 说的很对，然后 `L` 就上去飞快的把 C 切了。

中间一段时间三个人满地打滚不知所措，`T` 和 `H` 讨论了下 B 和 L，`T` 猜了个结论，决定莽一发 B。期间，`H` 在 `T` 的提示下终于推出了 L 的结论，`T` 莽过了 B 之后，`H` 将 L 题小数据打表验证了之后通过了这题。

（**D 的情况待 `T` 补**)

此时 `H` 和 `L` 在讨论 H，`L` 不是很会做，于是决定分类讨论。`H` 和 `L` 于是在分类讨论的路上越走越远，幸好情况不是特别多，而且都是线性的。讨论到后面觉得快出了，于是有些乱，`L` 觉得不太行于是换了张纸重新写了遍流程。

期间 `T` 对着 G 挠头，把 `L` 叫过去商量了一下策略。此时 `T` 有些不清醒，不太想做不会做的 G，想开没人过的 E 和 I，`L` 晓之以理动之以情摁住了躁动的 `T`，让他乖乖想 G，`L` 自己则去看着 `H` 写 H。

两个人顺着之前的思路顺顺利利的写完，交完一发之后打印，然后焦急的等待结果，没想到 1A，十分开心。

此时时间是 4:20，`T` 还是对着 G 挠头，于是三人一起去干 G。`T` 和 `H` 往线性基的方向想了想，觉得很对，有了个做法，但是 `L` 觉得这个做法没什么意义持怀疑态度，但也没什么可干的遂让 `T` 上去写。结果过了不到 2min，`L` 就想出了反例给 `H`，但没有其他事可干的三人也只好让 `T` 继续写。

`L` 知道大概率做不出来于是全身心放松，思路往排序的方向走了走，15min 之后想出了正解，但是此时已经没有时间了，和 `T` 和 `H` 确认了一下 G 做法的正确性之后静待结束。

## braveTester

菜鸡本场在队友刚题的时候捡漏个 C，帮助 lls 搞了 F，和 lls 一起搞了 H，最后想出了 G 的正解（虽然没时间做了），可能本赛季贡献最好的一场？

骗 lls 一起分类讨论 H 导致二人捆绑效率降低要不要背大锅啊...不过最后 1A 也差强人意了。

这场打的超级开心，史无前例的 10 个 1A。感谢 lls 和 tls，我的队友最棒啦！

## chitanda

一开始 F 没完全想清就上去写了，浪费了机时，还好之后想出来了。实际上，通过此题花费了较长的前中期思考时间以及一部分机时，导致前期出题较慢，是否值得还是个疑问。

H 题没能想到 DP，分类讨论花费了大量的时间，也是 G 没有想出来的一个重要因素。G 思考在错误的方向上了，直到最后几分钟才想到正解（封榜前通过人数就挺多，是否应该尝试用假算法莽一波呢？）