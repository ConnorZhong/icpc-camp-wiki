D. Something with XOR Queries
-----------------------------

固定 $i$ 为 $0$，遍历 $j$ 得到数组 $p0xb[j]$，固定 $j$ 为 $0$，遍历 $i$
得到数组 $b0xp[i]$。

对于任意 $i$ 和 $j$，有 $b[j] = p0xb[j] \oplus p[0]$ 和
$p[i] = b0xp[i] \oplus p0xb[0] \oplus p[0]$，因此
$p[i] \oplus b[j] = b0xp[i] \oplus p0xb[0] \oplus p0xb[j]$，只与 $p0xb$
和 $b0xp$ 有关。

因此只要一个排列满足 $p0xb$ 和 $b0xp$
则与隐藏排列不可区分。由于异或的性质，枚举 $p[0]$ 可以通过 $p0xb$ 得到
$b$，继而得到 $p$ 的其余元素，分别判断 $p$ 和 $b$
是否是个排列以及是否互逆即可。

复杂度 $O(n^2)$。

E. Points, Lines and Ready-made Titles
--------------------------------------

神奇的构造...不会做...

横坐标为左部，纵坐标为右部，一个点相当于一条边。画线的操作相当于将一条边给两个点之一。

考虑一个为树的连通块，由于边数比点数少
$1$，因此不可能全画。但是任选一个不画的点，拎起来当根，然后按照这个树的结构把边给儿子，则任意大小为
$n - 1$ 的子集都可以构造。容易发现，任意真子集也是可以构造的。

如果一个联通块不是树，搞出它的生成树，这样必定会有一条非树边，任选该边两个点中之一当根，按照树的方法构造，根通过这条非树边画出，则全集，继而任意子集可构造。

用并查集维护每个连通块以及其中是否有环，最后扫描一遍对每个连通块分别计算答案乘起来即可。

复杂度 $O(n)$。

这种考虑树然后再考虑非树的思路值得学习。题解也是用了一样的思想，虽然建图方式不一样。由于个人感觉这里的建图方式比题解更通用因此就不写题解的了。

F. Paths
--------

设两个数 $a, b \ge 2$，以及 $p$ 和 $q$ 分别为 $a$ 和 $b$
的最小质因数，容易得到 $d(a, b)$ 的判定准则（从上至下判定）：

1.  $\gcd (a, b) \neq 1$，答案为 $1$；
2.  $pq \le n$，答案为 $2$；
3.  $p, q \le n / 2$，答案为 $3$；
4.  答案为 $0$。

对于 $m \ge 2$，考虑 $\alpha < m$ 对答案的贡献。

如果 $\gcd(\alpha, m) \neq 1$，贡献 $1$，共有 $m - \varphi(m) - 1$ 种。

对于剩下答案不是 $1$ 的情况，分 $m$ 是否为质数来考虑。

当 $m$ 为合数时，其最小质因子 $p \le \sqrt{n}$。和其互质的合数最小质因子
$q \le \sqrt{n}$，由于 $pq \le n$，因此合数贡献 $2$。和其互质的质数 $q$
如果有 $pq \le n$ 则贡献 $2$，否则如果有 $q \le n / 2$ 则贡献
$3$，否则贡献 $0$。如果质数 $q$ 和 $m$ 不互质，则由 $p$ 为 $m$
最小质因子且 $m$ 为合数必有 $pq \le m \le n$，因此只会影响到贡献为 $2$
的答案。

当 $m$ 为质数 $p \le n / 2$ 时，可以通过维护哪些质数 $q$ 满足 $pq \le n$
以及以 $q$ 为最小质因数且小于 $m$ 的合数有多少个计算出贡献为 $2$
的答案，剩下的满足 $q \le n / 2$ 的质数 $q$ 以及合数（因为
$2\sqrt{n} \le n$）则是贡献为 $3$ 的答案。

当 $m$ 为大于 $n / 2$ 的质数时，答案为 $0$。

$\varphi$ 和质数可以通过线性筛搞出来，小于合数 $m$ 且与 $m$
不互质的质数个数 $q$
也可以通过线性筛搞出来，第二种情况中要维护的值可以通过 $O(n)$
时间搞出来，因此总复杂度为 $O(n)$。

E. Restore the Tree
-------------------

unsolved

------------------------------------------------------------------------

任选一个给定距离信息的基础点 $r$，对于任意一个给定的基础点
$r'$，可以根据二者的距离信息判断一些信息。

具体来说，对于任意点 $u$：

1.  如果 $d_{r, u} + d_{r', u} = d_{r, r'} = d_{r', r}$，则 $u$ 在 $r$
    到 $r'$ 的唯一路径上；
2.  如果 $2l = d_{r, u} + d_{r', u} - d_{r, r'} > 0$，则 $l$ 为整数，且
    $d_{r, u} - l \ge 0$ 为在 $r$ 到 $r'$ 的唯一路径上与 $u$
    距离最短的点到 $r$ 的距离。

基于以上思路，考虑不断的把已知距离信息的基础点的信息导入图中的过程。每次加入信息前，整个图的形态是一棵结构清晰的树，每个节点上挂了一棵结构不清晰的树。每次加入的时候，相当于为结构清晰的树多加了一枝，剩下的信息应该都是冗余的。

因此按照上述思路把结构清晰的部分构出来，结构不清晰的部分随便构一构，最后验证即可。

复杂度 $O(nk)$。
