A. Acperience
=============

固定α可以发现如何取B 固定B可以发现如何取α

B. Born Slippy
==============

考虑dp\[i\]表示从i向上走得到的最大值

那么dp\[i\]=max(dp\[j\]+calc(i,j)) j为i的祖先

暴力复杂度为N^2发现每个数都小于2^16

所以拆为两部分 f\[i\]\[j\] 表示前8位为i的情况下
与后八位为j的操作获得的最优值

那么考虑i 答案就是max(f\[k\]\[a\[i\]后八位\]+k opt a\[i\]前八位）

所以询问和修改复杂度都为2\^8 就可以过啦

C. Call It What You Want
========================

D. Differencia
==============

学到啦！考虑最简单的做法 每个线段树节点维护该序列排好序的序列
那么每次修改要log查询答案变动

我们考虑 维护每个节点的这个序列的每个值向左儿子右儿子转移的位置

那么这样我们只要在根查找一下
然后向下递归就可以O（1）而不用每次log的查询了

E. Eureka
=========

问题即为三点共线的对数 枚举每个点然后极角排序就可以了 注意重点的情况

F. Fantasia
===========

求个点双联通分量
然后dfs一遍记录儿子的乘积的和以及儿子的乘积的积就可以了(cdq+并查集也可以)

G. Glorious Brilliance
======================

单独考虑每个联通快 先判断是不是二分图 然后枚举哪边是黑哪边是白

两个点之间的最短距离为dist(x,y) 那么x,y可以通过dist(x,y)的操作数交换颜色

然后相当于做一个最小权匹配 输出答案即可

H. Helter Skelter
=================

考虑最后肯定是单独一段或者跨段了

那么单独一段比如都是0 那么他可以满足的为(0\~a\[i\],0)这些询问

考虑跨段 那么他可以满足的询问也是类似的一个矩形

问题变为询问是否在矩形内 离线扫描线就可以了

I. It's All In The Mind
=======================

贪心就可以了

J. Join The Future
==================

K. Keep On Movin
================

按照奇偶贪心下就可以了

L. La Vie en rose
=================

比赛时候暴力的 实际上是个dp

dp\[i\]\[j\]\[0/1/2\]表示s匹配到i t匹配到j 0表示j和前面换了 1表示没换
2表示和后面换了

dp\[i\]\[j\]\[0\]=dp\[i-1\]\[j-1\]\[2\] s\[i\]=t\[j-1\]

dp\[i\]\[j\]\[1\]=di\[i-1\]\[j-1\]\[0\] dp\[i-1\]\[j-1\]\[1\]
s\[i\]=t\[j\]

dp\[i\]\[j\]\[2\]=dp\[i-1\]\[j-1\]\[0\] dp\[i-1\]\[j-1\]\[1\]
s\[i\]=t\[j+1\]

然后bitset压一下位就好了

M. Memento Mori
===============
