A. An Easy Physics Problem
==========================

问题分为两种情况 即是否和圆交

-   和圆相交

此时先求出和圆交点 法线即为圆心和圆的交点 求出碰撞后的速度向量

问题就变成判断B是不是在与圆交之前的线段以及是不是之后的射线的问题了

-   和圆不交

此时即为判断B是不是在射线上即可

B. Binary Tree
==============

不难发现 一直向左走K步可以走出来所有的奇数
最后一步向右就可以走出来所有的偶数 输出方案即可

C. Colorful Tree
================

D. Discover Water Tank
======================

考虑计算区间\[l,r\]最多满足多少条件

设K为\[l,r\]区间最高的挡板 那么此时可分为两种情况讨论

若最高挡板最高点有水 那么问题即为区间内有多少个1 直接计数即可

若最高挡板最高点没有水 那么问题就变成了三部分

\[l,k\]区间以及\[k+1,r\]区间最多能有多少满足条件
以及在当前最高点部分能满足多少条件

前两个直接递归解决 后面的可以直接nlogn暴力算

(Pending)

E. Expection of String
======================

我们发现可以用高精度乘法的想法 分开考虑每一位对答案的贡献

考虑两个数a,b 他们分别在i,j 乘号在k时对答案的贡献

若ij在k同侧 则贡献为0 否则可以直接计算

那么我们考虑dp\[i\]\[j\]\[k\]\[t\]表示还需要t次交换 a在i b在j
乘号在k时候的期望

这时候直接考虑c(n,2)种交换转移即可 转移通过部分和可以变到O(1)

F. Friendship of Frog
=====================

暴力即可

G. Game of Arrays
=================

我们每一位单独考虑

对于第I位 先考虑他能否通过变换变成等式 如果不可以的话那么后手已经获胜了

现在考虑每一位都可以变到等式
此时后手想获胜只要把一位变成不可能相等即可了

考虑后手攻击第I位 此时不难发现先手与其抗衡是无用功
不如先去把其他位置搞成等式

那么问题就变成第I位变成不可能相等至少后手需要做多少次 这个比较麻烦

然后再判断除了这一位先手完成需要几次判断下就好了 细节没写好还没过

(Pending)

H. Happiness of Frog
====================

I. Infinity Point Sets
======================

有限集合分为三种

-   N点共线
-   N-1点共线 一点在线外
-   N-2点共线 另外两点在线两侧

问题在于去重 去重依然三种

-   三角形
-   四边形
-   四边形+一个对角线上的点

三角形即为线上两点+线外一点

四边形为两个不相交的线段

最后一种考虑对角线上的点 向两边延伸即可

（嘴炮一下 不知道对不对）

(Pending)

J. Journey of Taku
==================

K. Kingdom of Black and White
=============================

考虑每一位变化后的答案即可

L. LCM Walk
===========

考虑一个坐标(x,y)

x=px0 y=py0 p=gcd(x,y)

那么他会变为(px0,py0(1+x0))或者(px0(1+y0),py0)

那么问题就变成了当前坐标(x,y) 不妨设(x&lt;y)

设p=gcd(x,y) 那么上一步即为(x,y/(1+x/p)) 若不能整除则结束
看能向上算几步即可
