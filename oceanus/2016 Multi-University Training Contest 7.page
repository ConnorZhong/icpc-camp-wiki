A. Ants
=======

可以发现每个联通快的样子都是几个头走到一个链上
然后链的最后两个点构成一个环

那么给出询问 只要判断他们在不在一个联通快上面 距离是不是偶数就可以了

难点在于建这个图 据说分治就好了 还没写QAQ

B. Balls and Boxes
==================

推公式

C. Colosseo
===========

对于第一问直接拓扑排序就好了

接下来发现由于竞赛图 第二个序列每个点在上面序列位置确认的 那么求出位置
求个最长上升子序列就可以了

D. Distance
===========

考虑d(x,y) z=gcd(x,y) 那么d(x,y)=f(x/z)+f(y/z) f(x)表示x的质因子个数

维护f\[i\]\[j\]表示集合中i的倍数除去i后剩余的因子为j的有几个

那么对于询问x 枚举因子z 答案就是min(x/z的因子个数+f\[z\]\[k\])
k为f\[z\]\[k\]&gt;0的最大k

f很好维护 然后就可以啦

E. Elegant Construction
=======================

按照ai从小到大排序然后每个点连接最前面a\[i\]个就可以啦

F. Find the Period
==================

(听说是原题 不会做)

G. Golden Week
==============

f\[i\]\[j\]表示i子树 根到i的sum为j时候的最大收益

不难发现j只有为目的地在i的人的预算值才是有意义的

设num\[i\]\[j\]为目的地在i的人预算为j的有几个

那么f\[i\]\[j\]=num\[i\]\[j\]\*j+sigma(max(f\[k\]\[j..m\])) k为i的儿子

维护个最大后缀值然后就可以啦 输出方案按照转移输出就可以

H. Hearthstone
==============

状压dp一下就可以了

I. Ice Walls
============

J. Joint Stacks
===============

模拟一下 然后暴力合并就可以啦

K. Knights
==========

f\[i\]\[j\]表示前i个人有j个向右走的概率

那么考虑第i个人 他向右走的话f\[i\]\[j\]=f\[i-1\]\[j-1\]

如果他向左走 f\[i\]\[j\]=sigma(f\[i-1\]\[k\]\*(0.5)\^(k-j+1))

那么整理下f\[i\]\[j\]=(f\[i\]\[j+1\]+f\[i-1\]\[j\])/2

dp就好啦

L. Lights
=========

发现No的情况肯定是存在一个矩形 他的对角有点 内部边界都没有其他的点了

那么我们把每个点求出上下左右的点 接下来看剩下的这个矩形内有没有点
如果有的话 肯定会形成小矩形

那就把每个矩形抠出来 扫描线询问下就可以啦
