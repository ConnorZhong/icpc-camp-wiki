A:HHPaint\[zsc\]
================

在求凸包的过程中 每来一个点 把他和原点以及栈顶构成一个三角形 如果要弹出
就把栈顶 栈顶-1和当前点构成一个三角形

B:Square Root\[wht\]
====================

乘以10\^(2k) 后不断牛顿迭代 然后除以10\^(k)就好了 (py真好

C:Interesting Places
====================

D:Road to Home
==============

E:Ant and apples\[zsc\]
=======================

考虑计算每个点进入要多少能量设为f\[i\]
以f\[i\]进入后出来时候的能量g\[i\]

那么考虑树形dp如何向上合并 明显应该先走可以赚到的
赚到的里面走成本最少的(即为f最小的) 然后走赔的 明显先走剩下最多的最好
然后这样暴力合并就好了

F:Square
========

G:Pair\[zsc\]
=============

直接n/1+n/2+...+n/n是nlogn的

H:The Fence\[wht\]
==================

考虑mod k的余数 然后就可以了

I:Painting the natural numbers\[wht\]
=====================================

s0='0' si=si-1+iiiiii(si-1 +1个)+si-1

这样是合法的 而且s9&gt;25000就可以了

J:Selection\[wht\]
==================

c(偶数,3)+c(奇数,2)\*c(偶数,1)

K:Parquet\[zsc\]
================

如果n&gt;1 m&gt;1 n\*m%6=0就都有解

L;Closing the Loop\[zsc\]
=========================

肯定是能取多少去多少 然后取x根的话 就是前x大
