A.Broken Clock
==============

暴力枚举合法的情况计算下dist就可以了

B.Verse Pattern
===============

数一下每一行元音字母个数就可以了

C.Destroying Array
==================

把整个删除过程倒过来看 然后用个并查集维护一下当前最大值就可以了

D.Generating Sets
=================

贪心的想法 每次考虑把最大值变成可行的最大值 然后下去就可以了

E.Research Rover
================

考虑经典的 从11到nm不经过坏点的方案数那种容斥

这道题很相似 f\[i\]\[j\] 从11到了第i个坏点 经过了j个坏点的方案
那就容斥一下就可以了

发现j实际上&gt;20就没意义啦 于是复杂度就是20n\*n的

F.Cyclic Cipher
===============

对于每个数单独考虑

然后考虑连续出现这个数的行的段
用两个端点判断当前能不能用中国剩余定理合并出合法解

然后判断的时候可以先倍增求出一些段的值 合并就快了
