A. Survival Route
-----------------

B. Dispersed parentheses \[skyxuan, rikoizz\]
---------------------------------------------

经典的合并串的dp。枚举最后一个封闭的串的放法，$O(N^3)$dp。封闭的串可以是一个0或者是一个串外面包上"()"

C. Chocolate triangles
----------------------

D. LWDB \[skyxuan\]
-------------------

询问的点v到最后一次覆盖这个点的修改点u之间的路径一定是树上的一条链。如果是一个离线问题的话就是一个典型的树分治问题。在线的话，我们把树按照类似树分治的方法分层，每个点记录该点在每一层到当前层的根节点的距离，并通过单调栈记录以该点为根节点时的修改能往外延伸的长度。查询的时候查询所有层的修改，取能延伸到查询点的时间最靠后的。相当于把离线计算的东西放到每一层根节点上动态维护。

E. Pea-City \[skyxuan\]
-----------------------

旋转卡壳计算出到凸包每个边的最上、最右、最左的三个点，通过这些点计算矩形面积并求矩形顶点。

F. Beautiful sums
-----------------

G. Nano alarm-clocks \[skyxuan\]
--------------------------------

可以发现最后所有时钟一定会变为某一个已经存在的时刻。把时钟排序后预处理出对每个时钟它前面的时钟到它的距离以及后面的时钟到它的距离，之后求这两个距离和的最小值即可。

H. Lunch \[rikoizz\]
--------------------

找规律

I. Accounting Numeral System \[skyxuan\]
----------------------------------------

倒序枚举m，每次找尽量大的数来取。注意求组合数如果使用$C_{i, j} = C_{i - 1, j} * \frac{i}{i - j}$推的话可能会爆long
long，需要用double。如果使用$C_{i,j} = C_{i - 1,j} + C_{i - 1, j - 1}$推的话可能会存不下，对j比较小的时候不能存，需要直接根据组合数公式求。

J. Ceizenpok’s formula \[skyxuan\]
----------------------------------

组合数取模。把模数分解质因数$m = \prod p_i^{k_i}$，先计算$C(n,k)$%$p_i^{k_i}$，再利用CRT算答案。

前半部分根据$C(n,m) = \frac{n!}{m!(n-m)!}$，我们只需要计算$n!$ %
$p_i^{k_i}$。把$n!$中是$p_i$的倍数的项提出来，剩下$\frac{n}{p_i}$段长度为$p_i - 1$的和一段长度为$n$
%
$p_i$的，前面的利用快速幂计算，后面的暴力算。至于那些和$p_i$不互质的数，提出一个$p_i$后就变成了一个$\frac{n}{p_i}!$的问题，可以递归计算。提出来的$p_i$会形成一个$p_i^{\frac{n}{p_i}}$，先和下面计算$m!(n-m)!$时提取出的$p_i^{\frac{m}{p_i}+\frac{n-m}{p_i}}$约掉，剩余的利用快速幂计算。这样就计算完了。

K. Dividing an orange \[skyxuan\]
---------------------------------

海盗分金问题。分$n\leq 2m$ 和 $n=2m+2^i$进行讨论

L. The Pool for Lucky Ones \[skyxuan,rikoizz\]
----------------------------------------------

记录序列中最大值以及最大值的个数、次大值以及次大值的个数。之后枚举要移动的点，更新答案。需要注意如果一个点的值为0则不能移动。

枚举点进行更新的时候也可以使用线段树来更新。细节比较少，不容易写错。
