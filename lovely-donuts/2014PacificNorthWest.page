A. Runes \[skyxuan\]
--------------------

仔细读题

B. Alchemy \[skyxuan\]
----------------------

这些圆构成一棵树，注意到每个点的价值都是相互独立的，可以先根据每个点的情况求出其最大价值，之后再找字典最小的解。

找字典序最小的解的时候，每次把当前必须要放的点的祖先节点标记为false，之后再找当前没有被标false且可选的点中的最小的点就好了。

C. Containment \[ruclion\]
--------------------------

最小割

D. Function \[rikoizz\]
-----------------------

观察可发现，$t$取值范围为$[-1,1]$，且分母固定为$m$，因此$t$不同的取值最多有$200$种。之后一定会出现循环，形成一个类似6的形状。在交点处可以计算出此时的z值，之后逆着推回去就好。

E. Hill Number
--------------

F. Knights \[ruclion\]
----------------------

状压dp，构造出转移矩阵后使用矩阵快速幂加速。直接构造转移矩阵的话是一个$256\times 256$的矩阵，如果通过bfs来构造转移矩阵可以去除许多无效的元素，得到一个$81\times 81$的矩阵。

G. Number Game \[skyxuan\]
--------------------------

考虑$f_{l,r,k}$，表示当前处理区间$[l,r]$，在区间外还有$k(0/1)$个未选点时的情况，$O(n^3)$

此外，还有一种直接根据区间总长度来判断的做法，大概是找到1左右两边的第一个可以直接取的位置，之后根据这个来讨论。$O(n)$

H. Pushups
----------

I. Salary Inequity \[ruclion\]
------------------------------

在dfs序上维护

J. Stamp Stamp \[skyxuan\]\[ruclion\]
-------------------------------------

枚举印章平移的向量，这个向量一定在所有印章构成的凸包上，之后暴力判断是否可行即可。

K. Towers \[ruclion\]
---------------------

爆搜

L. Wormhole \[skyxuan\]\[rikoizz\]
----------------------------------

floyd
