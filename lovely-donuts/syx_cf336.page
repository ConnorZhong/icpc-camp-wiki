A. Chain Reaction
-----------------

递推。$f[i]$表示从第$i$个灯塔开始点亮的状态，更新的时候lower\_bound到下一个会点亮的灯塔。取$f$的最大值即为答案

B. Zuma
-------

区间dp。$f[i][j]$表示把$i..j$这段区间消除需要花费的最小时间。考虑区间中的最后一个元素$j$是和谁配对的

-   如果没有人和它配对，则$f[i][j] = f[i][j - 1] + 1$
-   如果和$j-1$配对，则$f[i][j] = f[i][j - 2] + 1$
-   如果和$i..j-2$中的其他元素k配对，则$f[i][j] = min_k(f[i][k - 1] + f[k + 1][j - 1])$

也就是说，对于一个回文串，只有这个回文串的中心的一个或两个元素才会花费时间，其他的部分都是不需要花费时间的。

C. Marbles
----------

如果两个人的路的形状完全一样，并且一个人是要从这头走到那头，另一个人是要从那头走到这头，那么这样一定是不可能实现的。因为这样的话这两个人一定会至少相遇一次，并且在相遇之后两个人要走不同的方向，这与题目中说的两个人走的方向相同矛盾。

而如果两个人的路的形状不一样，那么首先使第一个人走到终点，这样他走了$n$步，此时第二个人最多走$n-1$步，此时令第二个人走到终点，第一个人会回退最多$n-1$步，也就是说，每经过一次这个过程，第一个人一定会至少向前走一步，而第二个人一定在终点，因此这样两个人都能到达终点。

更一般的，如果某个人的路径的前缀和另一个人的路径的前缀形状是一样的，且出发位置不同，则两个人不能同时到达终点。

具体到字符串的话，就是字符串a的后缀与字符串b的反转的的前缀相等。这里反转的定义是首先把字符串中的N变成S，S变成N，W变成E，E变成W，之后把字符串反转。

D. Power Tree
-------------

考虑节点u对根节点的贡献系数$m_u$,$m_u = \prod_{x \in Road(root,u)} (degree_u + 1)$.
$degree_u$表示节点$u$的儿子的个数。

而在增加一个节点的时候，设其父节点为$u$,则以$u$为根的子树中的每个点的贡献系数都会乘以$\frac{degree[u] + 2}{degree[u] + 1}$。

在查询一个节点的power时，首先算出其子树中节点的权值和，之后除以它父节点的贡献系数就是所有点对它的贡献了。

E. Cross Sum
------------
