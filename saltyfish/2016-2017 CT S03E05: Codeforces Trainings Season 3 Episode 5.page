A Assembly Required \[zyh\]
===========================

本质是个dfs，用优先队列估价，每次取出sum最小的状态并扩展出m个后继状态，map去重，重复k次即可，复杂度是$O(m^2klogk)$

B Bulbs \[hwq\]
===============

从右上角开始依次对现有的0进行操作

C Card Collecting \[zyh\]
=========================

dp\[i\]\[j\]表示已经有i种牌并且有j张多余的牌时集齐n种牌的期望时间，转移要么换卡，要么抽卡，抽卡时dfs搜出获得k张牌后的所有状态进行转移，第二维卡到500就能过

D Double Elimination \[zyh&ghc\]
================================

记$tl=max(0,2w-1)+l$，表示此人“相当于”在败者组胜利的次数（在胜者组胜利的次数可以折算到败者组中胜利的次数），若$tl<2k-2$，说明此人没有进入决赛，其名次可直接算出，否则对决赛情况讨论一下即可

E Election of Evil \[hwq\]
==========================

从U中每个点开始dfs，标记V中被遍历到的点

F Flight Plan \[zyh&ghc\]
=========================

直接算出两种飞行方案的路程即可，需要注意沿着纬线走是沿着小圆而不是大圆走，并不是两点间球面最短路

G Ground Defense \[zyh\]
========================

设$a_i=b_ii+c_i$，线段树维护$b_i$和$c_i$即可

H Hunter's Apprentice \[ghc&zyh\]
=================================

给平面上n个点的坐标，保证n个点构成的多边形为简单多边形，问这n个点是否是按逆时针顺序给的，是输出fight，否则输出run。利用叉积求出多边形的有向面积，面积为正当且仅当点按逆时针顺序排列

I Ingenious Lottery Tickets \[ghc\]
===================================

给6n个1\~49范围内的数，统计其中出现次数最多的6个，若出现次数相同，7优先，其次大小较小的优先。统计出现次数后按要求排序然后输出即可

J Jurisdiction Disenchantment \[hwq&zyh\]
=========================================

枚举x坐标左右端点，将范围内的点按y轴排序后枚举上端点即可

K Mixing Bowls \[hwq&ghc\]
==========================

当一个混合物的所有原料准备好后才能用一个新的碗混合，记$dp[i]$为合成$i$需要的最少碗数，考虑枚举$i$的子树$si$，如果是第$k$个合成的，需要的碗为$k-1+dp[si]$，显然按$dp$值从大到小枚举即可

L Sympathetic Tables \[zyh&ghc\]
================================

考虑先将矩阵A染成黑白相间，再将其染成矩阵B，由于操作可逆，这两步是等价的，只考虑第一步。从矩阵A的左下角开始向上依次染成黑白相间的颜色，某一格子不能染当且仅当染完后该格子和它右上方的三个格子颜色相同，这时我们先将它上面一个格子染成对应的颜色，然后就可以对当前格子染色，从而可以将矩阵A最左一列染成黑白相间，这显然不会对右边的染色造成任何影响。于是通过最多2NM次操作即可将矩阵A染成黑白相间，总操作数不超过4NM

M Two Cowsheds \[zyh&hwq&ghc\]
==============================

二分距离d，找一个最深的点往上跳d距离找到第一个点，在第一个点覆盖不到的点中找最深的点往上跳d距离找到第二个点，check能否覆盖所有点
