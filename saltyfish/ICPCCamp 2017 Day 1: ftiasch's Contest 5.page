# A Even Three is Odd [hwq补]

$dp[i][j][0/1/2]$表示考虑到$(i,i+1,i+2)$位置，最大值为$j$，第一个最大值位置在$i/i+1/i+2$时候的答案，转移考虑当一个数字上界完全确定后才计算其对答案的贡献，以$dp[i][j][2]$为例，考虑从$dp[i-1][j'\geq j][0]$转移，则$i$和$i+1$的上界可确定为$j-1$，从$dp[i-1][j'<j][0]$转移，则$i$和$i+1$的上界可确定为$j'$，从$dp[i-1][j'<j][1]$转移，则$i+1$的上界可确定为$j'$，其余转移同理

# B Walk Of Length 6 [zyh补]

直接对所有不构成六元环的六元组计数，分情况讨论，这只需要考虑每种图的出现次数以及走出每种图的轨迹数，全部加起来即可

（1）长为$1$的链，出现次数就是边数，轨迹数是$2$

（2）长为$2$的链，枚举中间点$u$，对出现次数的贡献是$\binom{deg_u}{2}$，轨迹数是$12$

（3）长为$3$的链，枚举中间边$(u,v)$，对出现次数的贡献是$(deg_u-1)(deg_v-1)$减去同时和$u,v$相邻的点个数，轨迹数是$6$

（4）长为$3$的环，枚举一条边$(u,v)$，对出现次数的贡献是同时和$u,v$相邻的点个数，但是每个环被算重$3$次，需要除去，轨迹数是$24$

（5）大小为$4$的星形图，枚举中心点$u$，对出现次数的贡献是$\binom{deg_u}{3}$，轨迹数是$12$

（6）长为$4$的环，枚举两个相对的点$(u,v)$，记同时和$u,v$相邻的点个数为$t$，对出现次数的贡献是$\binom{t}{2}$，但是每个环会被算重$2$次，需要除去，轨迹数是$48$

（7）长为$4$的环内加一条对角线，枚举对角线$(u,v)$，记同时和$u,v$相邻的点个数为$t$，对出现次数的贡献是$\binom{t}{2}$，轨迹数是$36$

（8）长为$4$的环外加一条边，枚举向外连边的点$u$及其在环上的对称点$v$，记同时和$u,v$相邻的点个数为$t$，对出现次数的贡献是$(deg_u-2)\binom{t}{2}$，但是这会包含（7）中的图，并且每个图会被计算$2$次，需要减去，轨迹数是$12$

（9）两个长为$3$的环共一个顶点，对每个点$u$求出有$k_u$个三角形经过这个点，对出现次数的贡献是$\binom{k_u}{2}$，但是这会包含（7）中的图，并且每个图会被计算$2$次，需要减去，轨迹数是$24$

# C City United [zyh补]

记一个点集$S$的诱导子图的连通块个数为$K(S)$，考虑计算$\sum{2^K(S)}\ mod\ 4$，那么如果一个点集不连通，那么$K(S)\geq 2$，在$mod\ 4$后贡献为$0$，这实际上是取出一个点集之后，对点集中的点进行黑白染色并且要求同一个连通块内所有点颜色相同的方案数，交换求和之后就是先选出一些点，然后对这些点黑白染色并且要求相邻点同色的方案数，于是$dp[i][mask]$表示现在考虑到$i$，最近的$13$个点是否选出或者选出之后染黑还是染白的状态是$mask$的方案数，枚举$i$号点的颜色转移即可

# D Coins 2 [ghc补]

令$L=lcm($拥有的硬币面值$)$，$sum=\sum_{i=1}^{k}ia_i$，可以证明用已有硬币可以组成的面值集合是若干公差为$L$，首项不大于$nL$，末项不小于$sum-nL$的等差数列的并，所以在区间$[nL,sum-nL]$中，可以被组成的面值以$L$为循环节出现，暴力计算循环节和开头结尾即可

# E Lowest Common Ancestor [zyh]

考虑分治，对每个$[m+1,r]$内的点分别计算与$[l,m]$中每个点的LCA的权值之和，这相当于在树上给定一些关键点和查询点，对这些点建出虚树后在树上dp即可，根据dfn的排序可以归并排序，再结合$O(nlogn)-O(1)$的LCA可以做到$O(nlogn)$的复杂度，但是常数比较大

# F Multi-stage Marathon [hwq补]

取块大小为$S$，预处理出走不超过$S$步的转移矩阵，维护每个位置的人数期望，在两个人出现的时间点之间利用预处理的转移矩阵大步跳过，每跳一步计算下一块内每个时间点在$n$位置的期望人数，复杂度$O(nT+n^3S+n^2(T/S+m))$

# G Matrix Recurrence [hwq补]

记$la$表示已经处理好满足$c \leq la$的矩阵，现在如果$c_i>la$，求出$[c_i,i-1]$这些矩阵的后缀积，可以递推求出满足$c_j\leq i$的矩阵，然后令$la=i$再重复前述过程，这样每个位置只会在某一次计算后缀积时被覆盖，复杂度$O(nm^3)$

# H Permutation and noitatumreP [ghc补]

线性递推，打表求出前几项之后~~枚举阶数取后若干项进行高斯消元，可以求~~OEIS出递推是$f_n=3f_{n-1}-2f_{n-2}+f_{n-3}-f_{n-4}$，然后矩阵快速幂

# I Compressed LCS [hwq补]

# J Circular Sectors [zyh补]

抠出所有边界之后对边界曲线积分，首先将每个扇形边界打断成三个有向曲线段，然后枚举一条线段，再枚举一个其他扇形和这条线段求交，具体来说就是将线段分成若干段之后每段取中点判断是否在枚举的扇形内，最后做一次线段覆盖可以知道这个线段上属于边界的部分，计算贡献即可，反向重合的边界会抵消，同向重合的边界需要unique一下，对于同一个圆上的扇形可以先极角排序去重，对于重合的同向线段在求交时可以按照某个优先级决定哪一条直线被覆盖，细节比较多，复杂度$O(n^2logn)$

# K Welcome to ICPCCamp 2017 [zyh&ghc]

枚举没出线的队伍中最高的EC排名，那么EC排名更高的都出线了，更低的只能考虑从Regional出线，显然对每支队伍只需考虑排名最高的赛区，假设现在各赛区排名第$k$的未出线队伍有$p_k$支，记枚举的没出线在各赛区的最高排名为$t$，那么最高排名$>t$的都不可能出线，可以分析出此时的方案数是$(2^{p_1}-1)+(2^{p_2}-1)+...+(2^{p_{k-1}}-1)+2^{p_k}$，利用树状数组维护这个方案数即可，需要支持单点修改$p_i$，查询前缀和