# A Renzo and the lost artifact [zyh&ghc]

考虑齐次坐标$[x,y,1]^T$，那么变换矩阵形如$[a_0,a_1,a_2;a_3,a_4,a_5;0,0,1]$，代入四个对应点对可求出$a_0,a_1,...,a_5$，所求为变换下的不动点，再列方程求解

# B Buffaloes [zyh]

联想到求LIS的单调队列方法，dp[i][s]表示考虑1到i的排列并且单调队列的状态为s的方案数，这里单调队列的大小不超过4，转移枚举下一个数，然后将已有的数中不小于下一个数的所有数+1，这样可以在保持原有数之间大小顺序不变的同时枚举出全排列，复杂度是O(n^6)的，但是有一个1/144的常数，本地打表4s可出解，如果跳过无用状态可以不打表直接过

# C Cahokia ruins [zyh&ghc]

简单模拟

# D Black Hills golden jewels [zyh&hwq]

二分答案，然后双指针求出和不大于答案的二元组个数

# E A Word to Trump All [hwq]

对所有串建立AC自动机，dp[i][s]表示现在走到自动机的i状态并且已经包含了s集合的horrible words的串的最小长度，bfs转移并记录前趋

# F Metal detector [zyh&ghc]

初始时如果i是奇数，那么是这一轮第(i+1)/2被放过的人，否则会进入下一轮，但是下一轮被放过的人的标号的奇偶性可能发生改变，取决于这一轮总人数的奇偶性，只需要记录总人数、初始第i个人现在的标号、被放过的人的标号奇偶性即可递归处理

# G The Declaration of Independence [zyh]

可持久化队列

# H Pop Divas [zyh]

取log后meed in the middle

# I Protecting the Central Park [ghc&hwq]

对原图dfs，如果遇到一条回边，新建一个节点连过去，那么原图被转化成一棵有根树，从最深的节点开始做，如果儿子数是偶数，那么两两配对，否则剩余的一个连给父亲，最后对于根节点，儿子数必定是偶数

# J King of Tokyo [zyh补]

依次记1,2,3,A,V,E,\*（\*表示任意）为0,1,2,3,4,5,6，dp[i][s]表示当前还能重新掷i次骰子并且现在6颗骰子的状态是s的最大期望结果，转移枚举第一步重新掷的骰子集合，对应骰子会变成任意的，需要记录前趋以输出第一步方案

# K Mount Rushmore and Birthdays [zyh&hwq]

经典生日问题，考虑反面计算概率

# L The Knapsack problem [zyh&hwq]

乱搞做法，对n个物品按照c/w递减排序，显然要尽可能多选性价比高的，考虑给其他物品预留min(1e7,1e8/n)的空间，再尝试只用性价比最高的min(n,100)种物品，预留1e6的空间~~，几种乱搞方法放在一起还是挺难卡的~~

正解做法，为了方便说明，新增一种c=0且w=1的物品（实际上就是占空的），对于一个容量为S的背包，将其拆成两个容量为A和B的背包，如果|A-B|\>maxw，那么总可以从容量较大的背包中选出一些物品放进容量较小的背包中，使得|A-B|\<=maxw，因此对于容量为S的背包，只需考虑分出的两个背包容量在[(S-maxw)/2,(S+maxw)/2]内的情况，不断分拆下去直到容量区间上界小于某个阈值，每次分拆会导致需要考虑的容量区间大小增加maxw