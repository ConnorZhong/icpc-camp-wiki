# A Hanzo vs. Genji

# B Fraction [zyh]

结果在$64$位整数范围内，直接模拟即可

# C Rotate String

# D Triangle [zyh]

打表，或者观察到结果即为$n$减去不大于$n$的$Fibonacci\ number$的个数

# E The Fastest Runner Ms. Zhang [zyh&hwq&ghc]

整个图是一个环上挂很多棵树，记环长为$c$，分两种情况讨论：

$(1)$$S$和$T$在同一棵树上，那么$S$到$T$的简单路径是唯一的，那么每条边除了这条路径上以及环上的边恰好要走一次以外均要恰好走两次，路径长度是$2n-c-len(S,T)$，只需最大化$len(S,T)$，树$dp$即可

$(2)$$S$和$T$不在同一棵树上，那么$S$到$T$的简单路径必然过环，设从$S$出发沿着这条路径走到环上的第一个点是$U$，同理$T$走到$V$，那么环上$U$到$V$路径上的边都要一次，不在$U$到$V$的路径上的边有一条边可以不走，其余都要走两次，树上的边除了$S$到$U$的$T$到$V$路径上的要走一次以外均要走两次，路径长度是$2n-2-len(U,V)-len(S,U)-len(T,V)$，只需最大化$len(U,V)+len(S,U)+len(T,V)$，显然$S$和$T$应该取子树中最深的，在环上取一个原点$P$，规定$dis(P,U)$表示从$P$逆时针走到$U$需要经过的边数，于是有$dis(U,V)=dis(P,V)-dis(P,U),len(U,V)=max(dis(U,V),dis(V,U))$，现在枚举$U$，逆时针找下一个$V$，单调队列维护$dis(P,V)-len(T,V)$的最值即可，也可枚举环上一条边，枚举$U$到$V$的路径是否经过这条边，这样只需维护一个最值然后来回扫两次

# F Harmonic Value Description [hwq&ghc]

考虑将$k$和$2k$放在一起，可以构造出$$2k-1,2k-2,...,k+2,k+1,1,2,...,k-2,k-1,k,2k,2k+1,2k+2,...,n-1,n$$这也表明严格第$k$小值就是$n-2+k$

# G Instability [zyh&ghc]

考虑反面，求出不包含任何一个团或独立集的点集个数，直接搜索即可，观察到如果点数$\geq 6$那么一定包含一个大小为$3$的团或独立集，因此搜索深度不超过$5$

# H Sequence I [zyh]

将$a$按照$mod\ p$拆成若干个串，分别做一次$KMP$

# I Sequence II [zyh&hwq]

每次查询二分答案$t$，求出$[l,t]$中数的种类数，记$pre_i$表示$a_i$上一次的出现位置，就是查区间$[l,t]$中满足$pre_i<l$的$i$的个数，主席树维护即可，复杂度是$O(nlogn+qlog^2n)$

如果考虑离线做法，从大到小枚举$l$，用线段树对每个$r$维护$[l,r]$中数的种类数，查询时在线段树上二分，那么支持在线只需要简单可持久化一下，复杂度是$O((n+q)logn)$

# J Ugly Problem [zyh&hwq&ghc]

每次用不超过$s$的最大回文数去减$s$，这样$s$的位数会减半，需要实现一个高精度减法

# K Binary Indexed Tree [zyh&hwq]

记$cnt_i$表示$i$的二进制表达式中$1$的个数，$lcp(i,j)$表示$i$和$j$的二进制表示的最长公共前缀（如果长度不同，右对齐之后在左边补$0$），那么就是求$$\sum_{r=1}^{n}\sum_{l=0}^{r-1}(cnt_l+cnt_r-2cnt_{lcp(l,r)})=\frac{1}{2}\sum_{l=0}^{n}\sum_{r=0}^{n}(cnt_l+cnt_r-2cnt_{lcp(l,r)})$$考虑逐位计算贡献，对于第$i$位，枚举两个数$l$和$r$，如果前$i$位都相同那么没有贡献，否则贡献是$l$和$r$在第$i$位的数之和，于是$dp[i][0/1][0/1][0/1]$表示已经考虑了最高$i$位，现在$l$和$r$的前缀是否相等以及各自是否等于$n$的前缀的方案数，计算贡献时要补上后缀，观察到$l$和$r$的后缀是相互独立的，只需考虑前缀是否等于$n$的前缀