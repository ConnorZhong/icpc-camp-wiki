<pre><span style="font-family:Menlo,Consolas,Monospace; font-size:15px;">
┌─────────────────────────────────────────────────────────────────────┐
│       2016-07-05 15:00-20:00 · Fudan U Wood Cube · MZH/TDJ/GX       │
├────────┬────────────────────────────────────────────────────────────┤
│F [1:00]│    ₀            ooo··   ·      oo                o₁oo··!·  x
├────────┼════════════────────────════════════────────────════════════┤
│A [0:05]│ ₀ ₁ō                                                       │
│C [0:26]│   ₀    ·o·₁!·ō  ₂                                          │
│J [1:06]│ {o₀·         oo₁}        oo·₂····     oo·o‼︎ ·              x {MZH,GX}
│D [0:09]│                ₀          ₁                ₂             oox
├────────┼════════════────────────════════════────────────════════════┤
│B [0:49]│      ₀         ₁   ₂            ··oo·o··  ·· ···ō          │
├────────┼════════════────────────════════════────────────════════════┤
│+ [3:30]│  ooo   ·o·o··oo·ooo··   ·oo····oo·oo·ooo·o·······oooo··o·oo│
└────────┴────────────────────────────────────────────────────────────┘
┌────────┬────────────────────────────────────────────────────────────┐
│H [-:--]│               ₀                                          ₁ │
│G [-:--]│                    ₀               ₁      ₂                │
│I₁[-:--]│                             ₀                              │
│E₂[-:--]│                                              ₀             │
└────────┴────────────────────────────────────────────────────────────┘
</span></pre><br>

![](http://usericon.nimg.jp/usericon/226/2265545.jpg)

## A. Manhattan [TDJ]

两种情况，当把两个点放在同一个1*N的矩形的短边上时，网格距离最大为N+1；其他情况均为曼哈顿距离，最大$d*\sqrt{2}$；取最大值即可。

## B. Dictionary [GX]
用f[i][j][k]表示i到j之间前面k个字符都相同，然后dp即可，要用两次前缀和优化。

## C. Clique Coloring [TDJ]

考虑对于一个点被多次染色选中的情况，这些点的被选集合( $[0, 2^5)$ )必然不同，而且不存在两个点的被选集合的交超过1次染色，一个方案即可用被染集合不同的点的集合表示( $[0, 2^{32})$ )，记忆搜出所有合法方案（经测不超过100000种），check每个染色的点数个数合法后取最优解。

## D. Dense Amidakuji [TDJ]
画出不删边时的情况后发现就是走斜线+反射…于是模拟时只要找出一条边实际对应的两条斜线并交换一下即可。

## E. Cellular Automaton

## F. Directions [MZH]

特判取四个向量，相对的向量共线的情况。其余情况只需取三个向量。

取三个向量使得相邻两向量间夹角小于$\pi/2$。考虑将答案的一个向量按原点对称，问题变为求两个向量夹角小于$pi/2$，并在两向量间再取一个向量。分治，假设左右各取一个向量，且所取中间向量在左边区间内，右边情况类似。枚举左边向量的位置，则可取的右边向量是单调的。维护取中间向量以及取右边向量的最小值。

## G. Snake

## H. Distance Sum [TDJ]

考虑1~k号点构成的虚树，那么每次加一个点后树核最多移动一条虚树边，于是可以在当前核到新加点的链上二分新树核，而且总距离和的变化值也很好算，（另外接口写成无根树操作会比较方便）。

## I. Substring Pairs

## J. Hyperrectangle [MZH]

$$ans = \sum_{T \subset S}(-1)^{|T|}\max\{0, s - \sum_{x \in T}x\}^d$$
做背包，对每个奇偶性和子集和求有多少个子集。
