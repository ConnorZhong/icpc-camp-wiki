<pre><span style="font-family:Menlo,Consolas,Monospace; font-size:15px;">
┌─────────────────────────────────────────────────────────────────────┐
│       2016-07-19 16:54-21:54 · Fudan U Wood Cube · MZH/TDJ/GX       │
├────────┬────────────────────────────────────────────────────────────┤
│H [0:14]│   ₀   ₁ooō                                                 │
│F₁[1:01]│                                  ·o·₀   ·ooooooo·· ??·   ? x
├────────┼════════════────────────════════════────────────════════════┤
│A [0:30]│  o₀o···ō₁  ₂                                               │
│B [0:09]│                   ₀        !·! ō       ₂                   │
│J [1:08]│      ₀     {·o     o₁o·!·!o!} ₂    ooooo···ō               │ {MZH}
│D₅[0:44]│                             {·o!}      ₀         oo  ooo!⁉ō│ {MZH}
├────────┼════════════────────────════════════────────────════════════┤
│K [0:30]│    ₀     ·₁o?oooō                                          │
│C [0:11]│      ₀        ₁ oo·ō                                       │
├────────┼════════════────────────════════════────────────════════════┤
│+ [4:19]│  ooo···ooooo·ooooo·ooo····oo··o· ·oooooo·ooooooo·oo··oooo··│
└────────┴────────────────────────────────────────────────────────────┘
┌────────┬────────────────────────────────────────────────────────────┐
│I₅[-:--]│                                                  ₀         │
│E₂[-:--]│                                                      ₀     │
│G₀[-:--]│                                                            │
└────────┴────────────────────────────────────────────────────────────┘
</span></pre><br>

## A. Devil's Hell deLivery [TDJ]

签到题，枚举+背包，数据范围很小。

## B. Domino on Torus [TDJ]

被下午多校的多米诺题误导…仔细想想其实只有两种情况…分类讨论即可，答案最多8。

## C. Small Numbers Search [GX]

随机序列插入排序即可。

## D. Maze in a Forest [TDJ]

用已知的墙跑一个BFS，选一个离终点最近的相邻格，距离相同就选离对角线近的格子。

## E. Grammar

## F. Yet another point searching problem [MZH]

二分答案，用随机增量法求圆交。会TLE。

## G. Nanobugs [GX]

首先可以通过1 n ^ 1 n-1这个操作使得n减2，a减1，b减1，又因为a=1，b=2的情况非常显然，所以只需要考虑  
1.a=2， b=1  
2.a=2， b=3  
当n为偶数的时候直接一半等于一半即可，奇数的时候可以利用个数限制来锁死。首先我们随便拿掉一个足够长偶数长度的段让它里面有偶数个1，然后剩下足够的奇数长度中分成两部分假设其中有相同个数的1，然后不断从前面随便拿一点过来加上少的那段给出和另一段相等的推断，正阳重复3次，因为拿出的一段至少有1才能让b=3时成立，如果成立3次说明1至少有4个，所以不可能有3个1。  
这题可以扩展为a，b奇偶性不同甚至更广泛的范围。

## H. Non-Shortest Path [MZH]

DFS找出两条长度不同的路径。

## I. Composition of polynomials

## J. Potential [TDJ]

设$P = w'_{uv}$，那么找出一个P的个数（正向+1,反向-1）不为0的(无向边)环即可算出P，然后再带入判是否矛盾，均用dfs实现即可。

## K. What the Flex? [GX]

枚举1\~100000内所有的质因数，剩下只能是1\~2个大质数1次方乘积或者一个大质数的平方，两种情况都可以方便的处理掉。