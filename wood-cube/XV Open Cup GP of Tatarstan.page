<pre><span style="font-family:Menlo,Consolas,Monospace; font-size:15px;">
┌─────────────────────────────────────────────────────────────────────┐
│       2016-07-06 15:55-20:55 · Fudan U Wood Cube · MZH/TDJ/GX       │
├────────┬────────────────────────────────────────────────────────────┤
│L [0:13]│o·? ₁ō₂                                                     │
│B [0:05]│ ₀₁₂oō                                                      │
│I [0:29]│         ₀    oooo·₁  ··ō₂                                  │
│E [1:19]│           ₀                   oo₁·oooo!   ·!  !o·₂·oo‼!o!! x
├────────┼════════════────────────════════════────────────════════════┤
│G [0:07]│ ₀ oō₂                                                      │
│D [1:04]│          {₀·o·   ·     ooo·oo}      ₁ ooooo·oō          ₂  │ {错误做法}
├────────┼════════════────────────════════════────────────════════════┤
│H [0:19]│   ₀   o·‼!ō  ₂                                             │
│F [0:31]│           ₀··    oooo·· ō ₁             ₂                  │
│K [0:15]│                             ₀o!    ·!!  !ō           ₁     │
├────────┼════════════────────────════════════────────────════════════┤
│+ [4:17]│o·oooo o···ooooooooooo··ooo·oooooo·ooooooooo·o··o· ·oo··oo· │
└────────┴────────────────────────────────────────────────────────────┘
┌────────┬────────────────────────────────────────────────────────────┐
│J [-:--]│  ₀              ₁         ₂                                │
│C₇[-:--]│                              ₀                             │
│A₁[-:--]│                                                   ₀        │
└────────┴────────────────────────────────────────────────────────────┘
</span></pre>
<br>

A. Survival Route
-----------------

B. Dispersed Parentheses \[MZH\]
--------------------------------

设$f(i, j)$表示长度为$i$，最深处深度不大于$j$的方案数，可以递推求出，答案为$f(n, m) - f(n, m - 1)$。

C. Chocolate Triangles
----------------------

D. LWDB \[TDJ\]
---------------

树分治中心点用栈维护“同心圆”，查询时在栈里二分。

E. Pea-City \[MZH\]
-------------------

最优解上必有凸包的一条边，旋转卡壳，在求具体顶点前用int运算。

F. Beautiful Sums \[GX\]
------------------------

首先一串连续自然数的和可以表示成$(a_1+a_1+n-1)\times n/2$，可以发现前两个数奇偶性不同，这样的话假设最后答案是$ans$，考虑$ans\times 2$分解成一个奇数和一个偶数的乘积就是一个分解成一串自然数的和的方案，因为$a_1+a_1+n-1>n$所以大数一定作为$a_1+a_1+n-1$，在考虑如果$ans$能被$2$整除，那么$ans\times 2=(ans/2)\times 4$,也就是说$4$会作为整体分给两个部分，这样$ans/2$和$ans$答案相同但更小，所以$ans$一定是奇数。$ans$分成两个数乘积的方案数就是beautiful
index，也就是我们要找一个奇数，使得他的约数个数恰好等于题目读入的$n$。考虑$dp[i][j]$表示使用前$i$个奇质数，能拼出约数有$j$个的数的最小值，那么$dp[i][j]=\min\{dp[i-1][k]\times prime[i]^{j/k-1}\}$。注意到$j,k$都是$n$的约数所以效率只有$O(n\log{n})$，另外由于这个数比较大所以要用对数维护才能比较大小。

G. Nano-Alarm Clocks \[TDJ\]
----------------------------

签到题。

H. Lunch \[GX\]
---------------

画图后可以发现，从s到t尽量跳跃的方案不多，很容易找到最优方案是从s一直跳到1或2，走一下，返回到s+1，然后跳走跳-跳走跳-跳走跳地走到f-1，然后跳到n或n+1,走一下再跳回到f，注意s=1和f=n的特判断。另外也可以用类似插头的dp解决。

I. Accounting Numeral System \[MZH\]
------------------------------------

从大向小贪心，每次二分取能取的最大的。二分中算组合数时先用double和对数判是否超出范围，再通过组合数模两个质数的值做CRT得到答案。

J. Ceizenpok's Formula \[MZH\]
------------------------------

先质因数分解求完后再CRT回来，求$\binom{n}{m} \mod p^q$。

对于$n!$, $m!$,
$(n - m)!$，分别求出不含因子$p$的乘积和因子$p$的次数，再通过扩展GCD求逆元算出合并后的答案。

K. Dividing an Orange \[GX\]
----------------------------

海盗题，逆推即可，注意题目隐含条件是比较期望，另外注意一个人如果必死他会无条件支持前面的人。

L. The Pool For Lucky Ones \[MZH\]
----------------------------------

枚举移动者的位置。$O(n\log n)$用multiset维护的做法会TLE。注意到移动后的最大值只可能在原最大值$\pm1$的范围内可以$O(n)$的维护。
