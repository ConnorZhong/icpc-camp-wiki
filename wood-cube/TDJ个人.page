2016-05
=======

100685D
-------

674G
----

经典面试题加强版

核心问题：有$k-1$种颜色在数组中出现的比例超过$\frac{1}{k}$，求这些颜色。

题解做法理解：不断删除一组$k$个互不相同的颜色，那么当一种颜色超过$\frac{1}{k}$时必然不会被删完，于是最后剩下的$k-1$种颜色就是答案，具体实现可以参照$k=2$的擂台赛维护。

2016-04
=======

HDU4338
-------

点双连通分量建森林，用LCA查询路径点权和即可。

607C
----

随机打表找性质，然后用字符串hash、KMP、扩展KMP都能做。

524F
----

枚举循环串的起始点，构造长度最短的方案我们可以贪心往前面补`'('`，往后面补`')'`，同时我们发现这也是字典序最小的方案，于是用SA（或二分hash）对循环串排序之后便可找出最优方案中字典序最小的。

587F
----

按官方题解：首先建好AC自动机，离线查询，对于查询{l, r, x},
若$length(s_x) \geq \sqrt{n}$，则将所有x相同的查询放一起做一遍，这样的x不超过$\sqrt{n}$个，做法是$O(n)$预处理好每个节点对$s_x$的贡献（即将自动机上$s_x$的每个节点+1后在fail树上做一遍子树和），之后按顺序插入$s_{1..n}$并离线查询；另一种情况$length(s_x) < \sqrt{n}$，则直接按顺序插入$s_{1..n}$（修改总节点数$O(n)$）（单点修改），并离线查询（查询总遍历的节点个数$O(n*\sqrt{n})$）（fail树前缀查询），然后我们用块状数组来使总复杂度平衡在$O(n*\sqrt{n})$。

547E
----

SA&LCP+二分区间+可持久化线段树或离线BIT查询，注意合并字符串时的分隔符应互不相同。

出题人的做法是：用AC自动机的fail指针建树，然后每个询问相当于求一棵子树中值在\[l,r\]中的标记个数，按值从小到大离线查询即可。

504E
----

按官方题解：链剖+SA求LCP，$O(N*log{N})$。

因为做LCP的时候会出现反向字符串，所以需要在字符串后加一个反向串再做SA。

504D
----

Java BitSet与输出优化：

    StringBuilder t = new StringBuilder();
    t.append(s.cardinality());
    for (int j = s.nextSetBit(0); j >= 0; j = s.nextSetBit(j + 1))
        t.append(" " + j);
    System.out.println(t);
