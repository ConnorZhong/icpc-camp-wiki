A. A water problem \[braveTester\]
==================================

B. Zhu and 772002 \[Skywalkert\]
================================

C. Magic boy Bi Luo with his excited tree \[braveTester\]
=========================================================

D. Danganronpa \[Constroy\]
===========================

E. Rubik's Cube
===============

F. Robots
=========

G. Mountain
===========

H. Special Tetrahedron \[Constroy\]
===================================

I. This world need more Zhu
===========================

J. Alice and Bob \[Constroy\]
=============================

题意：给一棵带点权的有根树，每次询问在一棵子树中进行如下博弈的结果：Alice
先选一个点，Bob 在此局面下再选另一个点。Alice
要使两数的异或值最大，Bob要使其最小。 题解：之前只会在 01
字典树中查询与给定值异或值最小。而字典树可以维护树中这个博弈的结果。每个节点可以维护这个节点以下的数位的博弈答案。
一个节点的 size 小于 2，那么不能进行博弈，答案为 -1。 Alice
在一个非叶子节点走左儿子，如果左儿子 size 为 1，那么 Bob
只能走右儿子，将左儿子的数拿到右边查询。否则，Bob
肯定也走左儿子，直接用左儿子的答案更新当前点。 Alice
走右儿子的情况类似。每次更新的复杂度至多为两次次查询 O(log(w))。
原树上一个节点的字典树是它的儿子的字典树的并，再加入自己。字典树与线段树一样，总的合并复杂度是
O(nlogn)。

K. Lweb and String \[Constroy\]
===============================
