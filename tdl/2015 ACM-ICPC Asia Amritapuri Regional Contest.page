A. git \[Constroy\]
===================

B. Circles and Squares \[Skywalkert\]
=====================================

考虑每个方格会被圆覆盖多少面积，以及这个方格会被统计多少次即可。

对于每个方格，只需要考虑它四个顶点是否有单位圆，如果只有一个顶点有圆，则覆盖面积是
1/4
圆周，如果存在两个对角线上的圆，则覆盖面积是整个方格，还有一种情况是两个相邻顶点有圆，可以大概抠抠扇形算算面积。

然后没了。

C. Jump on Buildings \[Skywalkert\]
===================================

倒着跳更直观一点，令 $f(i, j)$ 表示最后跳到的两个房子分别是 $i, j$
时最多已经跳了多少个房子，如果端点高度相同则认为跳了 0
次，否则通过高度大小可以知道最后一个是哪个房子，所以可以直接约定
$i \leq j$。

比如说 $H_i < H_j$ ，那么有
$f(i, j) = \max_{i \leq k < j, H_i > H_k} {f(i, k)} + 1$
，看上去需要一个 $\log$ 级别的数据结构维护最大值，实际上只需要维护
$\max_{i \leq k, H_i > H_k}{f(i, k)}$ 即可，因为满足 $H_i > H_k$
则一定有 $k < j$ 。这样就可以 $O(n^2)$ 了。

两个方向都维护一下就可以了。

D. Magical Matrix
=================

E. Cat and Mouse \[Constroy\]
=============================

F. Similar Strings \[Constroy\]
===============================

G. Chota Mouse and his Birthday Cake \[Skywalkert\]
===================================================

就模拟一下啊。

H. Longest Palindrome \[Constroy\]
==================================

I. Coins
========

J. Coprimes
===========
