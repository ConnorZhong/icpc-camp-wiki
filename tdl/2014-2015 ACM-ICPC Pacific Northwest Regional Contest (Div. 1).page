A. Runes \[braveTester\]
========================

B. Alchemy \[braveTester\]
==========================

C. Containment \[Constroy\]
===========================

D. Function \[Constroy\]
========================

E. Hill Number \[Constroy\]
===========================

F. Knights \[Constroy\]
=======================

G. Number Game \[Skywalkert\]
=============================

考虑那些不影响 1
的可移除的点，视作非关键点，可以作为博弈过程的跳板改变局面的胜负，如果当前先手的最优决策要移除非关键点，那么当前后手的最优决策也必定会尝试移除非关键点，所以决策只和非关键点个数的奇偶性有关。

游戏只有一个，所以只用考虑状态是否必胜/必败即可。令 $f(L, R, m)$ 表示
$[L, R]$ 中的点还未被解锁，外部的非关键点个数模 2 是 $m$
的状态是否必胜，暴力枚举决策是移除区间内的极高点还是区间外的非关键点即可，时间复杂度
$O(n^3)$ 。

------------------------------------------------------------------------

[标程](http://paste.ubuntu.com/23456730)使用了分类讨论做到了线性复杂度。

H. Pushups \[Constroy\]
=======================

I. Salary Inequity \[Skywalkert\]
=================================

随便用个数据结构维护一下子树加和子树极差即可。

J. Stamp Stamp \[Constroy\]
===========================

K. Towers \[Constroy\]
======================

L. Wormhole \[Skywalkert\]
==========================

建个图 floyd 一下就好了。
