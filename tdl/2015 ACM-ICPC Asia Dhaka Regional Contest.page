A. Automatic Cheater Detection \[Skywalkert\]
=============================================

本质不同的情况只有$10 \times 2 \times 2$种，统计下然后枚举计算答案即可。

B. Counting Weekend Days \[Skywalkert\]
=======================================

模拟那个月的每一天即可。

C. Toll Management IV \[Skywalkert\]
====================================

对于非树边，它想进入生成树则需要破掉一个环上的最大值，它最大能减少的数量就是与树上路径最大值的差值。

对于树边，它想离开生成树则需要是某个环的最大值，它最大能增加的数量就是这个环上原来最大值（非树边）与它权值的差值的最小值。

第一种情况只需要倍增预处理每个点到某些祖先的路径最大值，每次求 lca
的过程中计算最值即可。

第二种情况稍复杂，将非树边按照权值升序排序后，依次枚举非树边，它能更新到的树边需要是之前没更新过的，所以用并查集维护每个点往根走的最深没被更新的边所对应的点是谁，暴力往上走到
lca 即可， lca 已在考虑第一种情况的时候求出。

时间复杂度$O(m \log n)$。

D. Owllen \[Skywalkert\]
========================

只选一种字符组成$T$是不会使解变差的，枚举选哪个字符即可。

E. Sum of MSLCM \[Skywalkert\]
==============================

对于$lcm = N$的情况，选取的数一定是$N$的约数，为保证和最大显然每个约数都是要选的。

所以答案就是$2$到$N$的约数之和，等价于$(\sum_{i = 1}^{N}{i\left\lfloor\frac{N}{i}\right\rfloor}) - 1$，$O(\sqrt{N})$算一下即可。

F. Unique Party \[Skywalkert\]
==============================

想好久只会暴力做法。

对于每个询问，将不小于$h$的位置改为 1 ，小于$h$的位置改为 -1
，所求即点数最多的一个元素之和非负的矩形区域。

枚举矩形的上下边界转化为一维序列问题，设$S_i$表示序列前$i$项和，问题即选取满足$0 \leq i < j \leq C$且$S_i \leq S_j$的$(i, j)$使得$j - i$最大。

由于$|S_i - S_j| \leq R \cdot C$，于是可以用两次基数排序做到$O(\sqrt{RC})$将下标关于前缀和排序，然后就是枚举$j$，选一个最小的$i$了。

单组测试数据的复杂度是$O(Q(RC)^{1.5})$，然后剪个枝（剪枝1）就卡过去了。

剪枝1：按照矩形高度降序枚举，如果答案已经不小于可能得到的最大值，则可以结束枚举。

剪枝2：如果序列全为负数，则跳过排序。（如果剪枝1效果不大，那么序列很容易是全负，跳过可以节省内部
5/6 的枚举）

------------------------------------------------------------------------

优雅做法 \[constroy\]

考虑一维情况，求和大于等于 0 的最长区间长度。先求前缀和
$S_i$，则要求的是 $\max \limits_{S_r - S_l \geq 0}\{r - l\}$。

对于一个左端点 l，它对应 r 集合的 $S_r$ 关于 r 递减。

对于一个右端点 r，它对应 l 集合的 $S_l$ 关于 l 递减。

那么只需要 $O(n)$ 预处理出左右端点的有序集合，就可以在两个集合上用 tow
pointer 求最长合法区间。一维问题总时间复杂度 $O(n)$。

G. Honey King \[Skywalkert\]
============================

六边形坐标系（正六边形）类似于欧式坐标系（圆）的情况，可以二分答案的半径$r$，转化为每个点向外扩张$r$得到的正六边形求交集，交集里存在点则表示半径可行。

六边形坐标系比较特殊，可以将每个六边形化作六个半平面的交集，是关于$x, y, x + y$的不等式，分别求交集之后，如果存在$(x, y)$满足关于$x, y$的不等式，再去用最值更新一下关于$x + y$的不等式，就可以知道交集里有没有点了。

时间复杂度$O(N \log r)$。

H. Design New Capital \[Skywalkert\]
====================================

由于$xy \neq 0$，所以只用考虑坐标的正负性，设四个象限里分别选$A, B, C, D$个点，则要满足$A + B = C + D, A + D = B + C$，即$A = C, B = D$。

设$f_i$表示从一、三象限里分别选$i$个点的方案数，$g_i$表示从二、四象限里分别选$i$个点的方案数，则选$2k$个点的方案数是$\sum_{i = 0}^{k}{f_i \cdot g_{k - i}}$。

模数刚好可以 NTT 。

I. Numbered Cards \[Skywalkert\]
================================

由于选中的集合里任意两个数不含相同的数位，那么每个数位最多出现在一个数字中。

预处理$f_{i, S}$表示长度为$i$且包含的数位集合是$S$且不含前导0的十进制数字个数，$g_{i, S}$表示长度为$i$且包含的数位集合是$S$且可含前导0的十进制数字个数，那么可以计算出$h_S$表示不超过$N$且包含的数位集合是$S$的正整数个数，预处理和每次询问的处理都是$O(10 \cdot 2^{10} \cdot \log N)$。

然后暴力枚举数字集合的划分方案即可，时间复杂度是$O(Bell(11))$。

J. The Hypnotic Spirals \[Constroy\] \[Skywalkert\]
===================================================

常规的极坐标面积积分，但是有许多trick，~~再加上队友强化后的题意~~，难以通过。\
螺旋线方程 $r = a\theta$， 面积积分
$\int_{\alpha}^{\beta}\frac{1}{2} (r_2^2 - r_1^2)d\theta$\
在最内层的 $r_1$
是不存在的，跨过极轴的区域要分成两部分计算，记得去重，输出保留4位小数。

Summary
=======

**Constroy:**

**Skywalkert:**
这场区域赛的题目还是比较~~水~~正常的，~~不该坑队长去做积分题~~。只是写代码的时候比较容易出现些智障错误，需要经常练习。手速不太够。看题速度有待加强。
