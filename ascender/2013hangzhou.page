---
title: Regionals 2013 :: Asia - Hangzhou
---

# A. Lights Against Dudely [zmy]
注意题目的几个特殊要求，一个是旋转的灯只能使用一次，第二个是灯光可以照墙外。然后随便搞搞就过了。

# B. Stealing Harry Potter's Precious [zmy]
bfs下

# C. Zhuge Liang's Password [zmy]
模拟下

# D. Problem of Apollonius [wbr]
利用圆的反演的性质来做，具体来说就是圆外的圆反演过后还是一个圆，圆外的直线反演过后会变成过反演中心的一个圆，显然这里P点就是反演中心。把两个圆分别以P为中心，任意半径的一个圆做反演，求出的公切线再反演回去就是所求的圆。

# E. Random Number Generator

# F. Infinite Go [zmy]
模拟下棋，使用并查集来维护联通块。注意的是棋子的顺序。下计算下的棋的气数，然后减周围气数，并且看能否提掉对方的棋子，再合并联通块，再判断当前棋子所在的联通块是否已经没有气数了。在提掉对方联通块时，使用bfs删除旧的影响。

# G. Ants [zmy]
建树dfs。答案为两个节点的前缀异或和的异或值。建立优先队列，求前k大的异或。用一个数字表示现在用到每个节点为起点的第几大答案。不停往堆里扔即可。

# H. Rabbit Kingdom [zmy]
先搞出每个数字能够互质的最大区间，然后将询问离线化按左端点排序，用树状数组维护答案。

# I. Gems Fight! [zmy]
状压下当前已使用的袋子，然后记忆化搜索即可。

# J. Tower Defense [wbr]
分为三个步骤\n
1、两个heavy tower在同一行\n
2、两个heavy tower在同一列\n
3、一个tower单独占据一行一列\n
枚举三种情况的数量，使用排列组合公式计算，时间复杂度O(T*200^3)但是\n
由于诸多限制条件的原因，常数大约在1/24左右，这样就可以在2s时限内通过

# K. Candy Factory [jds]
最小费用流。
(1)加入超级源点s(0)，s 连向每颗糖果 i，连边 s -> i，容量为1，费用为0；
(2)加入超级汇点t(2 * N + M + 1)，每台机器 i 连向 t，连边 i + 2 * N -> t，容量为1，费用为0；每颗糖果 j 连向 t，连边 N + j -> t，容量为1，费用为0；
(3)对于第二条规则，对于糖果 i、机器 j (C[i][j] < t[i])，如果 C[i][j] > s[i]，那么 cost = D[i][j] + K * (C[i][j] - st[i])，否则 cost = D[i][j]，连边 i -> 2 * N + j，容量为1，费用为cost；
(4)对于第三条规则，对于糖果 i、糖果 j (t[i] + E[i][j] < t[j])，如果 t[i] + E[i][j] > s[j]，那么 cost = F[i][j] + K * (t[i] + E[i][j] - t[j])，否则 cost = F[i][j]，连边 j -> N + i，容量为1，费用为cost。

# 总结反思 

**zmy**
写A题时浪费了很多时间，主要是在传达题意的时候有两个重要的细节没有说到。所幸的是，改动不大，但是仍然耽误了一定的时间。其次写F题的时候也是没有考虑清操作处理的顺序，导致WA。在团队配合方面，每个人还没有发挥自己的全部作用，在后面的训练中应该考虑如何让每个人的贡献最大化，也应为此让每个人做相应的针对性训练。

**jds**
读题时漏掉了一些细节，浪费了不少时间，下次必须得仔细一点。。。

**wbr**
D题在训练的时候并不知道反演的做法，J题读错了题把题想麻烦了，下次需要认真一点。

