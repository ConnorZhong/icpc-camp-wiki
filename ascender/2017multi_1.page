---
title: 2017 Multi-University Training Contest - Team 1
---

# A. Add More Zero [zmy]
m*log(2)/log(10)。zz的我第一次取整时+0.5 .....

# B. Balala Power! [jds]
统计每种字母每位出现的次数，从而分配数值，注意不能有前导零并且单独一个0是允许的。

# C. Colorful Tree [jds]
对于每种颜色，算出不包含这种颜色的路径总数，即算出每一块由某种颜色分割出的点数，最后用总的路径数乘上总颜色数减去这些不包含某种颜色的路径数，两遍dfs就可以了。

# D. Division Game

# E. Expectation Division

# F. Function [zmy]
对b求循环节，然后再对a求，统计答案。a的一个长度为6的循环节不仅可以映射为一个b中长度为6的，还可以是长度为2，长度为3，长度为1的。这部分可以在统计完b之后预处理下。

# G. Gear Up

# H. Hints of sd0061

# I. I Curse Myself

# J. Journey with Knapsack

# K. KazaQ's Socks [zmy]
找规律

# L. Limited Permutation [zmy]
快速读板子有问题GG。。排序后建树，不断乘组合数即为答案。不过需要注意答案为0的各种情况，比如区间相交、儿子数大于2、子树节点个数不等于区间长度、分裂的两个区间相邻

# 总结反思 

**zmy**
dirty率一直很高。。。写题时应更为谨慎一些。此外，在最后两个小时中，几乎没有贡献，而且当时测L题时基本已经确定逻辑无误，应该确信自己的思路正确。而不是一味地想办法去构造特殊数据。事实证明，确实是快速读的板子有问题，这部分需要提升。其次，最后两个小时三个人都没有通过题，这点应该在后面的训练中极力避免。虽然一起怼一道题成功率更高，但是对于当时的情况来说，无法准确预估此题所需要的时间，应该至少分出一人去开新题，而不是大家一起在这个题上耗时间。另外就是提高辅助的效率，当手上有题未通过时，如果不能在很短时间内发现问题并通过，立即去找未在写题的队友复查，不要等一二十分钟之后再去，这样可能会耽误一定的时间，两个的review效率远大于一个人的。必要时可以采取写代码的队员向另一队员一行一行解释代码，一般情况下，这样就能发现所有的bug。

**jds**
写了两道题，B题比较简单，但还是粗心wa了2发，C题主要偏思考，1A了。没做出来的题中还有不了解的算法，可见知识点还有不少盲点，今后的训练中见到新的知识点就一定要弄懂，补上漏洞。

**wbr**
并没有写题，主要的精力花费在帮队友挑BUG上。L题构造了多组数据除掉了几个BUG，但还是没有认识到板子错误这一点。得知本场比赛有几道鎕题，要补一下。