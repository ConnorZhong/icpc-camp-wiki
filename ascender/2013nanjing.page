---
title: Regionals 2013 :: Asia - Nanjing
---

# A. GPA [zmy]

模拟

# B. Poor Warehouse Keeper [jds]

计算在每次按上按钮时下按钮的贡献即可

# C. Campus Design [zmy]

轮廓线dp

# D. Shoot

# E. Circular Lamps

# F. Lunch Time [jds]
费用流，不断更新答案

# G. Drunk [zmy]

积分搞一搞，主要抓住递推关系

# H. Cirnoâs Present [zmy]
由于三人等价，我们只需考虑其中一人A。树形dp。$dp[i][j][k]$表示在第$i$个节点的时候，奇偶之差为$j$，状态为$k$的方案数。状态$0$表示当前节点分给其他人，状态$1$表示当前节点分给A且现在联通块的大小为奇数，状态$2$表示当前节点分给A且现在联通块的大小为偶数。

# I. Wall Painting [zmy]

拆位，每位分别dp

# J. Ball [zmy]

找规律

# K. D Tree [zmy]

裸树分治



# 总结反思 

**zmy**

K题卡了两个小时，一开始没有想清楚，实际处理的时候有很大的问题。另外就是很久没写树分治了，对模板不够熟悉，导致了很多问题的产生。鄙队现阶段最需要解决的大概是如何能快速过题而不被卡题。下面提出几个解决方法，具体需要在实践中尝试。1、无论是多么简单的题，也要和队友交流一下做法，我们不需要为拿一血抢那两三分钟。用两三分钟和队友交流算法虽然会相对多花一些时间，但是能在code之前发现一些实现上的细节问题。此外对于大多数解法有问题的情况，也能及时发现，避免浪费更多的时间。2、卡题超过15分钟一定要找队友来帮忙debug。自己debug容易陷入低效率状态。3、对于自己不够熟悉（不能闭着眼界写）的算法，在纸上推演好自己code的逻辑，再去动手code。卡题不仅浪费写题人和其他帮忙debug的人多时间，对于全队的比赛状态也有着极大的影响，拖慢想题的速度。暂将其列为目前团队训练时最优先解决的问题。

**jds**

今天写完B题就帮助zmy做k题，最后犹豫了半天才写了个对拍才找到了错误。最近的主代码手都是zmy，一旦卡题了我要能快速地帮忙debug，为比赛节约更多的时间。

**wbr**

今天起得比较晚，到了赛场队友已经过掉几道签到题了。在队友写树分治的时候独自开了一道数学题，结果姿势不过关，最后和队友一起一顿操作终于求了出来。