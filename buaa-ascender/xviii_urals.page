A. Nutella's Life \[zmy\]
=========================

没有 $a_i \leq a_j$
就是一个经典的斜率优化问题。为了解决这个限制，我们可以将 $a_i$
离散化，然后用树状数组维护凸壳

B. Oleg and Data Science \[zmy\]
================================

分情况讨论

-   $r < q$ 答案为 infinity
-   $l/q == r/q$ ，答案为 $l-l%q$ 的约数个数
-   $l/q != r/q$ ，答案为 $q$ 的约数个数

C. Christmas Garland \[zmy\]
============================

首先计算出每个颜色的段数。之后考虑相邻导致段数减少的情况。我们按照颜色的种类作为点来建图，如果两个颜色存在相邻段，则两个点之间连边，边权为相邻个数。易知该图边数为
$n-1$。对于每个操作，我们除了要对答案加上或减少该颜色的段数，还要计算与整个颜色相邻的颜色对答案的影响。这里按照度数大小根号分块即可。

D. Anna and Lucky Tickets \[zmy\]
=================================

首先可以发现，所有的回文串都满足第二种情况。因此实际上我们只要计算出有多少回文串既符合第一种情况又符合第二种情况即可。我们分类讨论：

-   $n$ 为偶数时答案为 $10^{\frac{n}{2}}$
-   $n$ 为奇数时，我们枚举中间数字，计算对于 $n/2$
    中奇数位之和减偶数位之和满足一个等式的方案数。这里有两种做法，第一种是分别计算出奇数和、偶数和等于每个值的方案数。这里可以用
    FFT 实现，我们可以发现答案是 $(1+x^1+x^2+...+x^9)^d$ ，这里可以先取
    ln 再求 exp。第二种方法是考虑方程：$x_1+x_2+x_3+x_4+...+x_d=m$
    ，奇数位的范围是 $[0,9]$ ，偶数位的范围是 $[-9,0]$
    我们对偶数每个位置加 $9$，方程则变为
    $x_1+x_2+x_3+x_4+...+x_d=m+9*d/2$，且每个变量的范围都是
    $[0,9]$。这个的方案数我们可以用二项式反演算出。

E. Octopus
==========

F. Secret Permutation \[zmy\]
=============================

首先找出 $0$ 的位置，通过迭代 $zero=query(zero,i,zero)$ 即可。之后找 $1$
的位置。我们把除 $0$
的位置以外的其他所有位置放到一个序列中。每次随机从中抽取两个数
$x$,$y$,计算 $res=query(x,y,i)$ 。如果 $res!=x$ 那么 $p(y)$ 一定不为
$1$。同理如果 $res!=y$ 那么 $p(x)$ 一定不为
$1$。重复这步直到集合中只剩下一个数，即是 $1$ 的位置。之后我们迭代
$last=query(last,one,zero)$ 来得到从 $2$ 开始所有位置的值。

G. Polygon Rotation
===================

H. Mikhail's Problem
====================

I. Rat-O-Matic
==============

J. Readability
==============

K. Robotobor \[jds\]
====================

首先计算每个点对是否能用一个回文串走到。这里我们使用 bfs
来进行遍历。我们发现我们不需要直到两个点之间具体是怎么遍历的，所以一个有用的回文串可以被定义成一个点对的形式。这样我们对于每个点对向四个方向扩展即可。之后就跑一遍
dijkstra 求出最短路即可。
