A. Alex Origami Squares \[zmy\]
===============================

三种情况模拟下。

B. Black and White
==================

C. Concatenation
================

D. Distribution in Metagonia \[zmy\]
====================================

贪心，每次根据当前值对 $2$ 取模的结果分一个最大的 $3^x$ 出来。再根据对
$3$ 取模的结果分一个最大的 $2^y$ 次方出来。然后提出公因数 $6$ ，迭代计算

E. Easy Arithmetic \[zmy\]
==========================

贪心

F. Fygon \[zmy\]
================

首先能想到，把 $n$
代入不同的值，然后计算出相应的答案，利用高斯消元获得对应的系数。主要麻烦的在于模拟代码的实现。在
python 中可以利用 `exec` 函数方便地实现这一功能。

G. Graph \[zmy\]
================

构造。首先我们所需要的边数不会超过 $n-1$
。考虑拓扑序的不确定因素，当有多个入度为 $0$
的点时，按照最坏情况会选此时最小的那个数。所以我们的第一个任务是将当前所有此时入度为
$0$ 的点中点数最大的那个点加进去。如果无法完成，我们考虑让剩余入度为 $0$
的点中最小的值最大。具体我们维护两个 set
，分别表示未在之前增加一条边且此时入度为 $0$
的点，和在之前增加过一条边且此时入度为 $0$ 的点。

H. Hash Code Hacker \[zmy\]
===========================

样例输入已经给了一个重要信息，即 $Hs=IT$ ，然后类似二进制那样搞下就行了

I. Insider's Information \[zmy\]
================================

我们从中间开始构造答案。考虑一组限制 $(x,y_i,z_i)$，如果此时排名
$y_i>z_i$ 的个数大于排名 $z_i>y_i$ 的个数，那么我们将 $x_i$
整个序列的左边，即当前排名最高的位置，否则填入最右边。

J. Journey to the "The World's Start" \[jds\]
=============================================

二分答案，单调队列优化 dp

K. Kingdom Trip
===============

L. Lucky Chances
================
