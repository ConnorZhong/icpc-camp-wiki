A. Amsterdam Distance \[wbr\]
=============================

求量角器上只能沿半径和圆弧行走的两点间距离。首先角度方向上的移动一定是在靠近圆心的半圆上进行的，但是这里的移动可能是经过圆心的两条半径，也可能是一段圆弧。分类讨论两种情况就能算出最优答案。

B. Bearly Made It \[\]
======================

C. Collatz Conjecture \[zmy\]
=============================

求序列上有多少不同的区间gcd。胖子好像就乱搞了一下就过了。（还偷偷WA了个样例）

D. Detour \[zmy\]
=================

反向做最短路之后BFS即可。胖子读错题了WA了好几次。

E. Easter Eggs \[zmy\]
======================

二分答案，然后用二分图匹配判断是否存在解即可。

F. Falling Apart \[zmy\]
========================

签到题，咕咕咕。

G. Going Dutch \[zmy\]
======================

首先计算出每个人应该付多少或者还多少，然后状压DP。

具体怎么压和怎么WA的还是要问胖子。

H. Hoarse Horses \[wbr\]
========================

利用欧拉定理，需要统计联通块个数，点数，边数。由于保证了没有三点共线，就变成了判断线段相交的板子题。注意使用long
long。

I. Irrational Division \[zmy\]
==============================

记忆化搜索博弈，naive。

J. Jumping Choreography \[\]
============================

K. King of the Waves \[zmy\]
============================

考虑0号能战胜的所有人，我们只需要判断剩余的人是否“完美压制”了这些人。然后我们能在这些人里发现一些“精英”，我们用还没被用过的人试图去挑战这些“精英”。如此反复递归，如果没有出现被“完美压制”的情况，就可行。

L. Lemonade Trade \[wbr\]
=========================

使用python的Decimal类就水过去了。

M. Manhattan Mornings \[zmy\]
=============================

随便看一下发现就是个最长不下降子序列问题。

总结反思
========

### replay

浪费了很多罚时，最后wbr饿傻了没有通过H，吃完饭一分钟就过了，可以说是很遗憾了。
