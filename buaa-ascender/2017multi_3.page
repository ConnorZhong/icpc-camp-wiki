A. simple counting problem
==========================

B. Kanade's convolution
=======================

C. Kanade's sum \[zmy\]
=======================

搞出每个数左边比它大的k个数，以及右边比它大的k个数，组合下即可。具体找的时候，可以完全$\mathcal{O}(nk)$的，不过我们用了一点set，最后复杂度是$\mathcal{O}(nlogn+nk)$

D. Kanade's trio \[zmy\]
========================

建trie树，枚举$j$。维护每一层，同一节点的儿子左边序列中为$0$的方案乘以右边序列中为$1$的方案，以及相应的左$1$右$0$。

E. RXD and dividing \[zmy\]
===========================

树上扫一遍取min即可

F. RXD and functions \[zmy\]
============================

用二项式定理展开每一项的系数，然后用NTT加速计算

G. RXD and logic gates
======================

H. RXD and math \[wbr\]
=======================

打表找规律发现答案就是n的k次方，注意这里n和k很大会爆LL，所以需要用快速乘。但是事后一想一开始给n取个模就好了，江。

I. RXD and numbers \[zmy\]
==========================

BEST THEOREM模板题

J. RXD, tree and sequence \[zmy\]
=================================

考虑最简单的dp,$dp[n][k]=min\{dp[i][k-1]+dep[lca(a_{i+1},a_{i+2},...,a_{n})]\}$，我们主要需要优化后边求lca的部分。考虑从左往右扫，lca的深度应该越来越大，且都在一条链上，所以我们每次更新lca只需要判断从右往左判断，直到不被更新时break掉即可。

K. RXD's date \[wbr\]
=====================

签到题

总结反思
========

### reply

开场wbr发现最后一题是道水题，上去就切了，结果没有换行PE了一发。之后zmy和jds研究出了03的做法，zmy愉悦地写，结果更新的时候有问题WA了一发。wbr发现了08的规律上去交了一发快速幂也WA了一发。然后zmy改掉了这个03的一个bug，上去交，TLE。觉得是set常数太大了。然后问了下wbr，发现是爆longlong了，给他写了个快速乘，然后就A了。然后zmy和jds决定用链表来优化下03，终于过了。zmy发现05也过了很多人，仔细想了下，是个贪心题，然后1A了。然后面对没题可写的情况。wbr在想06，jds和zmy想04。jds提出了一个想法，zmy理解了下，觉得可做，然后上去写了，不过花了半个小时，1A。然后继续wbr想06，jds搞出了10，zmy觉得可写。写了20分钟左右，zmy卡在细节上了，讨论了几分钟，zmy想明白怎么写了。继续开始码。Wrong
Answer！zmy觉得很不爽，看了下代码，随手改掉了两个初始化不痛不痒的地方。然后继续看哪里的逻辑有问题。jds帮zmy出了几组数据也没什么问题。想了半个小时，zmy觉得实在想不出bug了，准备先交一发，毕竟有那么两处修改。然后竟然A了。这时还剩1个小时。zmy看了看06，觉得是道FFT优化的多点求值+多点插值，然后搞了50分钟打出GG。

**zmy**
整体发挥还行。但是10的问题需要深究下，本来以为是无所谓的修正，但是最终1WA1AC。然后就是04和10写的有点慢，耽误了时间。其次是06这个FFT明明很简单，但是没想出来就很GG，而且思考的方向很奇怪。最后就是09没有好好和队友交流，最后才得知是求欧拉回路方案数，明明之前在bzoj做过类似的题，这个可以很快写出来的，但是由于过得人少就没有仔细看题，队友传达题意的时候也没有好好去想。这点得好好反思改正。其次就是以后要对卷积形式敏感一些。

**jds**
全程都在想题，然后把想法告诉zmy写，不过更加后期一些的题目还是想不出来，需要多练习难题。

**wbr**
签到题没换行PE了一发，快速幂的规律题思考了半天高难度做法，结果从样例中找出了规律。搞了半辈子06没有搞出结果，事后发现方向完全就错了。感觉对于各种数学操作不够敏感，很naive。
