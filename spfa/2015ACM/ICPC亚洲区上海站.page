[Contest
Link](http://acm.hdu.edu.cn/search.php?field=problem&key=2015ACM%2FICPC%D1%C7%D6%DE%C7%F8%C9%CF%BA%A3%D5%BE-%D6%D8%CF%D6%C8%FC%A3%A8%B8%D0%D0%BB%BB%AA%B6%AB%C0%ED%B9%A4%A3%A9&source=1&searchmode=source)

A.
==

B.
==

C. Colorful Tree \[\*Nero\]
===========================

题意：给一棵n(&lt;=1e5)的树，每个节点有颜色，支持m(&lt;=1e5)个操作：(0,u,c)把子树u全都改成颜色c；(1,u)询问子树u的不同颜色数量。

题解：对于两个同颜色的节点，在它们lca及以上部分会算重复，所以维护同色节点的序列，把相邻两个的lca减一减。由操作0的特性容易知道每次操作至多使得不同段数增加1，而每段被cover一次就会被删掉。所以拿个set维护所有的不同段，粗暴for即可。时间复杂度O((n
+ m)logn)。

D. Discover Water Tank \[\*JayYe\]
==================================

题意：
有一个由n-1块隔板隔开的水塘，告诉你所有隔板高度h，你不知道水塘的水的情况。现在有m个命题，每个命题为第x个水塘的(y+0.5)位置是否有水，问命题最多能有多少个同时成立。
n &lt;= 1e5, m &lt;= 2e5, h,y &lt;= 1e9

题解：
由于h,y是1e9的，所以对这些先离散化。对于每个命题都可以处理出它是由哪个区间决定的，把它扔在那个区间里，然后递归搞搞搞，题目不难，但是代码实现起来并不简单，当时比赛时想的是用上了主席树，现在做的时候仔细想想并不需要，反正要想清楚后再写，快速高效的搞出来才行！

E.
==

F.
==

G.
==

H.
==

I.
==

J. Journey of Taku \[\*Nero\]
=============================

题意：给一张n(&lt;= 1e5)点m(&lt;=
1e5)边的无向图，问从节点1使用魔法移动到节点n的最短时间。每次使用魔法消耗1单位时间。有两种魔法：1.使用上次走的边权来决定下一个走哪里。2.自由选边走。魔法2的使用要间隔至少K(&lt;=
1e5)次魔法1。

题解：倍增求一下从一条边的某个端点连续用魔法1走K步会到哪里，然后最短路即可。赛后重写1Y，确实不是难题。比赛时大概大脑恰好被宇宙射线击穿了吧...

K.
==

L.
==
