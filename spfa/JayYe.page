Contests
========

$x = \frac{{ - b \pm \sqrt {b^2 - 4ac} }}{{2a}}$ \$ x =
\frac{{ - b \pm \sqrt {b^2 - 4ac} }}{{2a}} \$

2015/11/12
----------

### Codeforces Round \#311 (Div. 2)

[Codeforces Round \#311 (Div.
2)](JayYe'/Codeforces%20Round%20311%20(Div.%202)) Done

2015/11/23
----------

### Educational Codeforces Round 1

[Educational Codeforces Round
1](JayYe'/Educational%20Codeforces%20Round%201) ~~A B C D E~~ F

2015/11/24
----------

### Codeforces Round 290 (Div. 1)

[Codeforces Round 290 (Div.
1)](JayYe'/Codeforces%20Round%20290%20(Div.%201)) ~~A B~~ C ~~D~~ E

2015/11/25
----------

### Codeforces Round 333 (Div. 1)

[Codeforces Round 333 (Div.
1)](JayYe'/Codeforces%20Round%20333%20(Div.%201)) ~~A B C D~~ E

2015/11/27
----------

### VK Cup 2015 - Round 1 (unofficial online mirror, Div. 1 only)

[VK Cup 2015 - Round 1 (unofficial online mirror, Div. 1
only)](JayYe'/VK%20Cup%202015%20-%20Round%201%20(unofficial%20online%20mirror,%20Div.%201%20only))
Done

Problems
========

2015/11/11
----------

### 2014 ACM/ICPC Asia Rigional Xian G The Problem to Slow Down You

[戳我](http://acm.hust.edu.cn/vjudge/contest/view.action?cid=93307#problem/G)

题意：给两个字符串A、B，问有多少对pair(substring of A, substring of
B)满足两个子串相同并且为回文串。

题解：回文自动机。对两个串分别建好自动机，然后dfs一遍即可，复杂度为O(n)。也可以用manacher+sa，但是复杂度和常数略大，在uvalive上TLE，在cf上4.3s过。

2015/11/16
----------

### CC-TMP01 To Queue or not to Queue

[戳](https://www.codechef.com/problems/TMP01)

题意：
给你个空串，有两种操作，一个是在串末尾加个字符，另一个是删除串头的第一个字符，问每次操作后的不同子串个数的和。

题解：
以前搞过这些题，我的做法是nlog\^2，是因为存在一些后缀串是另一些后缀串的前缀串导致我只能二分后再在线段树上搞。这题解决的精髓在于，维护好当前的所有没有前缀串关系的后缀串！于是，对于删除末尾字符，实际上少掉的子串个数即为当前维护的串的个数。对于增加字符，相当于是增加一个当前最长的后缀串，那么只需要看下这个后缀串的左边一个是不是它的前缀串，还有右边一个是不是它的前缀串，是的话就删掉。同时，这里有很重要的信息要记录，由于要保证所有后缀串都不是其他的后缀串的前缀，那么还需要维护好后缀串往左控制的串的个数和往右控制的串的个数，这样就能知道它什么时候会成为其它后缀串的前缀串。这些信息都可以在线段树上维护，然而我维护的常数比较大，最后换了种维护方式，用set加一些链表维护才2.1s过。

### HDU 5415 CRB and Substrings

题意： 给你一个串s，长度不超过1e5，有Q(Q &lt;=
10)次操作，每次操作询问K，问s的长度为k的子串中，最多的不同的子串个数为多少，字典序最小。

题解：
标解是后缀树，我用的是上面CC上那题的做法，然后把倍增的后缀数组改成dc3的后缀数组求法就2.6s过了，看来得备一份dc3的代码，st的话先备份模板，会用就好，上海赛区后再说。

2015/11/17
----------

### CF-587F Duff is Mad

题意： 给你n个串，总串长&lt;=1e5，然后有q次询问，每次询问l,r,k
表示求sigma(cal(i, k)) (l&lt;=i&lt;=r)，cal(i,
k)的含义为，第k个串中有多少个子串等于第i个串。 (n,q&lt;=1e5)

题解：
暴力大法好。设brute=sqrt(n)，对于那些询问数大于brute的串，由于这些串最多只有brute个，可以直接在ac自动机上dfs下fail树就可以搞出来了，每次复杂度是O(n)，处理这些串的总复杂度为O(nsqrt(n))。对于其他串，由于询问数最多只有brute个，所以可以在fail数上维护好出现的cnt\[l\]表示1\~l这些串出现了几次，然后就可以O(1)计算询问的结果，由于串只有n个，维护cnt数组可以分块维护，维护的总复杂度为O(nsqrt(n))，询问的总复杂度也是这个，于是做完了。

2015/11/18
----------

### HDU 5069 Harry And Biological Teacher

题意：
给你n个串，有m个询问，每次询问a的后缀和b的前缀完全匹配最长为多少长度。(n,
m,串总长 &lt;= 100000)

题解：
这是滔神出的题。可以用sa或者ac自动机，用sa的话，考虑处理a相同的所有询问，对a的所有后缀用height数组二分下可以知道包含这个后缀串的所有的后缀的起点区间，然后在线段树里维护区间最大值，那么对于a的每个询问b，只需要线段树单点查询下就是答案了。考虑ac自动机的话，直接在fail树上dfs一遍即可，对每个串用一个vector保存下根节点到当前结点的所有前缀长度，对于当前结点为尾结点的询问b,vector(b)的最后一个元素就是答案。

2015/11/19
----------

### Changchun C Play a game

题意：
给你一个长度为n的初始串，双人博弈，轮流删掉串头字符或者串尾字符，如果当前串为空或者为坏的串，那么当前这个人为输。给定坏串的集合m个坏串，然后有q次询问，每次询问l,r表示初始状态的串是s\[l...r\]先手赢还是输。
n, q &lt;= 40000 m &lt;= 10000，坏串总长 &lt;= 10000

题解：
ac自动机搞出所有坏串，然后O(n\^2)dp，显然会T，用bitset搞，不过状态不是正常的dp状态，dp\[i\]\[j\]表示s\[j...j+i-1\]的答案，于是这样子dp\[i\]就只由dp\[i-1\]转移了，于是就做完了。

2015/11/23
----------

### CF92 D String

[戳我啊](http://codeforces.com/contest/123/problem/D)

题意： 给你一个串s, |s| &lt;= 1e5，
对于所有s的不同的子串，如果这个子串出现了k次，对k次按照起始点排序后，对答案的贡献为不同的连续的该子串的个数，问所有的答案加起来是多少。

题解： 我刚开始的做法是比较暴力的，由于子串个数是n \^
2级别的，所以，对于出现 &gt;=
sqrt(n)的子串不会超过sqrt个，对于这些子串我二分下可以知道他们确切的数量。这里的最坏情况的复杂度是O(n*sqrt(n)*log)。然后对于出现次数
&lt;=
sqrt(n)的可以直接枚举出现次数来搞，这里的最坏复杂度也是一样的，于是这样子1.7s过了。而正解的话很简单，我没有把问题转化好，好好考虑下实际上会转化成有n个宽度为1的矩形合并在一起，高度为height\[i\]，然后求其中不同的矩形个数，用栈维护搞搞就好了，这样的话是30ms过的。

2015/11/24
----------

### HDU 5421 Victor and String

题意： 给你一个空串，接下来有n次操作，四种操作。 1：在串首前加一个字符c
2：在串尾后加一个字符c 3：询问不同的回文串个数 4：询问所有的回文串个数

题解：
用回文树可以做一直在串尾加字符的，在串首前加字符其实也差不多，不过算fail有些不同，实质上只要理解了回文树的，肯定会做了的。

### 2015 ACM/ICPC Asia Rigional Hefei F Matching Compressed String

题意：
给一个压缩串，只含括号数字和字母，括号外面数字表示x这个串重复出现x，然后给一个自动机和一些合法的结束状态，问初始状态0状态最后是不是能走到合法的结束状态。状态总数有1e3，串长1e4

题解：
对于每个括号，搞出从每一个状态出发会到达哪个状态，然后可以log搞出对于这个括号的每一个状态出发重复x次到达的状态，这样子总复杂度为O(1e7\*log)。比赛中写法比较麻烦，坑了队伍，赛后是半小时过的。下次写题要想清楚做法，并且提高代码直接的正确性。

### 2015 ACM/ICPC Asia Rigional Hefei G Alice's Classified Message

题意： 给你长度为n(n &lt;= 1e5)的串，初始一个i =
0，对于i来说，找到个最大的k和j使得 s\[i...i+k-1\] = s\[j...j+k-1\], j
&lt; i，如果有，i += k，否则i +=
1，中间输出k和j的值，如果没有找到，则输出-1和s\[i\]的ASCII码。

题解：
对串建好后缀数组，直接枚举i，然后把rk\[i\]插入set里来计算k，然后二分计算出lcp
&gt;= k的区间，然后rmq询问出j，就搞完啦。
