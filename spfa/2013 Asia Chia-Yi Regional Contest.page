A. Lucky Number\[Bobo\]
=======================

简单题，用一个树状数组维护下就行了。

B. Flow Game\[Bobo\]
====================

题意：
10\~\*\~10格子上有两个点对，求把两个点对连起来的最小代价，路线不能相交

题解：
考虑到最优构造方案肯定是其中一条是最短路，所以枚举下哪条是最短路然后bfs()下就行。

C. Toy Boxes\[Bobo\]
====================

题意： 把N个有权之物品放入到三个Box中，问:
$\sum{每个Box中权值和 * 个数}$ 最小。

题解：
通过列方程发现其实问题是转换成：排好序之后切两刀最小。所以，直接枚举第一刀，另外一刀三分即可。

D. Computing Inverses \[JayYe\]
===============================

题意： 给你模2意义下的多项式a，求一个多项式b满足a\*b在模多项式h下等于1。

题解：
由于h长度小于20，直接枚举所有小于等于h长度的多项式判断是否可行即可，坑点在于正向枚举不能过，反向枚举就过了，然而好像反向枚举也没有保证字典序最大或者最小，有点玄学。

E. A Generalized N-Queens Problem \[Nero\]
==========================================

题意：n \* n (n &lt;=
10)的网格，类似n皇后问题，问最多能放几个皇后。网格里存在一些障碍，可以挡住皇后。

题解：大力搜。点度&lt;=1的点直接贪掉，加上全局最优化剪枝，就过了。

F. Homework Evaluation \[JayYe\]
================================

题意：给一个串s和子串t，t是由s的子串得到的，告诉匹配字符不匹配字符和丢失字符新增字符之类的各种增益，问最大增益是多少。

题解：设dp\[i\]\[j\]表示母串s匹配到i，子串t匹配到j的最大增益，max{dp\[i\]\[m\]}即为答案。

G. Sightseeing Bus Drivers \[JayYe\]
====================================

题意：
给你xi、yi(1&lt;=i&lt;=n)和t，问重新匹配xi和yi后，所有满足xi+yi&gt;=t的xi+yi-t的总和最小为多少。

题解：
比赛中水题想搓了，这种题还是直接考虑两对该如何匹配就好，依次让最大的xi和最小的yi匹配即可。

H. Surrounding a house \[Nero\]
===============================

题意：n \* m (n \* m &lt;=
40000)的网格，格子有非负权。找到一个最小的环把(1,1)套起来。要求环外的部分(如果存在)得是一个连通块。

题解：那么从(2,0)和(0,2)分别跑最短路，限制是
节点离开边界就不能再回到边界上。然后把这两个合并一下就是答案了。比赛时由于数据有误没过，然而其实是ac了的。

I. Robin Hood Transformation
============================

J. Pirate's Treasure \[Nero\]
=============================

题意：有一张藏宝图，被分成K(&lt;=
500)个碎片，每个碎片有一个复制。这2K个碎片被放到n(&lt;=
1e5)个上锁的箱子里。共有m(&lt;=
1e5)把不同的钥匙，每把钥匙只能使用一次。打开每个箱子需要特定的若干把钥匙。每把钥匙能开的箱子不超过10个。问是否存在一个开箱子的序列使得能够获得完整的藏宝图。输出字典序最小解。

题解：裸的two-sat。使用lrj的板子就可以搞定字典序的问题了。

K. Minimum-upset tournaments
============================
