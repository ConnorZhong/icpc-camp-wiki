**A Ball**

**B color**

**C color II**

给你$n$个点$(n<=18)$，在给你一个邻接矩阵，让你求出你所有点的非空子集中构成的图，最少需要几种颜色去染才能保证任意一条边的两个点颜色都不同
独立集中的任意两点都是无关系的，所以考虑把独立集预处理出来，然后进行状压$dp_i = min(dp_{i\ |\ j} + 1)$
(如果j集合是独立集)，可以用子集枚举子集的方法，复杂度$O(3^n)$
还有一种更优的方法，把独立集预处理出来，然后考虑一个集合是由多个独立集合并而成的，所需要颜色数就是合并的独立集个数，而颜色最多只有$n$种，那么可以对独立集做$n$次或卷积，就可以预处理出$f(x,s)$表示s集合需要x种颜色能否成立，就可以得到所有答案，然后关于或卷积，可以使用一个FWT(快速威尔士变换)进行处理

**D Graph**

**E permu**

$f(i, j)$表示全排列为$i$，最后一次移动为$j$的状态，然后这个状态要转移到下一个状态，就枚举一下$j$要放到之后的哪个位置，交换过程按照不断和后面最大的数字进行交换，这样去建一个拓扑图，然后在拓扑图上进行一个dp即可

**F physics**

**G Rikka with Paranthesis**

步数只有0、1、2三种情况，0为卡特兰数，1为$2 * C_n^{\frac{n}{2}}$，2为所有情况减去0和1的情况，然后需要一个大组合数取模任意数的模板即可

**H Rikka with Sequence**

**I Rikka with Subset**

给你一个数组，选一个子集出来，子集的价值是前$k$大的元素的和，问所有子集的每个$k$的总价值是多少
把数组排序，那么第$i$个数字的成为第$k$大的贡献为，比他小的$i - 1$个随便选，比他大的选$k - 1$个
$f_k = \sum{2^{i- 1} * C_{n - i}^{k - 1} * a_i}$，这是是一个卷积形式，并且本题的模数特殊，显然可以用ntt进行优化
$F$为阶乘，$rF$为阶乘的逆元 拆分一下式子得到
$f_k = \sum{2^{i - 1} * F_{n - i} * a_i * rF_{n - i - k + 1} * rF_{k - 1}}$
把$2^{i - 1} * F_{n - i} * a_i$ 和 $rf_{n - i - k + 1}$
做一个卷积即可，最后在乘上$rF_{k - 1}$。然后由于求的是要前$k$大的，所以在求一下前缀和即可。

**J Rikka with Subset II**

**K Rikka with Parenthesis II**
