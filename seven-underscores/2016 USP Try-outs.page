**A.Renzo and the lost artifact**

**B.Buffaloes**

可以考虑如何求出最长下降子序列为3或为4的序列数$x$，答案即为$n!-x$
考虑一个序列的构造，可以从小到大插入数字来进行构造，那么用数组$f[i][j][k][l]$表示插入到第i个数字后，
有在$l$个位置插入会出现长度为$2$的下降子序列，在$k$个位置插入会出现长度为$3$的下降子序列，在$j$个位置插入会出现长度为$4$的下降子序列。
这样复杂度是$O(n^5)$，不过由于$i+j+k<=n$因此实际复杂度不会那么高，$n=60$的情况下，即使不打表也可以在一秒内出解。

**C.Cahokia ruins**

扫描一遍，答案为$min(m-a[i]-b[i])/2$

**D.Black Hills golden jewels**

将数字排序，然后二分答案，统计一下满足条件的数字对数。

**E.A Word to Trump All**

**F.Metal detector**

考虑激光头扫描到的人物的奇偶性，然后看看i的奇偶性和激光头的奇偶性是否相同，相同这一轮内能得出解，
否则人数必定缩小一半，然后将i重编号，且重新定义激光头奇偶性，复杂度$O(logn)$

**G.The Declaration of Independence**

题意就是维护一个可持久化队列，随便维护下即可。

**H.Pop Divas**

先将所有数字取个log，然后计算出其中一个集合的数值，排序一下。在枚举另一个集合的情况，对于每种情况在
排序的集合中二分一下。

**I.Protecting the Central Park**

首先对于一颗偶数条边的树，它的边是很好进行配对的，只要贪心的将一个点的儿子两两配对，如果有多余一个儿子，就将其与父亲节点进配对。那么考虑如何将原图转化成一棵树
转化也很简单，对于返祖边，可以将返祖边连接的点新建一个虚点，这样就转化成一棵树了。复杂度$O(n)$

**J.King of Tokyo**

**K.Mount Rushmore and Birthdays**

求出最小的x，满足$(n-1)!/(n-x-1)!<0.5$。

**L.The Knapsack problem**
