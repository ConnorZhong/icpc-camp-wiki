A.run [zlc]
==
水

B.discount [补:wjy,zlc]
==
wjy:对于第二种折扣连有向边。n个点每个点出度为1，构成基环内向森林。dp以某点为根的子树，其子树上所有饮料至少一瓶的最小花费，以及使用该点的第二种折扣的最小花费。对于环，将其拆开，只有两种情况：①起点由终点使用第二种折扣得到。②起点非终点使用第二种折扣得到。分别修改起点的边界值以类似树上的DP的方式进行链上dp即可。

zlc:做法一样，我是拓扑排序同时 $DP$ 的，写了一年。。还是直接 $dfs$ 好写

C. message [补:wjy,zlc]
==
wjy:列出交点坐标后，就将原问题转化为了给定若干点，查询某点与其的最小斜率。对于一些点按x排序后，就只需从左向右维护一个凸包（易证取值一定在凸包上），遇到询问就在凸包上二分答案。注意到每次询问会有一部分点在其右侧，处理方法为以零点中心对称，再按上述方式处理一次即可。

zlc:也是写了好久，左右各做一遍三分答案，忘了真的可以二分

D.money [zlc]
==
水

E.tree [补:wjy,zlc]
==
注意到询问的c大小最大只有c，并且dp时加入某点的操作，对其进行逆运算即为删除某点。因此对于这些操作可以先将其不超过10级的祖先逆序逐个去掉（逐层去掉子树）。修改某点值后只需再依次加回。修改父亲只需将原本去掉的子树加回，将加到的父亲结点及其不超过10级的祖先取下，加入该点，再依次加回。查询操作，因为dp时记录的是以某点为根节点的子树的答案。只需将查询的点移动到根。e.g.a要移动到b的位置（此时b是a的父亲），先去掉b中a的信息，再在a上加入b即可。

F.trade [补:zlc]
==
[在牛客写了题解](https://www.nowcoder.com/discuss/87766?type=101&order=0&pos=3&page=0)

计算几何 + 网络流，然后复杂度就是 $n * m * (n / 32 + k) + n * \sqrt{ (n^2) }$

G. transform [wjy]
==
注意到当集中点由左向右移时，最优的移动区间也在从左向右不减的移动。从左到右扫集中点，使用双指针维护最优的区间即可。

H. travel [zlc]
==
做法是树上 $dp$，$dp[x][i][k]$ 表示 $x$ 位置，子树 $i$ 条链，$k$ 代表是否有向下的有一条链，然后 $DP$ 即可

I. car [zlc]
==

明显看出大风车最优，所以分奇偶判一下即可

J. fram [zlc]
==

给每个点随机一个权值，然后求个前缀和

或者按颜色算，二维区间点数，差分一下即可

K.carpet [补:wjy,zlc]
==
wjy：最小值一定在子矩阵最小时取得。哈希一下每行每列，使用kmp求出最小的循环节。就转化为了最小化某给定大小子矩阵最大值的问题。使用单调队列即可。

zlc：当时想到了，然后没时间写了，以后练手速

Summary
=======

zlc：手速太慢，经常写挂。需要加强练习